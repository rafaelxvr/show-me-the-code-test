{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component, isUndefined, Browser, compile, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Property, NotifyPropertyChanges, ChildProperty, Complex } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, KeyboardEvents } from '@syncfusion/ej2-base';\nimport { rippleEffect, Animation, remove } from '@syncfusion/ej2-base';\nimport { Draggable, Droppable } from '@syncfusion/ej2-base';\nimport { getElement } from '@syncfusion/ej2-base';\nimport { addClass, removeClass, closest, matches, detach, select, selectAll, isVisible, append } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined as isNOU, Touch, getValue, setValue, extend, merge, attributes } from '@syncfusion/ej2-base';\nimport { ListBase } from '@syncfusion/ej2-lists';\nimport { createCheckBox, rippleMouseHandler } from '@syncfusion/ej2-buttons';\nimport { Input } from '@syncfusion/ej2-inputs';\nimport { createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nvar ROOT = 'e-treeview';\nvar CONTROL = 'e-control';\nvar COLLAPSIBLE = 'e-icon-collapsible';\nvar EXPANDABLE = 'e-icon-expandable';\nvar LISTITEM = 'e-list-item';\nvar LISTTEXT = 'e-list-text';\nvar LISTWRAP = 'e-text-wrap';\nvar IELISTWRAP = 'e-ie-wrap';\nvar PARENTITEM = 'e-list-parent';\nvar HOVER = 'e-hover';\nvar ACTIVE = 'e-active';\nvar LOAD = 'e-icons-spinner';\nvar PROCESS = 'e-process';\nvar ICON = 'e-icons';\nvar TEXTWRAP = 'e-text-content';\nvar INPUT = 'e-input';\nvar INPUTGROUP = 'e-input-group';\nvar TREEINPUT = 'e-tree-input';\nvar EDITING = 'e-editing';\nvar RTL = 'e-rtl';\nvar INTERACTION = 'e-interaction';\nvar DRAGITEM = 'e-drag-item';\nvar DROPPABLE = 'e-droppable';\nvar DRAGGING = 'e-dragging';\nvar SIBLING = 'e-sibling';\nvar DROPIN = 'e-drop-in';\nvar DROPNEXT = 'e-drop-next';\nvar DROPOUT = 'e-drop-out';\nvar NODROP = 'e-no-drop';\nvar FULLROWWRAP = 'e-fullrow-wrap';\nvar FULLROW = 'e-fullrow';\nvar SELECTED = 'e-selected';\nvar EXPANDED = 'e-expanded';\nvar NODECOLLAPSED = 'e-node-collapsed';\nvar DISABLE = 'e-disable';\nvar DROPCOUNT = 'e-drop-count';\nvar CHECK = 'e-check';\nvar INDETERMINATE = 'e-stop';\nvar CHECKBOXWRAP = 'e-checkbox-wrapper';\nvar CHECKBOXFRAME = 'e-frame';\nvar CHECKBOXRIPPLE = 'e-ripple-container';\nvar RIPPLE = 'e-ripple';\nvar RIPPLEELMENT = 'e-ripple-element';\nvar FOCUS = 'e-node-focus';\nvar IMAGE = 'e-list-img';\nvar BIGGER = 'e-bigger';\nvar SMALL = 'e-small';\nvar CHILD = 'e-has-child';\nvar ITEM_ANIMATION_ACTIVE = 'e-animation-active';\nvar DISABLED = 'e-disabled';\nvar treeAriaAttr = {\n  treeRole: 'tree',\n  itemRole: 'treeitem',\n  listRole: 'group',\n  itemText: '',\n  wrapperRole: ''\n};\n/**\n * Configures the fields to bind to the properties of node in the TreeView component.\n */\n\nvar FieldsSettings =\n/** @class */\nfunction (_super) {\n  __extends(FieldsSettings, _super);\n\n  function FieldsSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('child')], FieldsSettings.prototype, \"child\", void 0);\n\n  __decorate([Property([])], FieldsSettings.prototype, \"dataSource\", void 0);\n\n  __decorate([Property('expanded')], FieldsSettings.prototype, \"expanded\", void 0);\n\n  __decorate([Property('hasChildren')], FieldsSettings.prototype, \"hasChildren\", void 0);\n\n  __decorate([Property('htmlAttributes')], FieldsSettings.prototype, \"htmlAttributes\", void 0);\n\n  __decorate([Property('iconCss')], FieldsSettings.prototype, \"iconCss\", void 0);\n\n  __decorate([Property('id')], FieldsSettings.prototype, \"id\", void 0);\n\n  __decorate([Property('imageUrl')], FieldsSettings.prototype, \"imageUrl\", void 0);\n\n  __decorate([Property('isChecked')], FieldsSettings.prototype, \"isChecked\", void 0);\n\n  __decorate([Property('parentID')], FieldsSettings.prototype, \"parentID\", void 0);\n\n  __decorate([Property(null)], FieldsSettings.prototype, \"query\", void 0);\n\n  __decorate([Property('selected')], FieldsSettings.prototype, \"selected\", void 0);\n\n  __decorate([Property(null)], FieldsSettings.prototype, \"tableName\", void 0);\n\n  __decorate([Property('text')], FieldsSettings.prototype, \"text\", void 0);\n\n  __decorate([Property('tooltip')], FieldsSettings.prototype, \"tooltip\", void 0);\n\n  __decorate([Property('navigateUrl')], FieldsSettings.prototype, \"navigateUrl\", void 0);\n\n  return FieldsSettings;\n}(ChildProperty);\n\nexport { FieldsSettings };\n/**\n * Configures animation settings for the TreeView component.\n */\n\nvar ActionSettings =\n/** @class */\nfunction (_super) {\n  __extends(ActionSettings, _super);\n\n  function ActionSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property('SlideDown')], ActionSettings.prototype, \"effect\", void 0);\n\n  __decorate([Property(400)], ActionSettings.prototype, \"duration\", void 0);\n\n  __decorate([Property('linear')], ActionSettings.prototype, \"easing\", void 0);\n\n  return ActionSettings;\n}(ChildProperty);\n\nexport { ActionSettings };\n/**\n * Configures the animation settings for expanding and collapsing nodes in TreeView.\n */\n\nvar NodeAnimationSettings =\n/** @class */\nfunction (_super) {\n  __extends(NodeAnimationSettings, _super);\n\n  function NodeAnimationSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Complex({\n    effect: 'SlideUp',\n    duration: 400,\n    easing: 'linear'\n  }, ActionSettings)], NodeAnimationSettings.prototype, \"collapse\", void 0);\n\n  __decorate([Complex({\n    effect: 'SlideDown',\n    duration: 400,\n    easing: 'linear'\n  }, ActionSettings)], NodeAnimationSettings.prototype, \"expand\", void 0);\n\n  return NodeAnimationSettings;\n}(ChildProperty);\n\nexport { NodeAnimationSettings };\n/**\n * The TreeView component is used to represent hierarchical data in a tree like structure with advanced\n * functions to perform edit, drag and drop, selection with check-box, and more.\n * ```html\n *  <div id=\"tree\"></div>\n * ```\n * ```typescript\n *  let treeObj: TreeView = new TreeView();\n *  treeObj.appendTo('#tree');\n * ```\n */\n\nvar TreeView =\n/** @class */\nfunction (_super) {\n  __extends(TreeView, _super);\n\n  function TreeView(options, element) {\n    var _this = _super.call(this, options, element) || this;\n\n    _this.isRefreshed = false;\n    _this.preventExpand = false;\n    _this.checkedElement = [];\n    _this.disableNode = []; // eslint-disable-next-line\n\n    _this.validArr = [];\n    _this.validNodes = [];\n    _this.expandChildren = [];\n    _this.isFieldChange = false;\n    _this.changeDataSource = false;\n    _this.hasTemplate = false;\n    _this.isFirstRender = false;\n    _this.mouseDownStatus = false;\n    return _this;\n  }\n\n  TreeView_1 = TreeView;\n  /**\n   * Get component name.\n   *\n   * @returns {string} - returns module name.\n   * @private\n   */\n\n  TreeView.prototype.getModuleName = function () {\n    return 'treeview';\n  };\n  /**\n   * Initialize the event handler\n   *\n   * @returns {void}\n   */\n\n\n  TreeView.prototype.preRender = function () {\n    var _this = this;\n\n    this.checkActionNodes = [];\n    this.parentNodeCheck = [];\n    this.dragStartAction = false;\n    this.isAnimate = false;\n    this.keyConfigs = {\n      escape: 'escape',\n      end: 'end',\n      enter: 'enter',\n      f2: 'f2',\n      home: 'home',\n      moveDown: 'downarrow',\n      moveLeft: 'leftarrow',\n      moveRight: 'rightarrow',\n      moveUp: 'uparrow',\n      ctrlDown: 'ctrl+downarrow',\n      ctrlUp: 'ctrl+uparrow',\n      ctrlEnter: 'ctrl+enter',\n      ctrlHome: 'ctrl+home',\n      ctrlEnd: 'ctrl+end',\n      ctrlA: 'ctrl+A',\n      shiftDown: 'shift+downarrow',\n      shiftUp: 'shift+uparrow',\n      shiftEnter: 'shift+enter',\n      shiftHome: 'shift+home',\n      shiftEnd: 'shift+end',\n      csDown: 'ctrl+shift+downarrow',\n      csUp: 'ctrl+shift+uparrow',\n      csEnter: 'ctrl+shift+enter',\n      csHome: 'ctrl+shift+home',\n      csEnd: 'ctrl+shift+end',\n      space: 'space'\n    };\n    this.listBaseOption = {\n      expandCollapse: true,\n      showIcon: true,\n      expandIconClass: EXPANDABLE,\n      ariaAttributes: treeAriaAttr,\n      expandIconPosition: 'Left',\n      itemCreated: function (e) {\n        _this.beforeNodeCreate(e);\n      },\n      enableHtmlSanitizer: this.enableHtmlSanitizer,\n      itemNavigable: this.fullRowNavigable\n    };\n    this.updateListProp(this.fields);\n    this.aniObj = new Animation({});\n    this.treeList = [];\n    this.isLoaded = false;\n    this.isInitalExpand = false;\n    this.expandChildren = [];\n    this.index = 0;\n    this.setTouchClass();\n\n    if (isNOU(this.selectedNodes)) {\n      this.setProperties({\n        selectedNodes: []\n      }, true);\n    }\n\n    if (isNOU(this.checkedNodes)) {\n      this.setProperties({\n        checkedNodes: []\n      }, true);\n    }\n\n    if (isNOU(this.expandedNodes)) {\n      this.setProperties({\n        expandedNodes: []\n      }, true);\n    } else {\n      this.isInitalExpand = true;\n    }\n  };\n  /**\n   * Get the properties to be maintained in the persisted state.\n   *\n   * @returns {string} - returns the persisted data\n   * @hidden\n   */\n\n\n  TreeView.prototype.getPersistData = function () {\n    var keyEntity = ['selectedNodes', 'checkedNodes', 'expandedNodes'];\n    return this.addOnPersist(keyEntity);\n  };\n  /**\n   * To Initialize the control rendering\n   *\n   * @private\n   * @returns {void}\n   */\n\n\n  TreeView.prototype.render = function () {\n    this.initialRender = true;\n    this.initialize();\n    this.setDataBinding(false);\n    this.setDisabledMode();\n    this.setExpandOnType();\n\n    if (!this.disabled) {\n      this.setRipple();\n    }\n\n    this.wireEditingEvents(this.allowEditing);\n    this.setDragAndDrop(this.allowDragAndDrop);\n\n    if (!this.disabled) {\n      this.wireEvents();\n    }\n\n    this.initialRender = false;\n    this.renderComplete();\n  };\n\n  TreeView.prototype.initialize = function () {\n    this.element.setAttribute('role', 'tree');\n    this.element.setAttribute('tabindex', '0');\n    this.element.setAttribute('aria-activedescendant', this.element.id + '_active');\n    this.setCssClass(null, this.cssClass);\n    this.setEnableRtl();\n    this.setFullRow(this.fullRowSelect);\n    this.setTextWrap();\n    this.nodeTemplateFn = this.templateComplier(this.nodeTemplate);\n  };\n\n  TreeView.prototype.setDisabledMode = function () {\n    if (this.disabled) {\n      this.element.classList.add(DISABLED);\n    } else {\n      this.element.classList.remove(DISABLED);\n    }\n  };\n\n  TreeView.prototype.setEnableRtl = function () {\n    (this.enableRtl ? addClass : removeClass)([this.element], RTL);\n  };\n\n  TreeView.prototype.setRipple = function () {\n    var tempStr = '.' + FULLROW + ',.' + TEXTWRAP;\n    var rippleModel = {\n      selector: tempStr,\n      ignore: '.' + TEXTWRAP + ' > .' + ICON + ',.' + INPUTGROUP + ',.' + INPUT + ', .' + CHECKBOXWRAP\n    };\n    this.rippleFn = rippleEffect(this.element, rippleModel);\n    var iconModel = {\n      selector: '.' + TEXTWRAP + ' > .' + ICON,\n      isCenterRipple: true\n    };\n    this.rippleIconFn = rippleEffect(this.element, iconModel);\n  };\n\n  TreeView.prototype.setFullRow = function (isEnabled) {\n    (isEnabled ? addClass : removeClass)([this.element], FULLROWWRAP);\n  };\n\n  TreeView.prototype.setMultiSelect = function (isEnabled) {\n    var firstUl = select('.' + PARENTITEM, this.element);\n\n    if (isEnabled) {\n      firstUl.setAttribute('aria-multiselectable', 'true');\n    } else {\n      firstUl.removeAttribute('aria-multiselectable');\n    }\n  }; // eslint-disable-next-line\n\n\n  TreeView.prototype.templateComplier = function (template) {\n    if (template) {\n      this.hasTemplate = true; // eslint-disable-next-line\n\n      var e = void 0;\n      this.element.classList.add(INTERACTION);\n\n      try {\n        if (document.querySelectorAll(template).length) {\n          return compile(document.querySelector(template).innerHTML.trim());\n        } else {\n          return compile(template);\n        }\n      } catch (e) {\n        return compile(template);\n      }\n    }\n\n    this.element.classList.remove(INTERACTION);\n    return undefined;\n  };\n\n  TreeView.prototype.setDataBinding = function (changeDataSource) {\n    var _this = this;\n\n    this.treeList.push('false');\n\n    if (this.fields.dataSource instanceof DataManager) {\n      /* eslint-disable */\n      this.isOffline = this.fields.dataSource.dataSource.offline;\n\n      if (this.fields.dataSource.ready) {\n        this.fields.dataSource.ready.then(function (e) {\n          /* eslint-disable */\n          _this.isOffline = _this.fields.dataSource.dataSource.offline;\n\n          if (_this.fields.dataSource instanceof DataManager && _this.isOffline) {\n            _this.treeList.pop();\n\n            _this.treeData = e.result;\n            _this.isNumberTypeId = _this.getType();\n\n            _this.setRootData();\n\n            _this.renderItems(true);\n\n            if (_this.treeList.length === 0 && !_this.isLoaded) {\n              _this.finalize();\n            }\n          }\n        }).catch(function (e) {\n          _this.trigger('actionFailure', {\n            error: e\n          });\n        });\n      } else {\n        this.fields.dataSource.executeQuery(this.getQuery(this.fields)).then(function (e) {\n          _this.treeList.pop();\n\n          _this.treeData = e.result;\n          _this.isNumberTypeId = _this.getType();\n\n          _this.setRootData();\n\n          if (changeDataSource) {\n            _this.changeDataSource = true;\n          }\n\n          _this.renderItems(true);\n\n          _this.changeDataSource = false;\n\n          if (_this.treeList.length === 0 && !_this.isLoaded) {\n            _this.finalize();\n          }\n        }).catch(function (e) {\n          _this.trigger('actionFailure', {\n            error: e\n          });\n        });\n      }\n    } else {\n      this.treeList.pop();\n\n      if (isNOU(this.fields.dataSource)) {\n        this.rootData = this.treeData = [];\n      } else {\n        this.treeData = JSON.parse(JSON.stringify(this.fields.dataSource));\n        this.setRootData();\n      }\n\n      this.isNumberTypeId = this.getType();\n      this.renderItems(false);\n    }\n\n    if (this.treeList.length === 0 && !this.isLoaded) {\n      this.finalize();\n    }\n  };\n\n  TreeView.prototype.getQuery = function (mapper, value) {\n    if (value === void 0) {\n      value = null;\n    }\n\n    var columns = [];\n    var query;\n\n    if (!mapper.query) {\n      query = new Query();\n      var prop = this.getActualProperties(mapper);\n\n      for (var _i = 0, _a = Object.keys(prop); _i < _a.length; _i++) {\n        var col = _a[_i];\n\n        if (col !== 'dataSource' && col !== 'tableName' && col !== 'child' && !!mapper[col] && col !== 'url' && columns.indexOf(mapper[col]) === -1) {\n          columns.push(mapper[col]);\n        }\n      }\n\n      query.select(columns);\n\n      if (prop.hasOwnProperty('tableName')) {\n        query.from(mapper.tableName);\n      }\n    } else {\n      query = mapper.query.clone();\n    }\n\n    ListBase.addSorting(this.sortOrder, mapper.text, query);\n\n    if (!isNOU(value) && !isNOU(mapper.parentID)) {\n      query.where(mapper.parentID, 'equal', this.isNumberTypeId ? parseFloat(value) : value);\n    }\n\n    return query;\n  };\n\n  TreeView.prototype.getType = function () {\n    return this.treeData[0] ? typeof getValue(this.fields.id, this.treeData[0]) === 'number' ? true : false : false;\n  };\n\n  TreeView.prototype.setRootData = function () {\n    this.dataType = this.getDataType(this.treeData, this.fields);\n\n    if (this.dataType === 1) {\n      this.groupedData = this.getGroupedData(this.treeData, this.fields.parentID);\n      var rootItems = this.getChildNodes(this.treeData, undefined, true);\n\n      if (isNOU(rootItems)) {\n        this.rootData = [];\n      } else {\n        this.rootData = rootItems;\n      }\n    } else {\n      this.rootData = this.treeData;\n    }\n  };\n\n  TreeView.prototype.renderItems = function (isSorted) {\n    /* eslint-disable */\n    this.listBaseOption.ariaAttributes.level = 1;\n    var sortedData = this.getSortedData(this.rootData);\n    this.ulElement = ListBase.createList(this.createElement, isSorted ? this.rootData : sortedData, this.listBaseOption);\n    this.element.appendChild(this.ulElement);\n    var rootNodes = this.ulElement.querySelectorAll('.e-list-item');\n\n    if (this.loadOnDemand === false) {\n      var i = 0;\n\n      while (i < rootNodes.length) {\n        this.renderChildNodes(rootNodes[i], true, null, true);\n        i++;\n      }\n    }\n\n    var parentEle = selectAll('.' + PARENTITEM, this.element);\n\n    if (parentEle.length === 1 && rootNodes && rootNodes.length !== 0 || this.loadOnDemand) {\n      this.finalizeNode(this.element);\n    }\n\n    this.parentNodeCheck = [];\n    this.parentCheckData = [];\n    this.updateCheckedStateFromDS();\n\n    if (this.autoCheck && this.showCheckBox && !this.isLoaded) {\n      this.updateParentCheckState();\n    }\n  };\n  /**\n   * Update the checkedNodes from datasource at initial rendering\n   */\n\n\n  TreeView.prototype.updateCheckedStateFromDS = function (id) {\n    this.validNodes = [];\n\n    if (this.treeData && this.showCheckBox) {\n      if (this.dataType === 1) {\n        var mapper = this.fields;\n        var resultData = new DataManager(this.treeData).executeLocal(new Query().where(mapper.isChecked, 'equal', true, false));\n\n        for (var i = 0; i < resultData.length; i++) {\n          var resultId = resultData[i][this.fields.id] ? resultData[i][this.fields.id].toString() : null;\n          var resultPId = resultData[i][this.fields.parentID] ? resultData[i][this.fields.parentID].toString() : null;\n\n          if (this.checkedNodes.indexOf(resultId) === -1 && !this.isLoaded) {\n            this.checkedNodes.push(resultId);\n          }\n\n          if (resultData[i][this.fields.hasChildren]) {\n            var id_1 = resultData[i][this.fields.id];\n            var childData = new DataManager(this.treeData).executeLocal(new Query().where(mapper.parentID, 'equal', id_1, false));\n\n            for (var child = 0; child < childData.length; child++) {\n              var childId = childData[child][this.fields.id] ? childData[child][this.fields.id].toString() : null;\n\n              if (this.checkedNodes.indexOf(childId) === -1 && this.autoCheck) {\n                this.checkedNodes.push(childId);\n              }\n            }\n          }\n        }\n\n        for (var i = 0; i < this.checkedNodes.length; i++) {\n          var mapper_1 = this.fields;\n          var checkState = new DataManager(this.treeData).executeLocal(new Query().where(mapper_1.id, 'equal', this.checkedNodes[i], true));\n\n          if (checkState[0] && this.autoCheck) {\n            this.getCheckedNodeDetails(mapper_1, checkState);\n            this.checkIndeterminateState(checkState[0]);\n          }\n\n          if (checkState.length > 0) {\n            var checkedId = checkState[0][this.fields.id] ? checkState[0][this.fields.id].toString() : null;\n\n            if (this.checkedNodes.indexOf(checkedId) > -1 && this.validNodes.indexOf(checkedId) === -1) {\n              this.validNodes.push(checkedId);\n            }\n          }\n\n          var checkedData = new DataManager(this.treeData).executeLocal(new Query().where(mapper_1.parentID, 'equal', this.checkedNodes[i], true));\n\n          for (var index = 0; index < checkedData.length; index++) {\n            var checkedId = checkedData[index][this.fields.id] ? checkedData[index][this.fields.id].toString() : null;\n\n            if (this.checkedNodes.indexOf(checkedId) === -1 && this.autoCheck) {\n              this.checkedNodes.push(checkedId);\n            }\n\n            if (this.checkedNodes.indexOf(checkedId) > -1 && this.validNodes.indexOf(checkedId) === -1) {\n              this.validNodes.push(checkedId);\n            }\n          }\n        }\n      } else if (this.dataType === 2 || this.fields.dataSource instanceof DataManager && this.isOffline) {\n        for (var index = 0; index < this.treeData.length; index++) {\n          var fieldId = this.treeData[index][this.fields.id] ? this.treeData[index][this.fields.id].toString() : '';\n\n          if (this.treeData[index][this.fields.isChecked] && !this.isLoaded && this.checkedNodes.indexOf(fieldId) === -1) {\n            this.checkedNodes.push(fieldId);\n          }\n\n          if (this.checkedNodes.indexOf(fieldId) > -1 && this.validNodes.indexOf(fieldId) === -1) {\n            this.validNodes.push(fieldId);\n          }\n\n          var childItems = getValue(this.fields.child.toString(), this.treeData[index]);\n\n          if (childItems) {\n            this.updateChildCheckState(childItems, this.treeData[index]);\n          }\n        }\n\n        this.validNodes = this.enablePersistence ? this.checkedNodes : this.validNodes;\n      }\n\n      this.setProperties({\n        checkedNodes: this.validNodes\n      }, true);\n    }\n  };\n  /**\n   * To check whether the list data has sub child and to change the parent check state accordingly\n   */\n\n\n  TreeView.prototype.getCheckedNodeDetails = function (mapper, checkNodes) {\n    var id = checkNodes[0][this.fields.parentID] ? checkNodes[0][this.fields.parentID].toString() : null;\n    var count = 0;\n    var element = this.element.querySelector('[data-uid=\"' + checkNodes[0][this.fields.id] + '\"]');\n    var parentEle = this.element.querySelector('[data-uid=\"' + checkNodes[0][this.fields.parentID] + '\"]');\n\n    if (!element && !parentEle) {\n      var len = this.parentNodeCheck.length;\n\n      if (this.parentNodeCheck.indexOf(id) === -1) {\n        this.parentNodeCheck.push(id);\n      }\n\n      var childNodes = this.getChildNodes(this.treeData, id);\n\n      for (var i = 0; i < childNodes.length; i++) {\n        var childId = childNodes[i][this.fields.id] ? childNodes[i][this.fields.id].toString() : null;\n\n        if (this.checkedNodes.indexOf(childId) !== -1) {\n          count++;\n        }\n\n        if (count === childNodes.length && this.checkedNodes.indexOf(id) === -1) {\n          this.checkedNodes.push(id);\n        }\n      }\n\n      var preElement = new DataManager(this.treeData).executeLocal(new Query().where(mapper.id, 'equal', id, true));\n      this.getCheckedNodeDetails(mapper, preElement);\n    } else if (parentEle) {\n      var check = select('.' + CHECK, parentEle);\n\n      if (!check) {\n        this.changeState(parentEle, 'indeterminate', null, true, true);\n      }\n    }\n  };\n  /**\n   * Update the checkedNodes and parent state when all the child Nodes are in checkedstate at initial rendering\n   */\n\n\n  TreeView.prototype.updateParentCheckState = function () {\n    var indeterminate = selectAll('.' + INDETERMINATE, this.element);\n    var childCheckedElement;\n\n    for (var i = 0; i < indeterminate.length; i++) {\n      var node = closest(indeterminate[i], '.' + LISTITEM);\n      var nodeId = node.getAttribute('data-uid').toString();\n\n      if (this.dataType === 1) {\n        childCheckedElement = new DataManager(this.treeData).executeLocal(new Query().where(this.fields.parentID, 'equal', nodeId, true));\n      } else {\n        childCheckedElement = this.getChildNodes(this.treeData, nodeId);\n      }\n\n      var count = 0;\n\n      if (childCheckedElement) {\n        for (var j = 0; j < childCheckedElement.length; j++) {\n          var childId = childCheckedElement[j][this.fields.id].toString();\n\n          if (this.checkedNodes.indexOf(childId) !== -1) {\n            count++;\n          }\n        }\n\n        if (count === childCheckedElement.length) {\n          var nodeCheck = node.getAttribute('data-uid');\n\n          if (this.checkedNodes.indexOf(nodeCheck) === -1) {\n            this.checkedNodes.push(nodeCheck);\n          }\n\n          this.changeState(node, 'check', null, true, true);\n        } else if (count === 0 && this.checkedNodes.length === 0) {\n          this.changeState(node, 'uncheck', null, true, true);\n        }\n      }\n    }\n  };\n  /**\n   * Change the parent to indeterminate state whenever the child is in checked state which is not rendered in DOM\n   */\n\n\n  TreeView.prototype.checkIndeterminateState = function (data) {\n    var element;\n\n    if (this.dataType === 1) {\n      element = this.element.querySelector('[data-uid=\"' + data[this.fields.parentID] + '\"]');\n    } else {\n      element = this.element.querySelector('[data-uid=\"' + data[this.fields.id] + '\"]');\n    }\n\n    if (element) {\n      var ariaChecked = element.querySelector('.' + CHECKBOXWRAP).getAttribute('aria-checked');\n\n      if (ariaChecked !== 'true') {\n        this.changeState(element, 'indeterminate', null, true, true);\n      }\n    } else if (this.dataType === 2) {\n      var len = this.parentNodeCheck.length;\n\n      if (this.parentNodeCheck.indexOf(data[this.fields.id].toString()) === -1) {\n        this.parentNodeCheck.push(data[this.fields.id].toString());\n      }\n    }\n  };\n  /**\n   * Update the checkedNodes for child and subchild from datasource (hierarchical datasource) at initial rendering\n   */\n\n\n  TreeView.prototype.updateChildCheckState = function (childItems, treeData) {\n    var count = 0;\n    var checkedParent = treeData[this.fields.id] ? treeData[this.fields.id].toString() : '';\n\n    for (var index = 0; index < childItems.length; index++) {\n      var checkedChild = childItems[index][this.fields.id] ? childItems[index][this.fields.id].toString() : '';\n\n      if (childItems[index][this.fields.isChecked] && !this.isLoaded && this.checkedNodes.indexOf(checkedChild) === -1) {\n        this.checkedNodes.push(checkedChild);\n      }\n\n      if (this.checkedNodes.indexOf(checkedParent) !== -1 && this.checkedNodes.indexOf(checkedChild) === -1 && this.autoCheck) {\n        this.checkedNodes.push(checkedChild);\n      }\n\n      if (this.checkedNodes.indexOf(checkedChild) !== -1 && this.autoCheck) {\n        count++;\n      }\n\n      if (this.checkedNodes.indexOf(checkedChild) > -1 && this.validNodes.indexOf(checkedChild) === -1) {\n        this.validNodes.push(checkedChild);\n      }\n\n      var subChildItems = getValue(this.fields.child.toString(), childItems[index]);\n\n      if (subChildItems && subChildItems.length) {\n        if (this.parentCheckData.indexOf(treeData) === -1) this.parentCheckData.push(treeData);\n        this.updateChildCheckState(subChildItems, childItems[index]);\n      }\n\n      if (count === childItems.length && this.autoCheck && this.checkedNodes.indexOf(checkedParent) === -1) {\n        this.checkedNodes.push(checkedParent);\n      }\n    }\n\n    if (count !== 0 && this.autoCheck) {\n      this.checkIndeterminateState(treeData);\n\n      for (var len = 0; len < this.parentCheckData.length; len++) {\n        if (treeData !== this.parentCheckData[len] && this.parentCheckData[len]) {\n          this.checkIndeterminateState(this.parentCheckData[len]);\n        }\n      }\n    }\n  };\n\n  TreeView.prototype.beforeNodeCreate = function (e) {\n    if (this.showCheckBox) {\n      var checkboxEle = createCheckBox(this.createElement, true, {\n        cssClass: this.touchClass\n      });\n      checkboxEle.setAttribute('role', 'checkbox');\n      var icon = select('div.' + ICON, e.item);\n      var id = e.item.getAttribute('data-uid');\n      e.item.childNodes[0].insertBefore(checkboxEle, e.item.childNodes[0].childNodes[isNOU(icon) ? 0 : 1]);\n      var checkValue = getValue(e.fields.isChecked, e.curData);\n\n      if (this.checkedNodes.indexOf(id) > -1) {\n        select('.' + CHECKBOXFRAME, checkboxEle).classList.add(CHECK);\n        checkboxEle.setAttribute('aria-checked', 'true');\n        this.addCheck(e.item);\n      } else if (!isNOU(checkValue) && checkValue.toString() === 'true') {\n        select('.' + CHECKBOXFRAME, checkboxEle).classList.add(CHECK);\n        checkboxEle.setAttribute('aria-checked', 'true');\n        this.addCheck(e.item);\n      } else {\n        checkboxEle.setAttribute('aria-checked', 'false');\n      }\n\n      var frame = select('.' + CHECKBOXFRAME, checkboxEle);\n      EventHandler.add(frame, 'mousedown', this.frameMouseHandler, this);\n      EventHandler.add(frame, 'mouseup', this.frameMouseHandler, this);\n    }\n\n    if (this.fullRowSelect) {\n      this.createFullRow(e.item);\n    }\n\n    if (this.allowMultiSelection && !e.item.classList.contains(SELECTED)) {\n      e.item.setAttribute('aria-selected', 'false');\n    }\n\n    var fields = e.fields;\n    this.addActionClass(e, fields.selected, SELECTED);\n    this.addActionClass(e, fields.expanded, EXPANDED);\n\n    if (!isNOU(this.nodeTemplateFn)) {\n      var textEle = e.item.querySelector('.' + LISTTEXT);\n      var dataId = e.item.getAttribute('data-uid');\n      textEle.innerHTML = '';\n      this.renderNodeTemplate(e.curData, textEle, dataId);\n    }\n\n    var eventArgs = {\n      node: e.item,\n      nodeData: e.curData,\n      text: e.text\n    };\n\n    if (!this.isRefreshed) {\n      this.trigger('drawNode', eventArgs);\n    }\n  };\n\n  TreeView.prototype.frameMouseHandler = function (e) {\n    var rippleSpan = select('.' + CHECKBOXRIPPLE, e.target.parentElement);\n    rippleMouseHandler(e, rippleSpan);\n  };\n\n  TreeView.prototype.addActionClass = function (e, action, cssClass) {\n    var data = e.curData;\n    var actionValue = getValue(action, data);\n\n    if (!isNOU(actionValue) && actionValue.toString() !== 'false') {\n      e.item.classList.add(cssClass);\n    }\n  };\n\n  TreeView.prototype.getDataType = function (ds, mapper) {\n    if (this.fields.dataSource instanceof DataManager) {\n      for (var i = 0; i < ds.length; i++) {\n        if (this.isOffline) {\n          if (typeof mapper.child === 'string' && isNOU(getValue(mapper.child, ds[i])) && !isNOU(getValue(mapper.parentID, ds[i]))) {\n            return 1;\n          }\n        } else if (typeof mapper.child === 'string' && isNOU(getValue(mapper.child, ds[i]))) {\n          return 1;\n        }\n      }\n\n      return 2;\n    }\n\n    for (var i = 0, len = ds.length; i < len; i++) {\n      if (typeof mapper.child === 'string' && !isNOU(getValue(mapper.child, ds[i]))) {\n        return 2;\n      }\n\n      if (!isNOU(getValue(mapper.parentID, ds[i])) || !isNOU(getValue(mapper.hasChildren, ds[i]))) {\n        return 1;\n      }\n    }\n\n    return 1;\n  };\n\n  TreeView.prototype.getGroupedData = function (dataSource, groupBy) {\n    var cusQuery = new Query().group(groupBy);\n    var ds = ListBase.getDataSource(dataSource, cusQuery);\n    var grpItem = [];\n\n    for (var j = 0; j < ds.length; j++) {\n      var itemObj = ds[j].items;\n      grpItem.push(itemObj);\n    }\n\n    return grpItem;\n  };\n\n  TreeView.prototype.getSortedData = function (list) {\n    if (list && this.sortOrder !== 'None') {\n      list = ListBase.getDataSource(list, ListBase.addSorting(this.sortOrder, this.fields.text));\n    }\n\n    return list;\n  };\n\n  TreeView.prototype.finalizeNode = function (element) {\n    var iNodes = selectAll('.' + IMAGE, element);\n\n    for (var k = 0; k < iNodes.length; k++) {\n      iNodes[k].setAttribute('alt', IMAGE);\n    }\n\n    if (this.isLoaded) {\n      var sNodes = selectAll('.' + SELECTED, element);\n\n      for (var i = 0; i < sNodes.length; i++) {\n        this.selectNode(sNodes[i], null);\n        break;\n      }\n\n      removeClass(sNodes, SELECTED);\n    }\n\n    var cNodes = selectAll('.' + LISTITEM + ':not(.' + EXPANDED + ')', element);\n\n    for (var j = 0; j < cNodes.length; j++) {\n      var icon = select('div.' + ICON, cNodes[j]);\n\n      if (icon && icon.classList.contains(EXPANDABLE)) {\n        this.disableExpandAttr(cNodes[j]);\n      }\n    }\n\n    var eNodes = selectAll('.' + EXPANDED, element);\n\n    if (!this.isInitalExpand) {\n      for (var i = 0; i < eNodes.length; i++) {\n        this.renderChildNodes(eNodes[i]);\n      }\n    }\n\n    removeClass(eNodes, EXPANDED);\n    this.updateList();\n\n    if (this.isLoaded) {\n      this.updateCheckedProp();\n    }\n  };\n\n  TreeView.prototype.updateCheckedProp = function () {\n    if (this.showCheckBox) {\n      var nodes = [].concat([], this.checkedNodes);\n      this.setProperties({\n        checkedNodes: nodes\n      }, true);\n    }\n  };\n\n  TreeView.prototype.ensureIndeterminate = function () {\n    if (this.autoCheck) {\n      var liElement = selectAll('li', this.element);\n      var ulElement = void 0;\n\n      for (var i = 0; i < liElement.length; i++) {\n        if (liElement[i].classList.contains(LISTITEM)) {\n          ulElement = select('.' + PARENTITEM, liElement[i]);\n\n          if (ulElement) {\n            this.ensureParentCheckState(liElement[i]);\n          } else {\n            this.ensureChildCheckState(liElement[i]);\n          }\n        }\n      }\n    } else {\n      var indeterminate = selectAll('.' + INDETERMINATE, this.element);\n\n      for (var i = 0; i < indeterminate.length; i++) {\n        indeterminate[i].classList.remove(INDETERMINATE);\n      }\n    }\n  };\n\n  TreeView.prototype.ensureParentCheckState = function (element) {\n    if (!isNOU(element)) {\n      if (element.classList.contains(ROOT)) {\n        return;\n      }\n\n      var ulElement = element;\n\n      if (element.classList.contains(LISTITEM)) {\n        ulElement = select('.' + PARENTITEM, element);\n      }\n\n      var checkedNodes = selectAll('.' + CHECK, ulElement);\n      var indeterminateNodes = selectAll('.' + INDETERMINATE, ulElement);\n      var nodes = selectAll('.' + LISTITEM, ulElement);\n      var checkBoxEle = element.getElementsByClassName(CHECKBOXWRAP)[0];\n\n      if (nodes.length === checkedNodes.length) {\n        this.changeState(checkBoxEle, 'check', null, true, true);\n      } else if (checkedNodes.length > 0 || indeterminateNodes.length > 0) {\n        this.changeState(checkBoxEle, 'indeterminate', null, true, true);\n      } else if (checkedNodes.length === 0) {\n        this.changeState(checkBoxEle, 'uncheck', null, true, true);\n      }\n\n      var parentUL = closest(element, '.' + PARENTITEM);\n\n      if (!isNOU(parentUL)) {\n        var currentParent = closest(parentUL, '.' + LISTITEM);\n        this.ensureParentCheckState(currentParent);\n      }\n    }\n  };\n\n  TreeView.prototype.ensureChildCheckState = function (element, e) {\n    if (!isNOU(element)) {\n      var childElement = select('.' + PARENTITEM, element);\n      var checkBoxes = void 0;\n\n      if (!isNOU(childElement)) {\n        checkBoxes = selectAll('.' + CHECKBOXWRAP, childElement);\n        var isChecked = element.getElementsByClassName(CHECKBOXFRAME)[0].classList.contains(CHECK);\n        var parentCheck = element.getElementsByClassName(CHECKBOXFRAME)[0].classList.contains(INDETERMINATE);\n        var childCheck = childElement.querySelectorAll('li');\n        var expandState = childElement.parentElement.getAttribute('aria-expanded');\n        var checkedState = void 0;\n\n        for (var index = 0; index < checkBoxes.length; index++) {\n          var childId = childCheck[index].getAttribute('data-uid');\n\n          if (!isNOU(this.currentLoadData) && !isNOU(getValue(this.fields.isChecked, this.currentLoadData[index]))) {\n            checkedState = getValue(this.fields.isChecked, this.currentLoadData[index]) ? 'check' : 'uncheck';\n\n            if (this.ele !== -1) {\n              checkedState = isChecked ? 'check' : 'uncheck';\n            }\n\n            if (checkedState === 'uncheck' && !isUndefined(this.parentNodeCheck) && this.autoCheck && this.parentNodeCheck.indexOf(childId) !== -1) {\n              this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(childId), 1);\n              checkedState = 'indeterminate';\n            }\n          } else {\n            var isNodeChecked = checkBoxes[index].getElementsByClassName(CHECKBOXFRAME)[0].classList.contains(CHECK);\n\n            if (isChecked) {\n              checkedState = 'check';\n            } else if (isNodeChecked && !this.isLoaded) {\n              checkedState = 'check';\n            } else if (this.checkedNodes.indexOf(childId) !== -1 && this.isLoaded && (parentCheck || isChecked)) {\n              checkedState = 'check';\n            } else if (childCheck[index].classList.contains(CHILD) && !isUndefined(this.parentNodeCheck) && this.autoCheck && (isChecked || parentCheck) && this.parentNodeCheck.indexOf(childId) !== -1) {\n              checkedState = 'indeterminate';\n              this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(childId), 1);\n            } else if (this.dataType === 1 && !isUndefined(this.parentNodeCheck) && this.autoCheck && (isChecked || parentCheck) && this.parentNodeCheck.indexOf(childId) !== -1) {\n              checkedState = 'indeterminate';\n              this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(childId), 1);\n            } else {\n              checkedState = 'uncheck';\n            }\n          }\n\n          this.changeState(checkBoxes[index], checkedState, e, true, true);\n        }\n      }\n\n      if (this.autoCheck && this.isLoaded) {\n        this.updateParentCheckState();\n      }\n    }\n  };\n\n  TreeView.prototype.doCheckBoxAction = function (nodes, doCheck) {\n    var li = selectAll('.' + LISTITEM, this.element);\n\n    if (!isNOU(nodes)) {\n      for (var len = nodes.length; len >= 0; len--) {\n        var liEle = void 0;\n\n        if (nodes.length === 1) {\n          liEle = this.getElement(nodes[len - 1]);\n        } else {\n          liEle = this.getElement(nodes[len]);\n        }\n\n        if (isNOU(liEle)) {\n          var node = void 0;\n          node = nodes[len - nodes.length] ? nodes[len - nodes.length].toString() : nodes[len] ? nodes[len].toString() : null;\n\n          if (node !== '' && doCheck && node) {\n            this.setValidCheckedNode(node);\n            this.dynamicCheckState(node, doCheck);\n          } else if (this.checkedNodes.indexOf(node) !== -1 && node !== '' && !doCheck) {\n            this.checkedNodes.splice(this.checkedNodes.indexOf(node), 1);\n            var childItems = this.getChildNodes(this.treeData, node);\n\n            if (childItems) {\n              for (var i = 0; i < childItems.length; i++) {\n                var id = childItems[i][this.fields.id] ? childItems[i][this.fields.id].toString() : null;\n\n                if (this.checkedNodes.indexOf(id) !== -1) {\n                  this.checkedNodes.splice(this.checkedNodes.indexOf(id), 1);\n                  var ele = this.element.querySelector('[data-uid=\"' + id + '\"]');\n\n                  if (ele) {\n                    this.changeState(ele, 'uncheck', null);\n                  }\n                }\n              }\n\n              if (this.parentNodeCheck.indexOf(node) !== -1) {\n                this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(node), 1);\n              }\n            }\n\n            if (node) {\n              this.dynamicCheckState(node, doCheck);\n            }\n\n            this.updateField(this.treeData, this.fields, node, 'isChecked', null);\n          }\n\n          continue;\n        }\n\n        var checkBox = select('.' + PARENTITEM + ' .' + CHECKBOXWRAP, liEle);\n        this.validateCheckNode(checkBox, !doCheck, liEle, null);\n      }\n    } else {\n      var checkBoxes = selectAll('.' + CHECKBOXWRAP, this.element);\n\n      if (this.loadOnDemand) {\n        for (var index = 0; index < checkBoxes.length; index++) {\n          this.updateFieldChecked(checkBoxes[index], doCheck);\n          this.changeState(checkBoxes[index], doCheck ? 'check' : 'uncheck', null, null, null, doCheck);\n        }\n      } else {\n        for (var index = 0; index < checkBoxes.length; index++) {\n          this.updateFieldChecked(checkBoxes[index], doCheck);\n          this.changeState(checkBoxes[index], doCheck ? 'check' : 'uncheck');\n        }\n      }\n    }\n\n    if (nodes) {\n      for (var j = 0; j < nodes.length; j++) {\n        var node = nodes[j] ? nodes[j].toString() : '';\n\n        if (!doCheck) {\n          this.updateField(this.treeData, this.fields, node, 'isChecked', null);\n        }\n      }\n    }\n\n    if (this.autoCheck) {\n      this.updateParentCheckState();\n    }\n  };\n\n  TreeView.prototype.updateFieldChecked = function (checkbox, doCheck) {\n    var currLi = closest(checkbox, '.' + LISTITEM);\n    var id = currLi.getAttribute('data-uid');\n    var nodeDetails = this.getNodeData(currLi);\n\n    if (nodeDetails.isChecked === 'true' && !doCheck) {\n      this.updateField(this.treeData, this.fields, id, 'isChecked', null);\n    }\n  };\n  /**\n   * Changes the parent and child  check state while changing the checkedNodes via setmodel\n   */\n\n\n  TreeView.prototype.dynamicCheckState = function (node, doCheck) {\n    if (this.dataType === 1) {\n      var count = 0;\n      var resultId = new DataManager(this.treeData).executeLocal(new Query().where(this.fields.id, 'equal', node, true));\n\n      if (resultId[0]) {\n        var id = resultId[0][this.fields.id] ? resultId[0][this.fields.id].toString() : null;\n        var parent_1 = resultId[0][this.fields.parentID] ? resultId[0][this.fields.parentID].toString() : null;\n        var parentElement = this.element.querySelector('[data-uid=\"' + parent_1 + '\"]');\n        var indeterminate = parentElement ? select('.' + INDETERMINATE, parentElement) : null;\n        var check = parentElement ? select('.' + CHECK, parentElement) : null;\n        var element = this.element.querySelector('[data-uid=\"' + id + '\"]');\n        var childNodes = this.getChildNodes(this.treeData, parent_1);\n\n        if (childNodes) {\n          for (var i = 0; i < childNodes.length; i++) {\n            var childId = childNodes[i][this.fields.id] ? childNodes[i][this.fields.id].toString() : null;\n\n            if (this.checkedNodes.indexOf(childId) !== -1) {\n              count++;\n            }\n          }\n        }\n\n        if (this.checkedNodes.indexOf(node) !== -1 && parentElement && id === node && this.autoCheck) {\n          this.changeState(parentElement, 'indeterminate', null);\n        } else if (this.checkedNodes.indexOf(node) === -1 && element && id === node && !doCheck) {\n          this.changeState(element, 'uncheck', null);\n        } else if (this.checkedNodes.indexOf(node) !== -1 && element && id === node && doCheck) {\n          this.changeState(element, 'check', null);\n        } else if (this.checkedNodes.indexOf(node) === -1 && !element && parentElement && id === node && this.autoCheck && count !== 0) {\n          this.changeState(parentElement, 'indeterminate', null);\n        } else if (this.checkedNodes.indexOf(node) === -1 && !element && parentElement && id === node && this.autoCheck && count === 0) {\n          this.changeState(parentElement, 'uncheck', null);\n        } else if (!element && !parentElement && id === node && this.autoCheck) {\n          this.updateIndeterminate(node, doCheck);\n        }\n      }\n    } else if (this.dataType === 2 || this.fields.dataSource instanceof DataManager && this.isOffline) {\n      var id = void 0;\n      var parentElement = void 0;\n      var check = void 0;\n\n      for (var i = 0; i < this.treeData.length; i++) {\n        id = this.treeData[i][this.fields.id] ? this.treeData[i][this.fields.id].toString() : '';\n        parentElement = this.element.querySelector('[data-uid=\"' + id + '\"]');\n        check = parentElement ? select('.' + CHECK, parentElement) : null;\n\n        if (this.checkedNodes.indexOf(id) === -1 && parentElement && check && !doCheck) {\n          this.changeState(parentElement, 'uncheck', null);\n        }\n\n        var subChild = getValue(this.fields.child.toString(), this.treeData[i]);\n\n        if (subChild) {\n          this.updateChildIndeterminate(subChild, id, node, doCheck, id);\n        }\n      }\n    }\n  };\n  /**\n   * updates the parent and child  check state while changing the checkedNodes via setmodel for listData\n   */\n\n\n  TreeView.prototype.updateIndeterminate = function (node, doCheck) {\n    var indeterminateData = this.getTreeData(node);\n    var count = 0;\n    var parent;\n\n    if (this.dataType === 1) {\n      parent = indeterminateData[0][this.fields.parentID] ? indeterminateData[0][this.fields.parentID].toString() : null;\n    }\n\n    var childNodes = this.getChildNodes(this.treeData, parent);\n\n    if (childNodes) {\n      for (var i = 0; i < childNodes.length; i++) {\n        var childId = childNodes[i][this.fields.id] ? childNodes[i][this.fields.id].toString() : null;\n\n        if (this.checkedNodes.indexOf(childId) !== -1) {\n          count++;\n        }\n      }\n    }\n\n    var parentElement = this.element.querySelector('[data-uid=\"' + parent + '\"]');\n\n    if (parentElement && doCheck) {\n      this.changeState(parentElement, 'indeterminate', null);\n    } else if (!doCheck && parentElement && this.parentNodeCheck.indexOf(parent) === -1 && count !== 0) {\n      this.changeState(parentElement, 'indeterminate', null);\n    } else if (!doCheck && parentElement && this.parentNodeCheck.indexOf(parent) === -1 && count === 0) {\n      this.changeState(parentElement, 'uncheck', null);\n    } else if (!parentElement) {\n      if (!doCheck && this.checkedNodes.indexOf(parent) === -1 && this.parentNodeCheck.indexOf(parent) !== -1) {\n        this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(parent), 1);\n      } else if (doCheck && this.checkedNodes.indexOf(parent) === -1 && this.parentNodeCheck.indexOf(parent) === -1) {\n        this.parentNodeCheck.push(parent);\n      } else if (!doCheck && this.checkedNodes.indexOf(parent) !== -1 && this.parentNodeCheck.indexOf(parent) === -1 && count !== 0) {\n        this.parentNodeCheck.push(parent);\n      }\n\n      this.updateIndeterminate(parent, doCheck);\n\n      if (this.checkedNodes.indexOf(parent) !== -1 && !doCheck) {\n        this.checkedNodes.splice(this.checkedNodes.indexOf(parent), 1);\n      }\n    }\n  };\n  /**\n   * updates the parent and child  check state while changing the checkedNodes via setmodel for hierarchical data\n   */\n\n\n  TreeView.prototype.updateChildIndeterminate = function (subChild, parent, node, doCheck, child) {\n    var count = 0;\n\n    for (var j = 0; j < subChild.length; j++) {\n      var subId = subChild[j][this.fields.id] ? subChild[j][this.fields.id].toString() : '';\n\n      if (this.checkedNodes.indexOf(subId) !== -1) {\n        count++;\n      }\n\n      var parentElement = this.element.querySelector('[data-uid=\"' + parent + '\"]');\n      var indeterminate = parentElement ? select('.' + INDETERMINATE, parentElement) : null;\n      var check = parentElement ? select('.' + CHECK, parentElement) : null;\n      var element = this.element.querySelector('[data-uid=\"' + subId + '\"]');\n      var childElementCheck = element ? select('.' + CHECK, element) : null;\n\n      if (this.checkedNodes.indexOf(node) !== -1 && parentElement && subId === node && this.autoCheck) {\n        this.changeState(parentElement, 'indeterminate', null);\n      } else if (this.checkedNodes.indexOf(node) === -1 && parentElement && !element && subId === node && !doCheck) {\n        if (this.autoCheck) {\n          this.changeState(parentElement, 'uncheck', null);\n        } else {\n          if (count !== 0) {\n            this.changeState(parentElement, 'indeterminate', null);\n          } else {\n            this.changeState(parentElement, 'uncheck', null);\n          }\n        }\n      } else if (this.checkedNodes.indexOf(node) === -1 && element && subId === node && !doCheck) {\n        this.changeState(element, 'uncheck', null);\n      } else if (this.checkedNodes.indexOf(node) === -1 && indeterminate && subId === node && this.autoCheck && count === 0 && !doCheck) {\n        indeterminate.classList.remove(INDETERMINATE);\n      } else if (this.checkedNodes.indexOf(node) === -1 && !element && check && subId === node && count === 0) {\n        this.changeState(parentElement, 'uncheck', null);\n      } else if (this.checkedNodes.indexOf(subId) === -1 && element && childElementCheck && count === 0) {\n        this.changeState(element, 'uncheck', null);\n      } else if (!element && !parentElement && subId === node || this.parentNodeCheck.indexOf(parent) !== -1 && this.autoCheck) {\n        var childElement = this.element.querySelector('[data-uid=\"' + child + '\"]');\n\n        if (doCheck && count !== 0) {\n          this.changeState(childElement, 'indeterminate', null);\n        } else if (doCheck && count === subChild.length && this.checkedNodes.indexOf(parent) === -1) {\n          this.checkedNodes.push(parent);\n        } else if (!doCheck && count === 0 && this.parentNodeCheck.indexOf(parent) !== -1) {\n          this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(parent));\n        }\n\n        if (this.parentNodeCheck.indexOf(parent) === -1) {\n          this.parentNodeCheck.push(parent);\n        }\n      }\n\n      var innerChild = getValue(this.fields.child.toString(), subChild[j]);\n\n      if (innerChild) {\n        this.updateChildIndeterminate(innerChild, subId, node, doCheck, child);\n      }\n    }\n  };\n\n  TreeView.prototype.changeState = function (wrapper, state, e, isPrevent, isAdd, doCheck) {\n    var _this = this;\n\n    var eventArgs;\n    var currLi = closest(wrapper, '.' + LISTITEM);\n\n    if (wrapper === currLi) {\n      wrapper = select('.' + CHECKBOXWRAP, currLi);\n    }\n\n    if (!isPrevent) {\n      this.checkActionNodes = [];\n      eventArgs = this.getCheckEvent(currLi, state, e);\n      this.trigger('nodeChecking', eventArgs, function (observedArgs) {\n        if (!observedArgs.cancel) {\n          _this.nodeCheckAction(wrapper, state, currLi, observedArgs, e, isPrevent, isAdd, doCheck);\n        }\n      });\n    } else {\n      this.nodeCheckAction(wrapper, state, currLi, eventArgs, e, isPrevent, isAdd, doCheck);\n    }\n  };\n\n  TreeView.prototype.nodeCheckAction = function (wrapper, state, currLi, eventArgs, e, isPrevent, isAdd, doCheck) {\n    var ariaState;\n    var frameSpan = wrapper.getElementsByClassName(CHECKBOXFRAME)[0];\n\n    if (state === 'check' && !frameSpan.classList.contains(CHECK)) {\n      frameSpan.classList.remove(INDETERMINATE);\n      frameSpan.classList.add(CHECK);\n      this.addCheck(currLi);\n      ariaState = 'true';\n    } else if (state === 'uncheck' && (frameSpan.classList.contains(CHECK) || frameSpan.classList.contains(INDETERMINATE))) {\n      removeClass([frameSpan], [CHECK, INDETERMINATE]);\n      this.removeCheck(currLi);\n      ariaState = 'false';\n    } else if (state === 'indeterminate' && this.autoCheck) {\n      frameSpan.classList.remove(CHECK);\n      frameSpan.classList.add(INDETERMINATE);\n      this.removeCheck(currLi);\n      ariaState = 'mixed';\n    }\n\n    ariaState = state === 'check' ? 'true' : state === 'uncheck' ? 'false' : ariaState;\n\n    if (!isNOU(ariaState)) {\n      wrapper.setAttribute('aria-checked', ariaState);\n    }\n\n    if (isAdd) {\n      var data = [].concat([], this.checkActionNodes);\n      eventArgs = this.getCheckEvent(currLi, state, e);\n\n      if (isUndefined(isPrevent)) {\n        eventArgs.data = data;\n      }\n    }\n\n    if (doCheck !== undefined) {\n      this.ensureStateChange(currLi, doCheck);\n    }\n\n    if (!isPrevent) {\n      if (!isNOU(ariaState)) {\n        wrapper.setAttribute('aria-checked', ariaState);\n        eventArgs.data[0].checked = ariaState;\n        this.trigger('nodeChecked', eventArgs);\n        this.checkActionNodes = [];\n      }\n    }\n  };\n\n  TreeView.prototype.addCheck = function (liEle) {\n    var id = liEle.getAttribute('data-uid');\n\n    if (!isNOU(id) && this.checkedNodes.indexOf(id) === -1) {\n      this.checkedNodes.push(id);\n    }\n  };\n\n  TreeView.prototype.removeCheck = function (liEle) {\n    var index = this.checkedNodes.indexOf(liEle.getAttribute('data-uid'));\n\n    if (index > -1) {\n      this.checkedNodes.splice(index, 1);\n    }\n  };\n\n  TreeView.prototype.getCheckEvent = function (currLi, action, e) {\n    this.checkActionNodes.push(this.getNodeData(currLi));\n    var nodeData = this.checkActionNodes;\n    return {\n      action: action,\n      cancel: false,\n      isInteracted: isNOU(e) ? false : true,\n      node: currLi,\n      data: nodeData\n    };\n  };\n\n  TreeView.prototype.finalize = function () {\n    var firstUl = select('.' + PARENTITEM, this.element);\n\n    if (!isNullOrUndefined(firstUl)) {\n      firstUl.setAttribute('role', treeAriaAttr.treeRole);\n      this.setMultiSelect(this.allowMultiSelection);\n      var firstNode = select('.' + LISTITEM, this.element);\n\n      if (firstNode) {\n        addClass([firstNode], FOCUS);\n        this.updateIdAttr(null, firstNode);\n      }\n\n      if (this.allowTextWrap) {\n        this.updateWrap();\n      }\n\n      this.renderReactTemplates();\n      this.hasPid = this.rootData[0] ? this.rootData[0].hasOwnProperty(this.fields.parentID) : false;\n      this.doExpandAction();\n    }\n  };\n\n  TreeView.prototype.setTextWrap = function () {\n    (this.allowTextWrap ? addClass : removeClass)([this.element], LISTWRAP);\n\n    if (Browser.isIE) {\n      (this.allowTextWrap ? addClass : removeClass)([this.element], IELISTWRAP);\n    }\n  };\n\n  TreeView.prototype.updateWrap = function (ulEle) {\n    if (!this.fullRowSelect) {\n      return;\n    }\n\n    var liEle = ulEle ? selectAll('.' + LISTITEM, ulEle) : this.liList;\n    var length = liEle.length;\n\n    for (var i = 0; i < length; i++) {\n      this.calculateWrap(liEle[i]);\n    }\n  };\n\n  TreeView.prototype.calculateWrap = function (liEle) {\n    var element = select('.' + FULLROW, liEle);\n\n    if (element && element.nextElementSibling) {\n      element.style.height = this.allowTextWrap ? element.nextElementSibling.offsetHeight + 'px' : '';\n    }\n  };\n\n  TreeView.prototype.doExpandAction = function () {\n    var eUids = this.expandedNodes;\n\n    if (this.isInitalExpand && eUids.length > 0) {\n      this.setProperties({\n        expandedNodes: []\n      }, true);\n      /* eslint-disable */\n\n      if (this.fields.dataSource instanceof DataManager) {\n        this.expandGivenNodes(eUids);\n      } else {\n        for (var i = 0; i < eUids.length; i++) {\n          var eNode = select('[data-uid=\"' + eUids[i] + '\"]', this.element);\n\n          if (!isNOU(eNode)) {\n            var icon = select('.' + EXPANDABLE, select('.' + TEXTWRAP, eNode));\n\n            if (!isNOU(icon)) {\n              this.expandAction(eNode, icon, null);\n            }\n          } else {\n            if (eUids[i] && this.expandChildren.indexOf(eUids[i]) === -1) {\n              this.expandChildren.push(eUids[i].toString());\n            }\n\n            continue;\n          }\n        }\n\n        this.afterFinalized();\n      }\n    } else {\n      this.afterFinalized();\n    }\n  };\n\n  TreeView.prototype.expandGivenNodes = function (arr) {\n    var proxy = this;\n    this.expandCallback(arr[this.index], function () {\n      proxy.index++;\n\n      if (proxy.index < arr.length) {\n        proxy.expandGivenNodes(arr);\n      } else {\n        proxy.afterFinalized();\n      }\n    });\n  };\n\n  TreeView.prototype.expandCallback = function (eUid, callback) {\n    var eNode = select('[data-uid=\"' + eUid + '\"]', this.element);\n\n    if (!isNOU(eNode)) {\n      var icon = select('.' + EXPANDABLE, select('.' + TEXTWRAP, eNode));\n\n      if (!isNOU(icon)) {\n        this.expandAction(eNode, icon, null, false, callback);\n      } else {\n        callback();\n      }\n    } else {\n      callback();\n    }\n  };\n\n  TreeView.prototype.afterFinalized = function () {\n    this.doSelectionAction();\n    this.updateCheckedProp();\n    this.isAnimate = true;\n    this.isInitalExpand = false;\n\n    if (!this.isLoaded || this.isFieldChange) {\n      var eventArgs = {\n        data: this.treeData\n      };\n      this.trigger('dataBound', eventArgs);\n    }\n\n    this.isLoaded = true;\n  };\n\n  TreeView.prototype.doSelectionAction = function () {\n    var sNodes = selectAll('.' + SELECTED, this.element);\n    var sUids = this.selectedNodes;\n\n    if (sUids.length > 0) {\n      this.setProperties({\n        selectedNodes: []\n      }, true);\n\n      for (var i = 0; i < sUids.length; i++) {\n        var sNode = select('[data-uid=\"' + sUids[i] + '\"]', this.element);\n\n        if (sNode && !sNode.classList.contains('e-active')) {\n          this.selectNode(sNode, null, true);\n        } else {\n          this.selectedNodes.push(sUids[i]);\n        }\n\n        if (!this.allowMultiSelection) {\n          break;\n        }\n      }\n    } else {\n      this.selectGivenNodes(sNodes);\n    }\n\n    removeClass(sNodes, SELECTED);\n  };\n\n  TreeView.prototype.selectGivenNodes = function (sNodes) {\n    for (var i = 0; i < sNodes.length; i++) {\n      if (!sNodes[i].classList.contains('e-disable')) {\n        this.selectNode(sNodes[i], null, true);\n      }\n\n      if (!this.allowMultiSelection) {\n        break;\n      }\n    }\n  };\n\n  TreeView.prototype.clickHandler = function (event) {\n    var target = event.originalEvent.target;\n    EventHandler.remove(this.element, 'contextmenu', this.preventContextMenu);\n\n    if (!target || this.dragStartAction) {\n      return;\n    } else {\n      var classList = target.classList;\n      var li = closest(target, '.' + LISTITEM);\n\n      if (!li) {\n        return;\n      } else if (event.originalEvent.which !== 3) {\n        var rippleElement = select('.' + RIPPLEELMENT, li);\n        var rippleIcons = select('.' + ICON, li);\n        this.removeHover();\n        this.setFocusElement(li);\n\n        if (this.showCheckBox && !li.classList.contains('e-disable')) {\n          var checkWrapper = closest(target, '.' + CHECKBOXWRAP);\n\n          if (!isNOU(checkWrapper)) {\n            var checkElement = select('.' + CHECKBOXFRAME, checkWrapper);\n            this.validateCheckNode(checkWrapper, checkElement.classList.contains(CHECK), li, event.originalEvent);\n            this.triggerClickEvent(event.originalEvent, li);\n            return;\n          }\n        }\n\n        if (classList.contains(EXPANDABLE)) {\n          this.expandAction(li, target, event);\n        } else if (classList.contains(COLLAPSIBLE)) {\n          this.collapseNode(li, target, event);\n        } else if (rippleElement && rippleIcons) {\n          if (rippleIcons.classList.contains(RIPPLE) && rippleIcons.classList.contains(EXPANDABLE)) {\n            this.expandAction(li, rippleIcons, event);\n          } else if (rippleIcons.classList.contains(RIPPLE) && rippleIcons.classList.contains(COLLAPSIBLE)) {\n            this.collapseNode(li, rippleIcons, event);\n          } else if (!classList.contains(PARENTITEM) && !classList.contains(LISTITEM)) {\n            this.toggleSelect(li, event.originalEvent, false);\n          }\n        } else {\n          if (!classList.contains(PARENTITEM) && !classList.contains(LISTITEM)) {\n            this.toggleSelect(li, event.originalEvent, false);\n          }\n        }\n      }\n\n      this.triggerClickEvent(event.originalEvent, li);\n    }\n  };\n\n  TreeView.prototype.nodeCheckedEvent = function (wrapper, isCheck, e) {\n    var currLi = closest(wrapper, '.' + LISTITEM);\n    var eventArgs = this.getCheckEvent(wrapper, isCheck ? 'uncheck' : 'check', e);\n    eventArgs.data = eventArgs.data.splice(0, eventArgs.data.length - 1);\n    this.trigger('nodeChecked', eventArgs);\n  };\n\n  TreeView.prototype.triggerClickEvent = function (e, li) {\n    var eventArgs = {\n      event: e,\n      node: li\n    };\n    this.trigger('nodeClicked', eventArgs);\n  };\n\n  TreeView.prototype.expandNode = function (currLi, icon, loaded) {\n    var _this = this;\n\n    this.renderReactTemplates();\n\n    if (icon.classList.contains(LOAD)) {\n      this.hideSpinner(icon);\n    }\n\n    if (!this.initialRender) {\n      icon.classList.add('interaction');\n    }\n\n    if (loaded !== true || loaded === true && currLi.classList.contains('e-expanded')) {\n      if (this.preventExpand !== true) {\n        removeClass([icon], EXPANDABLE);\n        addClass([icon], COLLAPSIBLE);\n        var start_1 = 0;\n        var end_1 = 0;\n        var proxy_1 = this;\n        var ul_1 = select('.' + PARENTITEM, currLi);\n        var liEle_1 = currLi;\n        this.setHeight(liEle_1, ul_1);\n        var activeElement_1 = select('.' + LISTITEM + '.' + ACTIVE, currLi);\n\n        if (this.isAnimate && !this.isRefreshed) {\n          this.aniObj.animate(ul_1, {\n            name: this.animation.expand.effect,\n            duration: this.animation.expand.duration,\n            timingFunction: this.animation.expand.easing,\n            begin: function (args) {\n              liEle_1.style.overflow = 'hidden';\n\n              if (!isNullOrUndefined(activeElement_1) && activeElement_1 instanceof HTMLElement) {\n                activeElement_1.classList.add(ITEM_ANIMATION_ACTIVE);\n              }\n\n              start_1 = liEle_1.offsetHeight;\n              end_1 = select('.' + TEXTWRAP, currLi).offsetHeight;\n            },\n            progress: function (args) {\n              args.element.style.display = 'block';\n              proxy_1.animateHeight(args, start_1, end_1);\n            },\n            end: function (args) {\n              args.element.style.display = 'block';\n\n              if (!isNullOrUndefined(activeElement_1) && activeElement_1 instanceof HTMLElement) {\n                activeElement_1.classList.remove(ITEM_ANIMATION_ACTIVE);\n              }\n\n              _this.expandedNode(liEle_1, ul_1, icon);\n            }\n          });\n        } else {\n          this.expandedNode(liEle_1, ul_1, icon);\n        }\n      }\n    } else {\n      var ul = select('.' + PARENTITEM, currLi);\n      ul.style.display = 'none';\n\n      if (this.fields.dataSource instanceof DataManager === true) {\n        this.preventExpand = false;\n      }\n    }\n\n    if (this.initialRender) {\n      icon.classList.add('interaction');\n    }\n  };\n\n  TreeView.prototype.expandedNode = function (currLi, ul, icon) {\n    ul.style.display = 'block';\n    currLi.style.display = 'block';\n    currLi.style.overflow = '';\n    currLi.style.height = '';\n    removeClass([icon], PROCESS);\n    this.addExpand(currLi);\n\n    if (this.allowTextWrap && this.isLoaded && this.isFirstRender) {\n      this.updateWrap(currLi);\n      this.isFirstRender = false;\n    }\n\n    if (this.isLoaded && this.expandArgs && !this.isRefreshed) {\n      this.expandArgs = this.getExpandEvent(currLi, null);\n      this.trigger('nodeExpanded', this.expandArgs);\n    }\n  };\n\n  TreeView.prototype.addExpand = function (liEle) {\n    liEle.setAttribute('aria-expanded', 'true');\n    removeClass([liEle], NODECOLLAPSED);\n    var id = liEle.getAttribute('data-uid');\n\n    if (!isNOU(id) && this.expandedNodes.indexOf(id) === -1) {\n      this.expandedNodes.push(id);\n    }\n  };\n\n  TreeView.prototype.collapseNode = function (currLi, icon, e) {\n    var _this = this;\n\n    if (icon.classList.contains(PROCESS)) {\n      return;\n    } else {\n      addClass([icon], PROCESS);\n    }\n\n    var colArgs;\n\n    if (this.isLoaded) {\n      colArgs = this.getExpandEvent(currLi, e);\n      this.trigger('nodeCollapsing', colArgs, function (observedArgs) {\n        if (observedArgs.cancel) {\n          removeClass([icon], PROCESS);\n        } else {\n          _this.nodeCollapseAction(currLi, icon, observedArgs);\n        }\n      });\n    } else {\n      this.nodeCollapseAction(currLi, icon, colArgs);\n    }\n  };\n\n  TreeView.prototype.nodeCollapseAction = function (currLi, icon, colArgs) {\n    var _this = this;\n\n    removeClass([icon], COLLAPSIBLE);\n    addClass([icon], EXPANDABLE);\n    var start = 0;\n    var end = 0;\n    var proxy = this;\n    var ul = select('.' + PARENTITEM, currLi);\n    var liEle = currLi;\n    var activeElement = select('.' + LISTITEM + '.' + ACTIVE, currLi);\n\n    if (this.isAnimate) {\n      this.aniObj.animate(ul, {\n        name: this.animation.collapse.effect,\n        duration: this.animation.collapse.duration,\n        timingFunction: this.animation.collapse.easing,\n        begin: function (args) {\n          liEle.style.overflow = 'hidden';\n\n          if (!isNullOrUndefined(activeElement) && activeElement instanceof HTMLElement) {\n            activeElement.classList.add(ITEM_ANIMATION_ACTIVE);\n          }\n\n          start = select('.' + TEXTWRAP, currLi).offsetHeight;\n          end = liEle.offsetHeight;\n        },\n        progress: function (args) {\n          proxy.animateHeight(args, start, end);\n        },\n        end: function (args) {\n          args.element.style.display = 'none';\n\n          if (!isNullOrUndefined(activeElement) && activeElement instanceof HTMLElement) {\n            activeElement.classList.remove(ITEM_ANIMATION_ACTIVE);\n          }\n\n          _this.collapsedNode(liEle, ul, icon, colArgs);\n        }\n      });\n    } else {\n      this.collapsedNode(liEle, ul, icon, colArgs);\n    }\n  };\n\n  TreeView.prototype.collapsedNode = function (liEle, ul, icon, colArgs) {\n    ul.style.display = 'none';\n    liEle.style.overflow = '';\n    liEle.style.height = '';\n    removeClass([icon], PROCESS);\n    this.removeExpand(liEle);\n\n    if (this.isLoaded) {\n      colArgs = this.getExpandEvent(liEle, null);\n      this.trigger('nodeCollapsed', colArgs);\n    }\n  };\n\n  TreeView.prototype.removeExpand = function (liEle, toRemove) {\n    if (toRemove) {\n      liEle.removeAttribute('aria-expanded');\n    } else {\n      this.disableExpandAttr(liEle);\n    }\n\n    var index = this.expandedNodes.indexOf(liEle.getAttribute('data-uid'));\n\n    if (index > -1) {\n      this.expandedNodes.splice(index, 1);\n    }\n  };\n\n  TreeView.prototype.disableExpandAttr = function (liEle) {\n    liEle.setAttribute('aria-expanded', 'false');\n    addClass([liEle], NODECOLLAPSED);\n  };\n\n  TreeView.prototype.setHeight = function (currLi, ul) {\n    ul.style.display = 'block';\n    ul.style.visibility = 'hidden';\n    currLi.style.height = currLi.offsetHeight + 'px';\n    ul.style.display = 'none';\n    ul.style.visibility = '';\n  };\n\n  TreeView.prototype.animateHeight = function (args, start, end) {\n    var remaining = (args.duration - args.timeStamp) / args.duration;\n    var currentHeight = (end - start) * remaining + start;\n    args.element.parentElement.style.height = currentHeight + 'px';\n  };\n\n  TreeView.prototype.renderChildNodes = function (parentLi, expandChild, callback, loaded) {\n    var _this = this;\n\n    var eicon = select('div.' + ICON, parentLi);\n\n    if (isNOU(eicon)) {\n      return;\n    }\n\n    this.showSpinner(eicon);\n    var childItems;\n    /* eslint-disable */\n\n    if (this.fields.dataSource instanceof DataManager) {\n      var level = this.parents(parentLi, '.' + PARENTITEM).length;\n      var mapper_2 = this.getChildFields(this.fields, level, 1);\n\n      if (isNOU(mapper_2) || isNOU(mapper_2.dataSource)) {\n        detach(eicon);\n        this.removeExpand(parentLi, true);\n        return;\n      }\n\n      this.treeList.push('false');\n\n      if (this.fields.dataSource instanceof DataManager && this.isOffline) {\n        this.treeList.pop();\n        childItems = this.getChildNodes(this.treeData, parentLi.getAttribute('data-uid'));\n        this.loadChild(childItems, mapper_2, eicon, parentLi, expandChild, callback, loaded);\n      } else {\n        mapper_2.dataSource.executeQuery(this.getQuery(mapper_2, parentLi.getAttribute('data-uid'))).then(function (e) {\n          _this.treeList.pop();\n\n          childItems = e.result;\n\n          if (_this.dataType === 1) {\n            _this.dataType = 2;\n          }\n\n          _this.loadChild(childItems, mapper_2, eicon, parentLi, expandChild, callback, loaded);\n        }).catch(function (e) {\n          _this.trigger('actionFailure', {\n            error: e\n          });\n        });\n      }\n    } else {\n      childItems = this.getChildNodes(this.treeData, parentLi.getAttribute('data-uid'));\n      this.currentLoadData = this.getSortedData(childItems);\n\n      if (isNOU(childItems) || childItems.length === 0) {\n        detach(eicon);\n        this.removeExpand(parentLi, true);\n        return;\n      } else {\n        this.listBaseOption.ariaAttributes.level = parseFloat(parentLi.getAttribute('aria-level')) + 1;\n        parentLi.appendChild(ListBase.createList(this.createElement, this.currentLoadData, this.listBaseOption));\n        this.expandNode(parentLi, eicon, loaded);\n        this.setSelectionForChildNodes(childItems);\n        this.ensureCheckNode(parentLi);\n        this.finalizeNode(parentLi);\n        this.disableTreeNodes(childItems);\n        this.renderSubChild(parentLi, expandChild, loaded);\n      }\n    }\n  };\n\n  TreeView.prototype.loadChild = function (childItems, mapper, eicon, parentLi, expandChild, callback, loaded) {\n    this.currentLoadData = childItems;\n\n    if (isNOU(childItems) || childItems.length === 0) {\n      detach(eicon);\n      this.removeExpand(parentLi, true);\n    } else {\n      this.updateListProp(mapper);\n\n      if (this.fields.dataSource instanceof DataManager && !this.isOffline) {\n        var id = parentLi.getAttribute('data-uid');\n        var nodeData = this.getNodeObject(id);\n        setValue('child', childItems, nodeData);\n      }\n\n      this.listBaseOption.ariaAttributes.level = parseFloat(parentLi.getAttribute('aria-level')) + 1;\n      parentLi.appendChild(ListBase.createList(this.createElement, childItems, this.listBaseOption));\n      this.expandNode(parentLi, eicon, loaded);\n      this.setSelectionForChildNodes(childItems);\n      this.ensureCheckNode(parentLi);\n      this.finalizeNode(parentLi);\n      this.disableTreeNodes(childItems);\n      this.renderSubChild(parentLi, expandChild, loaded);\n    }\n\n    if (callback) {\n      callback();\n    }\n\n    if (this.treeList.length === 0 && !this.isLoaded) {\n      this.finalize();\n    }\n  };\n\n  TreeView.prototype.disableTreeNodes = function (childItems) {\n    var i = 0;\n\n    while (i < childItems.length) {\n      var id = childItems[i][this.fields.id] ? childItems[i][this.fields.id].toString() : null;\n\n      if (this.disableNode !== undefined && this.disableNode.indexOf(id) !== -1) {\n        this.doDisableAction([id]);\n      }\n\n      i++;\n    }\n  };\n  /**\n   * Sets the child Item in selectedState while rendering the child node\n   */\n\n\n  TreeView.prototype.setSelectionForChildNodes = function (nodes) {\n    var i;\n\n    for (i = 0; i < nodes.length; i++) {\n      var id = nodes[i][this.fields.id] ? nodes[i][this.fields.id].toString() : null;\n\n      if (this.selectedNodes !== undefined && this.selectedNodes.indexOf(id) !== -1) {\n        this.doSelectionAction();\n      }\n    }\n  };\n\n  TreeView.prototype.ensureCheckNode = function (element) {\n    if (this.showCheckBox) {\n      this.ele = this.checkedElement ? this.checkedElement.indexOf(element.getAttribute('data-uid')) : null;\n\n      if (this.autoCheck) {\n        this.ensureChildCheckState(element);\n        this.ensureParentCheckState(element);\n      }\n    }\n\n    this.currentLoadData = null;\n  };\n\n  TreeView.prototype.getFields = function (mapper, nodeLevel, dataLevel) {\n    if (nodeLevel === dataLevel) {\n      return mapper;\n    } else {\n      return this.getFields(this.getChildMapper(mapper), nodeLevel, dataLevel + 1);\n    }\n  };\n\n  TreeView.prototype.getChildFields = function (mapper, nodeLevel, dataLevel) {\n    var childData;\n\n    if (nodeLevel === dataLevel) {\n      return this.getChildMapper(mapper);\n    } else {\n      return this.getChildFields(this.getChildMapper(mapper), nodeLevel, dataLevel + 1);\n    }\n  };\n\n  TreeView.prototype.getChildMapper = function (mapper) {\n    return typeof mapper.child === 'string' || isNOU(mapper.child) ? mapper : mapper.child;\n  };\n\n  TreeView.prototype.getChildNodes = function (obj, parentId, isRoot) {\n    if (isRoot === void 0) {\n      isRoot = false;\n    }\n\n    var childNodes;\n\n    if (isNOU(obj)) {\n      return childNodes;\n    } else if (this.dataType === 1) {\n      return this.getChildGroup(this.groupedData, parentId, isRoot);\n    } else {\n      if (typeof this.fields.child === 'string') {\n        for (var i = 0, objlen = obj.length; i < objlen; i++) {\n          var dataId = getValue(this.fields.id, obj[i]);\n\n          if (dataId && dataId.toString() === parentId) {\n            return getValue(this.fields.child, obj[i]);\n          } else if (!isNOU(getValue(this.fields.child, obj[i]))) {\n            childNodes = this.getChildNodes(getValue(this.fields.child, obj[i]), parentId);\n\n            if (childNodes !== undefined) {\n              break;\n            }\n          }\n        }\n      }\n    }\n\n    return childNodes;\n  };\n\n  TreeView.prototype.getChildGroup = function (data, parentId, isRoot) {\n    var childNodes;\n\n    if (isNOU(data)) {\n      return childNodes;\n    }\n\n    for (var i = 0, objlen = data.length; i < objlen; i++) {\n      if (!isNOU(data[i][0]) && !isNOU(getValue(this.fields.parentID, data[i][0]))) {\n        if (getValue(this.fields.parentID, data[i][0]).toString() === parentId) {\n          return data[i];\n        }\n      } else if (isRoot) {\n        return data[i];\n      } else {\n        return [];\n      }\n    }\n\n    return childNodes;\n  };\n\n  TreeView.prototype.renderSubChild = function (element, expandChild, loaded) {\n    if (expandChild) {\n      var cIcons = selectAll('.' + EXPANDABLE, element);\n\n      for (var i = 0, len = cIcons.length; i < len; i++) {\n        var icon = cIcons[i];\n\n        if (element.querySelector('.e-icons') !== cIcons[i]) {\n          var curLi = closest(icon, '.' + LISTITEM);\n          this.expandArgs = this.getExpandEvent(curLi, null);\n\n          if (loaded !== true) {\n            this.trigger('nodeExpanding', this.expandArgs);\n          }\n\n          this.renderChildNodes(curLi, expandChild, null, loaded);\n        }\n      }\n    }\n  };\n\n  TreeView.prototype.toggleSelect = function (li, e, multiSelect) {\n    if (!li.classList.contains('e-disable')) {\n      if (this.allowMultiSelection && (e && e.ctrlKey || multiSelect) && this.isActive(li)) {\n        this.unselectNode(li, e);\n      } else {\n        this.selectNode(li, e, multiSelect);\n      }\n    }\n  };\n\n  TreeView.prototype.isActive = function (li) {\n    return li.classList.contains(ACTIVE) ? true : false;\n  };\n\n  TreeView.prototype.selectNode = function (li, e, multiSelect) {\n    var _this = this;\n\n    if (isNOU(li) || !this.allowMultiSelection && this.isActive(li) && !isNOU(e)) {\n      this.setFocusElement(li);\n      return;\n    }\n\n    var eventArgs;\n\n    if (this.isLoaded) {\n      eventArgs = this.getSelectEvent(li, 'select', e);\n      this.trigger('nodeSelecting', eventArgs, function (observedArgs) {\n        if (!observedArgs.cancel) {\n          _this.nodeSelectAction(li, e, observedArgs, multiSelect);\n        }\n      });\n    } else {\n      this.nodeSelectAction(li, e, eventArgs, multiSelect);\n    }\n  };\n\n  TreeView.prototype.nodeSelectAction = function (li, e, eventArgs, multiSelect) {\n    if (!this.allowMultiSelection || !multiSelect && (!e || e && !e.ctrlKey)) {\n      this.removeSelectAll();\n    }\n\n    if (this.allowMultiSelection && e && e.shiftKey) {\n      if (!this.startNode) {\n        this.startNode = li;\n      }\n\n      var startIndex = this.liList.indexOf(this.startNode);\n      var endIndex = this.liList.indexOf(li);\n\n      if (startIndex > endIndex) {\n        var temp = startIndex;\n        startIndex = endIndex;\n        endIndex = temp;\n      }\n\n      for (var i = startIndex; i <= endIndex; i++) {\n        var currNode = this.liList[i];\n\n        if (isVisible(currNode) && !currNode.classList.contains('e-disable')) {\n          this.addSelect(currNode);\n        }\n      }\n    } else {\n      this.startNode = li;\n      this.addSelect(li);\n    }\n\n    this.setFocusElement(li);\n\n    if (this.isLoaded) {\n      eventArgs.nodeData = this.getNodeData(li);\n      this.trigger('nodeSelected', eventArgs);\n    }\n  };\n\n  TreeView.prototype.unselectNode = function (li, e) {\n    var _this = this;\n\n    var eventArgs;\n\n    if (this.isLoaded) {\n      eventArgs = this.getSelectEvent(li, 'un-select', e);\n      this.trigger('nodeSelecting', eventArgs, function (observedArgs) {\n        if (!observedArgs.cancel) {\n          _this.nodeUnselectAction(li, observedArgs);\n        }\n      });\n    } else {\n      this.nodeUnselectAction(li, eventArgs);\n    }\n  };\n\n  TreeView.prototype.nodeUnselectAction = function (li, eventArgs) {\n    this.removeSelect(li);\n    this.setFocusElement(li);\n\n    if (this.isLoaded) {\n      eventArgs.nodeData = this.getNodeData(li);\n      this.trigger('nodeSelected', eventArgs);\n    }\n  };\n\n  TreeView.prototype.setFocusElement = function (li) {\n    if (!isNOU(li)) {\n      var focusedNode = this.getFocusedNode();\n\n      if (focusedNode) {\n        removeClass([focusedNode], FOCUS);\n      }\n\n      addClass([li], FOCUS);\n      this.updateIdAttr(focusedNode, li);\n    }\n  };\n\n  TreeView.prototype.addSelect = function (liEle) {\n    liEle.setAttribute('aria-selected', 'true');\n    addClass([liEle], ACTIVE);\n    var id = liEle.getAttribute('data-uid');\n\n    if (!isNOU(id) && this.selectedNodes.indexOf(id) === -1) {\n      this.selectedNodes.push(id);\n    }\n  };\n\n  TreeView.prototype.removeSelect = function (liEle) {\n    if (this.allowMultiSelection) {\n      liEle.setAttribute('aria-selected', 'false');\n    } else {\n      liEle.removeAttribute('aria-selected');\n    }\n\n    removeClass([liEle], ACTIVE);\n    var index = this.selectedNodes.indexOf(liEle.getAttribute('data-uid'));\n\n    if (index > -1) {\n      this.selectedNodes.splice(index, 1);\n    }\n  };\n\n  TreeView.prototype.removeSelectAll = function () {\n    var selectedLI = this.element.querySelectorAll('.' + ACTIVE);\n\n    for (var _i = 0, selectedLI_1 = selectedLI; _i < selectedLI_1.length; _i++) {\n      var ele = selectedLI_1[_i];\n\n      if (this.allowMultiSelection) {\n        ele.setAttribute('aria-selected', 'false');\n      } else {\n        ele.removeAttribute('aria-selected');\n      }\n    }\n\n    removeClass(selectedLI, ACTIVE);\n    this.setProperties({\n      selectedNodes: []\n    }, true);\n  };\n\n  TreeView.prototype.getSelectEvent = function (currLi, action, e) {\n    var nodeData = this.getNodeData(currLi);\n    return {\n      action: action,\n      cancel: false,\n      isInteracted: isNOU(e) ? false : true,\n      node: currLi,\n      nodeData: nodeData\n    };\n  };\n\n  TreeView.prototype.setExpandOnType = function () {\n    this.expandOnType = this.expandOn === 'Auto' ? Browser.isDevice ? 'Click' : 'DblClick' : this.expandOn;\n  };\n\n  TreeView.prototype.expandHandler = function (e) {\n    var target = e.originalEvent.target;\n\n    if (!target || target.classList.contains(INPUT) || target.classList.contains(ROOT) || target.classList.contains(PARENTITEM) || target.classList.contains(LISTITEM) || target.classList.contains(ICON) || this.showCheckBox && closest(target, '.' + CHECKBOXWRAP)) {\n      return;\n    } else {\n      this.expandCollapseAction(closest(target, '.' + LISTITEM), e);\n    }\n  };\n\n  TreeView.prototype.expandCollapseAction = function (currLi, e) {\n    var icon = select('div.' + ICON, currLi);\n\n    if (!icon || icon.classList.contains(PROCESS)) {\n      return;\n    } else {\n      var classList = icon.classList;\n\n      if (classList.contains(EXPANDABLE)) {\n        this.expandAction(currLi, icon, e);\n      } else if (classList.contains(COLLAPSIBLE)) {\n        this.collapseNode(currLi, icon, e);\n      }\n    }\n  };\n\n  TreeView.prototype.expandAction = function (currLi, icon, e, expandChild, callback) {\n    var _this = this;\n\n    if (icon.classList.contains(PROCESS)) {\n      return;\n    } else {\n      addClass([icon], PROCESS);\n    }\n\n    if (this.isLoaded && !this.isRefreshed) {\n      this.expandArgs = this.getExpandEvent(currLi, e);\n      this.trigger('nodeExpanding', this.expandArgs, function (observedArgs) {\n        if (observedArgs.cancel) {\n          removeClass([icon], PROCESS);\n        } else {\n          _this.nodeExpandAction(currLi, icon, expandChild, callback);\n        }\n      });\n    } else {\n      this.nodeExpandAction(currLi, icon, expandChild, callback);\n    }\n  };\n\n  TreeView.prototype.nodeExpandAction = function (currLi, icon, expandChild, callback) {\n    var ul = select('.' + PARENTITEM, currLi);\n\n    if (ul && ul.nodeName === 'UL') {\n      this.expandNode(currLi, icon);\n    } else {\n      this.isFirstRender = true;\n      this.renderChildNodes(currLi, expandChild, callback);\n      var liEles = selectAll('.' + LISTITEM, currLi);\n\n      for (var i = 0; i < liEles.length; i++) {\n        var id = this.getId(liEles[i]);\n\n        if (this.expandChildren.indexOf(id) !== -1 && this.expandChildren !== undefined) {\n          var icon_1 = select('.' + EXPANDABLE, select('.' + TEXTWRAP, liEles[i]));\n\n          if (!isNOU(icon_1)) {\n            this.expandAction(liEles[i], icon_1, null);\n          }\n\n          this.expandChildren.splice(this.expandChildren.indexOf(id), 1);\n        }\n      }\n    }\n  };\n\n  TreeView.prototype.keyActionHandler = function (e) {\n    var _this = this;\n\n    var target = e.target;\n    var focusedNode = this.getFocusedNode();\n\n    if (target && target.classList.contains(INPUT)) {\n      var inpEle = target;\n\n      if (e.action === 'enter') {\n        inpEle.blur();\n        this.element.focus();\n        addClass([focusedNode], HOVER);\n      } else if (e.action === 'escape') {\n        inpEle.value = this.oldText;\n        inpEle.blur();\n        this.element.focus();\n        addClass([focusedNode], HOVER);\n      }\n\n      return;\n    }\n\n    e.preventDefault();\n    var eventArgs = {\n      cancel: false,\n      event: e,\n      node: focusedNode\n    };\n    this.trigger('keyPress', eventArgs, function (observedArgs) {\n      if (!observedArgs.cancel) {\n        switch (e.action) {\n          case 'space':\n            if (_this.showCheckBox) {\n              _this.checkNode(e);\n            }\n\n            break;\n\n          case 'moveRight':\n            _this.openNode(_this.enableRtl ? false : true, e);\n\n            break;\n\n          case 'moveLeft':\n            _this.openNode(_this.enableRtl ? true : false, e);\n\n            break;\n\n          case 'shiftDown':\n            _this.shiftKeySelect(true, e);\n\n            break;\n\n          case 'moveDown':\n          case 'ctrlDown':\n          case 'csDown':\n            _this.navigateNode(true);\n\n            break;\n\n          case 'shiftUp':\n            _this.shiftKeySelect(false, e);\n\n            break;\n\n          case 'moveUp':\n          case 'ctrlUp':\n          case 'csUp':\n            _this.navigateNode(false);\n\n            break;\n\n          case 'home':\n          case 'shiftHome':\n          case 'ctrlHome':\n          case 'csHome':\n            _this.navigateRootNode(true);\n\n            break;\n\n          case 'end':\n          case 'shiftEnd':\n          case 'ctrlEnd':\n          case 'csEnd':\n            _this.navigateRootNode(false);\n\n            break;\n\n          case 'enter':\n          case 'ctrlEnter':\n          case 'shiftEnter':\n          case 'csEnter':\n            _this.toggleSelect(focusedNode, e);\n\n            break;\n\n          case 'f2':\n            if (_this.allowEditing && !focusedNode.classList.contains('e-disable')) {\n              _this.createTextbox(focusedNode, e);\n            }\n\n            break;\n\n          case 'ctrlA':\n            if (_this.allowMultiSelection) {\n              var sNodes = selectAll('.' + LISTITEM + ':not(.' + ACTIVE + ')', _this.element);\n\n              _this.selectGivenNodes(sNodes);\n            }\n\n            break;\n        }\n      }\n    });\n  };\n\n  TreeView.prototype.navigateToFocus = function (isUp) {\n    var focusNode = this.getFocusedNode().querySelector('.' + TEXTWRAP);\n    var pos = focusNode.getBoundingClientRect();\n    var parent = this.getScrollParent(this.element);\n\n    if (!isNOU(parent)) {\n      var parentPos = parent.getBoundingClientRect();\n\n      if (pos.bottom > parentPos.bottom) {\n        parent.scrollTop += pos.bottom - parentPos.bottom;\n      } else if (pos.top < parentPos.top) {\n        parent.scrollTop -= parentPos.top - pos.top;\n      }\n    }\n\n    var isVisible = this.isVisibleInViewport(focusNode);\n\n    if (!isVisible) {\n      focusNode.scrollIntoView(isUp);\n    }\n  };\n\n  TreeView.prototype.isVisibleInViewport = function (txtWrap) {\n    var pos = txtWrap.getBoundingClientRect();\n    return pos.top >= 0 && pos.left >= 0 && pos.bottom <= (window.innerHeight || document.documentElement.clientHeight) && pos.right <= (window.innerWidth || document.documentElement.clientWidth);\n  };\n\n  TreeView.prototype.getScrollParent = function (node) {\n    if (isNOU(node)) {\n      return null;\n    }\n\n    return node.scrollHeight > node.clientHeight ? node : this.getScrollParent(node.parentElement);\n  };\n\n  TreeView.prototype.shiftKeySelect = function (isTowards, e) {\n    if (this.allowMultiSelection) {\n      var focusedNode = this.getFocusedNode();\n      var nextNode = isTowards ? this.getNextNode(focusedNode) : this.getPrevNode(focusedNode);\n      this.removeHover();\n      this.setFocusElement(nextNode);\n      this.toggleSelect(nextNode, e, false);\n      this.navigateToFocus(!isTowards);\n    } else {\n      this.navigateNode(isTowards);\n    }\n  };\n\n  TreeView.prototype.checkNode = function (e) {\n    var focusedNode = this.getFocusedNode();\n    var checkWrap = select('.' + CHECKBOXWRAP, focusedNode);\n    var isChecked = select(' .' + CHECKBOXFRAME, checkWrap).classList.contains(CHECK);\n\n    if (!focusedNode.classList.contains('e-disable')) {\n      if (focusedNode.getElementsByClassName(\"e-checkbox-disabled\").length == 0) {\n        this.validateCheckNode(checkWrap, isChecked, focusedNode, e);\n      }\n    }\n  };\n\n  TreeView.prototype.validateCheckNode = function (checkWrap, isCheck, li, e) {\n    var _this = this;\n\n    var currLi = closest(checkWrap, '.' + LISTITEM);\n    this.checkActionNodes = [];\n    var ariaState = !isCheck ? 'true' : 'false';\n\n    if (!isNOU(ariaState)) {\n      checkWrap.setAttribute('aria-checked', ariaState);\n    }\n\n    var eventArgs = this.getCheckEvent(currLi, isCheck ? 'uncheck' : 'check', e);\n    this.trigger('nodeChecking', eventArgs, function (observedArgs) {\n      if (!observedArgs.cancel) {\n        _this.nodeCheckingAction(checkWrap, isCheck, li, observedArgs, e);\n      }\n    });\n  };\n\n  TreeView.prototype.nodeCheckingAction = function (checkWrap, isCheck, li, eventArgs, e) {\n    if (this.checkedElement.indexOf(li.getAttribute('data-uid')) === -1) {\n      this.checkedElement.push(li.getAttribute('data-uid'));\n\n      if (this.autoCheck) {\n        var child = this.getChildNodes(this.treeData, li.getAttribute('data-uid'));\n        child !== null ? this.allCheckNode(child, this.checkedElement, null, null, false) : child = null;\n      }\n    }\n\n    this.changeState(checkWrap, isCheck ? 'uncheck' : 'check', e, true);\n\n    if (this.autoCheck) {\n      this.ensureChildCheckState(li);\n      this.ensureParentCheckState(closest(closest(li, '.' + PARENTITEM), '.' + LISTITEM));\n      var doCheck = void 0;\n\n      if (eventArgs.action === 'check') {\n        doCheck = true;\n      } else if (eventArgs.action === 'uncheck') {\n        doCheck = false;\n      }\n\n      this.ensureStateChange(li, doCheck);\n    }\n\n    this.nodeCheckedEvent(checkWrap, isCheck, e);\n  };\n  /**\n   * Update checkedNodes when UI interaction happens before the child node renders in DOM\n   */\n\n\n  TreeView.prototype.ensureStateChange = function (li, doCheck) {\n    var childElement = select('.' + PARENTITEM, li);\n    var parentIndex = li.getAttribute('data-uid');\n    var mapper = this.fields;\n\n    if (this.dataType === 1 && this.autoCheck) {\n      var resultData = new DataManager(this.treeData).executeLocal(new Query().where(mapper.parentID, 'equal', parentIndex, true));\n\n      for (var i = 0; i < resultData.length; i++) {\n        var resultId = resultData[i][this.fields.id] ? resultData[i][this.fields.id].toString() : null;\n        var isCheck = resultData[i][this.fields.isChecked] ? resultData[i][this.fields.isChecked].toString() : null;\n\n        if (this.checkedNodes.indexOf(parentIndex) !== -1 && this.checkedNodes.indexOf(resultId) === -1) {\n          this.checkedNodes.push(resultId);\n          var childItems = this.getChildNodes(this.treeData, resultId);\n          this.getChildItems(childItems, doCheck);\n\n          if (this.parentNodeCheck.indexOf(resultId) !== -1) {\n            this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(resultId), 1);\n          }\n        } else if (this.checkedNodes.indexOf(parentIndex) === -1 && childElement === null && this.checkedNodes.indexOf(resultId) !== -1) {\n          this.checkedNodes.splice(this.checkedNodes.indexOf(resultId), 1);\n\n          if (isCheck === 'true') {\n            this.updateField(this.treeData, this.fields, resultId, 'isChecked', null);\n          }\n\n          if (this.checkedNodes.indexOf(parentIndex) === -1 && childElement === null || this.parentNodeCheck.indexOf(resultId) !== -1) {\n            var childNodes = this.getChildNodes(this.treeData, resultId);\n            this.getChildItems(childNodes, doCheck);\n\n            if (this.parentNodeCheck.indexOf(resultId) !== -1) {\n              this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(resultId), 1);\n            }\n          }\n        } else {\n          var childItems = this.getChildNodes(this.treeData, resultId);\n          this.getChildItems(childItems, doCheck);\n        }\n      }\n    } else if (this.dataType === 1 && !this.autoCheck) {\n      if (!doCheck) {\n        var checkedData = new DataManager(this.treeData).executeLocal(new Query().where(mapper.isChecked, 'equal', true, false));\n\n        for (var i = 0; i < checkedData.length; i++) {\n          var id = checkedData[i][this.fields.id] ? checkedData[i][this.fields.id].toString() : null;\n\n          if (this.checkedNodes.indexOf(id) !== -1) {\n            this.checkedNodes.splice(this.checkedNodes.indexOf(id), 1);\n          }\n\n          this.updateField(this.treeData, this.fields, id, 'isChecked', null);\n        }\n\n        this.checkedNodes = [];\n      } else {\n        for (var i = 0; i < this.treeData.length; i++) {\n          var checkedId = this.treeData[i][this.fields.id] ? this.treeData[i][this.fields.id].toString() : null;\n\n          if (this.checkedNodes.indexOf(checkedId) === -1) {\n            this.checkedNodes.push(checkedId);\n          }\n        }\n      }\n    } else {\n      var childItems = this.getChildNodes(this.treeData, parentIndex);\n\n      if (childItems) {\n        this.childStateChange(childItems, parentIndex, childElement, doCheck);\n      }\n    }\n  };\n\n  TreeView.prototype.getChildItems = function (childItems, doCheck) {\n    for (var i = 0; i < childItems.length; i++) {\n      var childId = childItems[i][this.fields.id] ? childItems[i][this.fields.id].toString() : null;\n      var childIsCheck = childItems[i][this.fields.isChecked] ? childItems[i][this.fields.isChecked].toString() : null;\n\n      if (this.checkedNodes.indexOf(childId) !== -1 && !doCheck) {\n        this.checkedNodes.splice(this.checkedNodes.indexOf(childId), 1);\n      }\n\n      if (this.checkedNodes.indexOf(childId) === -1 && doCheck) {\n        this.checkedNodes.push(childId);\n      }\n\n      if (childIsCheck === 'true' && !doCheck) {\n        this.updateField(this.treeData, this.fields, childId, 'isChecked', null);\n      }\n\n      var subChildItems = this.getChildNodes(this.treeData, childId);\n\n      if (subChildItems.length > 0) {\n        this.getChildItems(subChildItems, doCheck);\n      }\n    }\n  };\n  /**\n   * Update checkedNodes when UI interaction happens before the child node renders in DOM for hierarchical DS\n   */\n\n\n  TreeView.prototype.childStateChange = function (childItems, parent, childElement, doCheck) {\n    for (var i = 0; i < childItems.length; i++) {\n      var checkedChild = childItems[i][this.fields.id] ? childItems[i][this.fields.id].toString() : '';\n      var isCheck = childItems[i][this.fields.isChecked] ? childItems[i][this.fields.isChecked].toString() : null;\n\n      if (this.autoCheck) {\n        if (this.checkedNodes.indexOf(parent) !== -1 && this.checkedNodes.indexOf(checkedChild) === -1) {\n          this.checkedNodes.push(checkedChild);\n\n          if (this.parentNodeCheck.indexOf(checkedChild) !== -1) {\n            this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(checkedChild), 1);\n          }\n        } else if (this.checkedNodes.indexOf(parent) === -1 && this.checkedNodes.indexOf(checkedChild) !== -1 && !doCheck) {\n          this.checkedNodes.splice(this.checkedNodes.indexOf(checkedChild), 1);\n\n          if (isCheck === 'true') {\n            this.updateField(this.treeData, this.fields, checkedChild, 'isChecked', null);\n          }\n        }\n      } else if (!this.autoCheck) {\n        if (!doCheck) {\n          if (this.checkedNodes.indexOf(checkedChild) !== -1) {\n            this.checkedNodes.splice(this.checkedNodes.indexOf(checkedChild), 1);\n          }\n\n          this.updateField(this.treeData, this.fields, checkedChild, 'isChecked', null);\n          this.checkedNodes = [];\n        } else {\n          if (this.checkedNodes.indexOf(checkedChild) === -1) {\n            this.checkedNodes.push(checkedChild);\n          }\n        }\n      }\n\n      var subChild = this.getChildNodes([childItems[i]], checkedChild);\n\n      if (subChild) {\n        this.childStateChange(subChild, parent, childElement, doCheck);\n      }\n    }\n  }; //This method can be used to get all child nodes of a parent by passing the children of a parent along with 'validateCheck' set to false\n\n\n  TreeView.prototype.allCheckNode = function (child, newCheck, checked, childCheck, validateCheck) {\n    if (child) {\n      for (var length_1 = 0; length_1 < child.length; length_1++) {\n        var childId = getValue(this.fields.id, child[length_1]);\n        var check = this.element.querySelector('[data-uid=\"' + childId + '\"]'); //Validates isChecked case while no UI interaction has been performed on the node or it's parent\n\n        if (validateCheck !== false && this.checkedElement.indexOf(childId.toString()) === -1) {\n          if (check === null && !isNOU(child[length_1][this.fields.isChecked]) && newCheck.indexOf(childId.toString()) === -1 || childCheck === 0 || checked === 2) {\n            child[length_1][this.fields.isChecked] !== false || checked === 2 ? newCheck.push(childId.toString()) : childCheck = null;\n            childCheck = child[length_1][this.fields.isChecked] !== false || checked === 2 ? 0 : null;\n          }\n        } //Pushes child checked node done thro' UI interaction\n\n\n        if (newCheck.indexOf(childId.toString()) === -1 && isNOU(checked)) {\n          newCheck.push(childId.toString());\n        }\n\n        var hierChildId = getValue(this.fields.child.toString(), child[length_1]); //Gets if any next level children are available for child nodes\n\n        if (getValue(this.fields.hasChildren, child[length_1]) === true || hierChildId) {\n          var id = getValue(this.fields.id, child[length_1]);\n          var childId_1 = void 0;\n\n          if (this.dataType === 1) {\n            childId_1 = this.getChildNodes(this.treeData, id.toString());\n          } else {\n            childId_1 = hierChildId;\n          }\n\n          if (childId_1) {\n            isNOU(validateCheck) ? this.allCheckNode(childId_1, newCheck, checked, childCheck) : this.allCheckNode(childId_1, newCheck, checked, childCheck, validateCheck);\n            childCheck = null;\n          }\n        }\n\n        childCheck = null;\n      }\n    }\n  };\n\n  TreeView.prototype.openNode = function (toBeOpened, e) {\n    var focusedNode = this.getFocusedNode();\n    var icon = select('div.' + ICON, focusedNode);\n\n    if (toBeOpened) {\n      if (!icon) {\n        return;\n      } else if (icon.classList.contains(EXPANDABLE)) {\n        this.expandAction(focusedNode, icon, e);\n      } else {\n        this.focusNextNode(focusedNode, true);\n      }\n    } else {\n      if (icon && icon.classList.contains(COLLAPSIBLE)) {\n        this.collapseNode(focusedNode, icon, e);\n      } else {\n        var parentLi = closest(closest(focusedNode, '.' + PARENTITEM), '.' + LISTITEM);\n\n        if (!parentLi) {\n          return;\n        } else {\n          if (!parentLi.classList.contains('e-disable')) {\n            this.setFocus(focusedNode, parentLi);\n            this.navigateToFocus(true);\n          }\n        }\n      }\n    }\n  };\n\n  TreeView.prototype.navigateNode = function (isTowards) {\n    var focusedNode = this.getFocusedNode();\n    this.focusNextNode(focusedNode, isTowards);\n  };\n\n  TreeView.prototype.navigateRootNode = function (isBackwards) {\n    var focusedNode = this.getFocusedNode();\n    var rootNode = isBackwards ? this.getRootNode() : this.getEndNode();\n\n    if (!rootNode.classList.contains('e-disable')) {\n      this.setFocus(focusedNode, rootNode);\n      this.navigateToFocus(isBackwards);\n    }\n  };\n\n  TreeView.prototype.getFocusedNode = function () {\n    var selectedItem;\n    var fNode = select('.' + LISTITEM + '.' + FOCUS, this.element);\n\n    if (isNOU(fNode)) {\n      selectedItem = select('.' + LISTITEM, this.element);\n    }\n\n    return isNOU(fNode) ? isNOU(selectedItem) ? this.element.firstElementChild : selectedItem : fNode;\n  };\n\n  TreeView.prototype.focusNextNode = function (li, isTowards) {\n    var nextNode = isTowards ? this.getNextNode(li) : this.getPrevNode(li);\n    this.setFocus(li, nextNode);\n    this.navigateToFocus(!isTowards);\n\n    if (nextNode.classList.contains('e-disable')) {\n      var lastChild = nextNode.lastChild;\n\n      if (nextNode.previousSibling == null && nextNode.classList.contains('e-level-1')) {\n        this.focusNextNode(nextNode, true);\n      } else if (nextNode.nextSibling == null && nextNode.classList.contains('e-node-collapsed')) {\n        this.focusNextNode(nextNode, false);\n      } else if (nextNode.nextSibling == null && lastChild.classList.contains(TEXTWRAP)) {\n        this.focusNextNode(nextNode, false);\n      } else {\n        this.focusNextNode(nextNode, isTowards);\n      }\n    }\n  };\n\n  TreeView.prototype.getNextNode = function (li) {\n    var index = this.liList.indexOf(li);\n    var nextNode;\n\n    do {\n      index++;\n      nextNode = this.liList[index];\n\n      if (isNOU(nextNode)) {\n        return li;\n      }\n    } while (!isVisible(nextNode));\n\n    return nextNode;\n  };\n\n  TreeView.prototype.getPrevNode = function (li) {\n    var index = this.liList.indexOf(li);\n    var prevNode;\n\n    do {\n      index--;\n      prevNode = this.liList[index];\n\n      if (isNOU(prevNode)) {\n        return li;\n      }\n    } while (!isVisible(prevNode));\n\n    return prevNode;\n  };\n\n  TreeView.prototype.getRootNode = function () {\n    var index = 0;\n    var rootNode;\n\n    do {\n      rootNode = this.liList[index];\n      index++;\n    } while (!isVisible(rootNode));\n\n    return rootNode;\n  };\n\n  TreeView.prototype.getEndNode = function () {\n    var index = this.liList.length - 1;\n    var endNode;\n\n    do {\n      endNode = this.liList[index];\n      index--;\n    } while (!isVisible(endNode));\n\n    return endNode;\n  };\n\n  TreeView.prototype.setFocus = function (preNode, nextNode) {\n    removeClass([preNode], [HOVER, FOCUS]);\n\n    if (!nextNode.classList.contains('e-disable')) {\n      addClass([nextNode], [HOVER, FOCUS]);\n      this.updateIdAttr(preNode, nextNode);\n    }\n  };\n\n  TreeView.prototype.updateIdAttr = function (preNode, nextNode) {\n    this.element.removeAttribute('aria-activedescendant');\n\n    if (preNode) {\n      preNode.removeAttribute('id');\n    }\n\n    nextNode.setAttribute('id', this.element.id + '_active');\n    this.element.setAttribute('aria-activedescendant', this.element.id + '_active');\n  };\n\n  TreeView.prototype.focusIn = function () {\n    if (!this.mouseDownStatus) {\n      addClass([this.getFocusedNode()], HOVER);\n    }\n\n    this.mouseDownStatus = false;\n  };\n\n  TreeView.prototype.focusOut = function () {\n    removeClass([this.getFocusedNode()], HOVER);\n  };\n\n  TreeView.prototype.onMouseOver = function (e) {\n    var target = e.target;\n    var classList = target.classList;\n    var currentLi = closest(target, '.' + LISTITEM);\n\n    if (!currentLi || classList.contains(PARENTITEM) || classList.contains(LISTITEM)) {\n      this.removeHover();\n      return;\n    } else {\n      if (currentLi && !currentLi.classList.contains('e-disable')) {\n        this.setHover(currentLi);\n      }\n    }\n  };\n\n  TreeView.prototype.setHover = function (li) {\n    if (!li.classList.contains(HOVER)) {\n      this.removeHover();\n      addClass([li], HOVER);\n    }\n  };\n\n  ;\n\n  TreeView.prototype.onMouseLeave = function (e) {\n    this.removeHover();\n  };\n\n  TreeView.prototype.removeHover = function () {\n    var hoveredNode = selectAll('.' + HOVER, this.element);\n\n    if (hoveredNode && hoveredNode.length) {\n      removeClass(hoveredNode, HOVER);\n    }\n  };\n\n  ;\n\n  TreeView.prototype.getNodeData = function (currLi, fromDS) {\n    if (!isNOU(currLi) && currLi.classList.contains(LISTITEM) && !isNOU(closest(currLi, '.' + CONTROL)) && closest(currLi, '.' + CONTROL).classList.contains(ROOT)) {\n      var id = currLi.getAttribute('data-uid');\n      var text = this.getText(currLi, fromDS);\n      var pNode = closest(currLi.parentNode, '.' + LISTITEM);\n      var pid = pNode ? pNode.getAttribute('data-uid') : null;\n      var selected = currLi.classList.contains(ACTIVE);\n      var expanded = currLi.getAttribute('aria-expanded') === 'true' ? true : false;\n      var hasChildren = currLi.getAttribute('aria-expanded') !== null ? true : (select('.' + EXPANDABLE, currLi) || select('.' + COLLAPSIBLE, currLi)) != null ? true : false;\n      var checked = null;\n\n      if (this.showCheckBox) {\n        checked = select('.' + CHECKBOXWRAP, currLi).getAttribute('aria-checked');\n      }\n\n      return {\n        id: id,\n        text: text,\n        parentID: pid,\n        selected: selected,\n        expanded: expanded,\n        isChecked: checked,\n        hasChildren: hasChildren\n      };\n    }\n\n    return {\n      id: '',\n      text: '',\n      parentID: '',\n      selected: false,\n      expanded: false,\n      isChecked: '',\n      hasChildren: false\n    };\n  };\n\n  TreeView.prototype.getText = function (currLi, fromDS) {\n    if (fromDS) {\n      var nodeData = this.getNodeObject(currLi.getAttribute('data-uid'));\n      var level = parseFloat(currLi.getAttribute('aria-level'));\n      var nodeFields = this.getFields(this.fields, level, 1);\n      return getValue(nodeFields.text, nodeData);\n    }\n\n    return select('.' + LISTTEXT, currLi).textContent;\n  };\n\n  TreeView.prototype.getExpandEvent = function (currLi, e) {\n    var nodeData = this.getNodeData(currLi);\n    return {\n      cancel: false,\n      isInteracted: isNOU(e) ? false : true,\n      node: currLi,\n      nodeData: nodeData,\n      event: e\n    };\n  };\n\n  TreeView.prototype.renderNodeTemplate = function (data, textEle, dataId) {\n    var tempArr = this.nodeTemplateFn(data, this, 'nodeTemplate' + dataId, this.element.id + 'nodeTemplate', this.isStringTemplate, undefined, textEle, this.root);\n\n    if (tempArr) {\n      tempArr = Array.prototype.slice.call(tempArr);\n      append(tempArr, textEle);\n    }\n  };\n\n  TreeView.prototype.destroyTemplate = function (liEle) {\n    this.clearTemplate(['nodeTemplate' + liEle.getAttribute('data-uid')]);\n  };\n\n  TreeView.prototype.reRenderNodes = function () {\n    this.updateListProp(this.fields);\n\n    if (Browser.isIE) {\n      this.ulElement = this.element.querySelector('.e-list-parent.e-ul');\n      this.ulElement.parentElement.removeChild(this.ulElement);\n    } else {\n      this.element.innerHTML = '';\n    }\n\n    if (!isNOU(this.nodeTemplateFn)) {\n      this.clearTemplate();\n    }\n\n    this.setTouchClass();\n    this.setProperties({\n      selectedNodes: [],\n      checkedNodes: [],\n      expandedNodes: []\n    }, true);\n    this.checkedElement = [];\n    this.isLoaded = false;\n    this.setDataBinding(true);\n  };\n\n  TreeView.prototype.setCssClass = function (oldClass, newClass) {\n    if (!isNOU(oldClass) && oldClass !== '') {\n      removeClass([this.element], oldClass.split(' '));\n    }\n\n    if (!isNOU(newClass) && newClass !== '') {\n      addClass([this.element], newClass.split(' '));\n    }\n  };\n\n  TreeView.prototype.editingHandler = function (e) {\n    var target = e.target;\n\n    if (!target || target.classList.contains(ROOT) || target.classList.contains(PARENTITEM) || target.classList.contains(LISTITEM) || target.classList.contains(ICON) || target.classList.contains(INPUT) || target.classList.contains(INPUTGROUP)) {\n      return;\n    } else {\n      var liEle = closest(target, '.' + LISTITEM);\n      this.createTextbox(liEle, e);\n    }\n  };\n\n  TreeView.prototype.createTextbox = function (liEle, e) {\n    var _this = this;\n\n    var oldInpEle = select('.' + TREEINPUT, this.element);\n\n    if (oldInpEle) {\n      oldInpEle.blur();\n    }\n\n    var textEle = select('.' + LISTTEXT, liEle);\n    this.updateOldText(liEle);\n    var innerEle = this.createElement('input', {\n      className: TREEINPUT,\n      attrs: {\n        value: this.oldText\n      }\n    });\n    var eventArgs = this.getEditEvent(liEle, null, innerEle.outerHTML);\n    this.trigger('nodeEditing', eventArgs, function (observedArgs) {\n      if (!observedArgs.cancel) {\n        var inpWidth = textEle.offsetWidth + 5;\n        var style = 'width:' + inpWidth + 'px';\n        addClass([liEle], EDITING);\n\n        if (!isNOU(_this.nodeTemplateFn)) {\n          _this.destroyTemplate(liEle);\n        }\n\n        textEle.innerHTML = eventArgs.innerHtml;\n        var inpEle = select('.' + TREEINPUT, textEle);\n        _this.inputObj = Input.createInput({\n          element: inpEle,\n          properties: {\n            enableRtl: _this.enableRtl\n          }\n        }, _this.createElement);\n\n        _this.inputObj.container.setAttribute('style', style);\n\n        inpEle.focus();\n        var inputEle = inpEle;\n        inputEle.setSelectionRange(0, inputEle.value.length);\n\n        _this.wireInputEvents(inpEle);\n      }\n    });\n  };\n\n  TreeView.prototype.updateOldText = function (liEle) {\n    var id = liEle.getAttribute('data-uid');\n    this.editData = this.getNodeObject(id);\n    var level = parseFloat(liEle.getAttribute('aria-level'));\n    this.editFields = this.getFields(this.fields, level, 1);\n    this.oldText = getValue(this.editFields.text, this.editData);\n  };\n\n  TreeView.prototype.inputFocusOut = function (e) {\n    if (!select('.' + TREEINPUT, this.element)) {\n      return;\n    }\n\n    var target = e.target;\n    var newText = target.value;\n    var txtEle = closest(target, '.' + LISTTEXT);\n    var liEle = closest(target, '.' + LISTITEM);\n    detach(this.inputObj.container);\n\n    if (this.fields.dataSource instanceof DataManager && !this.isOffline) {\n      this.crudOperation('update', null, liEle, newText, null, null, true);\n    } else {\n      this.appendNewText(liEle, txtEle, newText, true);\n    }\n  };\n\n  TreeView.prototype.appendNewText = function (liEle, txtEle, newText, isInput) {\n    var _this = this;\n\n    var eventArgs = this.getEditEvent(liEle, newText, null);\n    this.trigger('nodeEdited', eventArgs, function (observedArgs) {\n      newText = observedArgs.cancel ? observedArgs.oldText : observedArgs.newText;\n\n      _this.updateText(liEle, txtEle, newText, isInput);\n\n      if (observedArgs.oldText !== newText) {\n        _this.triggerEvent();\n      }\n    });\n  };\n\n  TreeView.prototype.updateText = function (liEle, txtEle, newText, isInput) {\n    var newData = setValue(this.editFields.text, newText, this.editData);\n\n    if (!isNOU(this.nodeTemplateFn)) {\n      txtEle.innerText = '';\n      var dataId = liEle.getAttribute('data-uid');\n      this.renderNodeTemplate(newData, txtEle, dataId);\n      this.renderReactTemplates();\n    } else {\n      txtEle.innerText = newText;\n    }\n\n    if (isInput) {\n      removeClass([liEle], EDITING);\n      txtEle.focus();\n    }\n\n    if (this.allowTextWrap) {\n      this.calculateWrap(liEle);\n    }\n  };\n\n  TreeView.prototype.getElement = function (ele) {\n    if (isNOU(ele)) {\n      return null;\n    } else if (typeof ele === 'string') {\n      return this.element.querySelector('[data-uid=\"' + ele + '\"]');\n    } else if (typeof ele === 'object') {\n      return getElement(ele);\n    } else {\n      return null;\n    }\n  };\n\n  TreeView.prototype.getId = function (ele) {\n    if (isNOU(ele)) {\n      return null;\n    } else if (typeof ele === 'string') {\n      return ele;\n    } else if (typeof ele === 'object') {\n      return getElement(ele).getAttribute('data-uid');\n    } else {\n      return null;\n    }\n  };\n\n  TreeView.prototype.getEditEvent = function (liEle, newText, inpEle) {\n    var data = this.getNodeData(liEle);\n    return {\n      cancel: false,\n      newText: newText,\n      node: liEle,\n      nodeData: data,\n      oldText: this.oldText,\n      innerHtml: inpEle\n    };\n  };\n\n  TreeView.prototype.getNodeObject = function (id) {\n    var childNodes;\n\n    if (isNOU(id)) {\n      return childNodes;\n    } else if (this.dataType === 1) {\n      for (var i = 0, objlen = this.treeData.length; i < objlen; i++) {\n        var dataId = getValue(this.fields.id, this.treeData[i]);\n\n        if (!isNOU(this.treeData[i]) && !isNOU(dataId) && dataId.toString() === id) {\n          return this.treeData[i];\n        }\n      }\n    } else {\n      return this.getChildNodeObject(this.treeData, this.fields, id);\n    }\n\n    return childNodes;\n  };\n\n  TreeView.prototype.getChildNodeObject = function (obj, mapper, id) {\n    var newList;\n\n    if (isNOU(obj)) {\n      return newList;\n    }\n\n    for (var i = 0, objlen = obj.length; i < objlen; i++) {\n      var dataId = getValue(mapper.id, obj[i]);\n\n      if (obj[i] && dataId && dataId.toString() === id) {\n        return obj[i];\n      } else if (typeof mapper.child === 'string' && !isNOU(getValue(mapper.child, obj[i]))) {\n        var childData = getValue(mapper.child, obj[i]);\n        newList = this.getChildNodeObject(childData, this.getChildMapper(mapper), id);\n\n        if (newList !== undefined) {\n          break;\n        }\n      } else if (this.fields.dataSource instanceof DataManager && !isNOU(getValue('child', obj[i]))) {\n        var child = 'child';\n        newList = this.getChildNodeObject(getValue(child, obj[i]), this.getChildMapper(mapper), id);\n\n        if (newList !== undefined) {\n          break;\n        }\n      }\n    }\n\n    return newList;\n  };\n\n  TreeView.prototype.setDragAndDrop = function (toBind) {\n    if (toBind && !this.disabled) {\n      this.initializeDrag();\n    } else {\n      this.destroyDrag();\n    }\n  };\n\n  TreeView.prototype.initializeDrag = function () {\n    var _this = this;\n\n    var virtualEle;\n    var proxy = this;\n    this.dragObj = new Draggable(this.element, {\n      enableTailMode: true,\n      enableAutoScroll: true,\n      dragArea: this.dragArea,\n      dragTarget: '.' + TEXTWRAP,\n      helper: function (e) {\n        _this.dragTarget = e.sender.target;\n        var dragRoot = closest(_this.dragTarget, '.' + ROOT);\n        var dragWrap = closest(_this.dragTarget, '.' + TEXTWRAP);\n        _this.dragLi = closest(_this.dragTarget, '.' + LISTITEM);\n\n        if (_this.fullRowSelect && !dragWrap && _this.dragTarget.classList.contains(FULLROW)) {\n          dragWrap = _this.dragTarget.nextElementSibling;\n        }\n\n        if (!_this.dragTarget || !e.element.isSameNode(dragRoot) || !dragWrap || _this.dragTarget.classList.contains(ROOT) || _this.dragTarget.classList.contains(PARENTITEM) || _this.dragTarget.classList.contains(LISTITEM) || _this.dragLi.classList.contains('e-disable')) {\n          return false;\n        }\n\n        var cloneEle = dragWrap.cloneNode(true);\n\n        if (isNOU(select('div.' + ICON, cloneEle))) {\n          var icon = proxy.createElement('div', {\n            className: ICON + ' ' + EXPANDABLE\n          });\n          cloneEle.insertBefore(icon, cloneEle.children[0]);\n        }\n\n        var cssClass = DRAGITEM + ' ' + ROOT + ' ' + _this.cssClass + ' ' + (_this.enableRtl ? RTL : '');\n        virtualEle = proxy.createElement('div', {\n          className: cssClass\n        });\n        virtualEle.appendChild(cloneEle);\n        var nLen = _this.selectedNodes.length;\n\n        if (nLen > 1 && _this.allowMultiSelection && _this.dragLi.classList.contains(ACTIVE)) {\n          var cNode = proxy.createElement('span', {\n            className: DROPCOUNT,\n            innerHTML: '' + nLen\n          });\n          virtualEle.appendChild(cNode);\n        }\n\n        document.body.appendChild(virtualEle);\n        document.body.style.cursor = '';\n        _this.dragData = _this.getNodeData(_this.dragLi);\n        return virtualEle;\n      },\n      dragStart: function (e) {\n        addClass([_this.element], DRAGGING);\n        var listItem = closest(e.target, '.e-list-item');\n        var level;\n\n        if (listItem) {\n          level = parseInt(listItem.getAttribute('aria-level'), 10);\n        }\n\n        var eventArgs = _this.getDragEvent(e.event, _this, null, e.target, null, virtualEle, level);\n\n        if (eventArgs.draggedNode.classList.contains(EDITING)) {\n          _this.dragObj.intDestroy(e.event);\n\n          _this.dragCancelAction(virtualEle);\n        } else {\n          _this.trigger('nodeDragStart', eventArgs, function (observedArgs) {\n            if (observedArgs.cancel) {\n              _this.dragObj.intDestroy(e.event);\n\n              _this.dragCancelAction(virtualEle);\n            } else {\n              _this.dragStartAction = true;\n            }\n          });\n        }\n      },\n      drag: function (e) {\n        _this.dragObj.setProperties({\n          cursorAt: {\n            top: !isNOU(e.event.targetTouches) || Browser.isDevice ? 60 : -20\n          }\n        });\n\n        _this.dragAction(e, virtualEle);\n      },\n      dragStop: function (e) {\n        removeClass([_this.element], DRAGGING);\n\n        _this.removeVirtualEle();\n\n        var dropTarget = e.target;\n        var preventTargetExpand = false;\n        var dropRoot = closest(dropTarget, '.' + DROPPABLE);\n        var isHelperElement = true;\n\n        if (!dropTarget || !dropRoot) {\n          detach(e.helper);\n          document.body.style.cursor = '';\n          isHelperElement = false;\n        }\n\n        var listItem = closest(dropTarget, '.e-list-item');\n        var level;\n\n        if (listItem) {\n          level = parseInt(listItem.getAttribute('aria-level'), 10);\n        }\n\n        var eventArgs = _this.getDragEvent(e.event, _this, dropTarget, dropTarget, null, e.helper, level);\n\n        eventArgs.preventTargetExpand = preventTargetExpand;\n\n        _this.trigger('nodeDragStop', eventArgs, function (observedArgs) {\n          _this.dragParent = observedArgs.draggedParentNode;\n          _this.preventExpand = observedArgs.preventTargetExpand;\n\n          if (observedArgs.cancel) {\n            if (e.helper.parentNode) {\n              detach(e.helper);\n            }\n\n            document.body.style.cursor = '';\n            isHelperElement = false;\n          }\n\n          _this.dragStartAction = false;\n        });\n      }\n    });\n    this.dropObj = new Droppable(this.element, {\n      out: function (e) {\n        if (!isNOU(e) && !e.target.classList.contains(SIBLING)) {\n          document.body.style.cursor = 'not-allowed';\n        }\n      },\n      over: function (e) {\n        document.body.style.cursor = '';\n      },\n      drop: function (e) {\n        _this.dropAction(e);\n      }\n    });\n  };\n\n  TreeView.prototype.dragCancelAction = function (virtualEle) {\n    detach(virtualEle);\n    removeClass([this.element], DRAGGING);\n    this.dragStartAction = false;\n  };\n\n  TreeView.prototype.dragAction = function (e, virtualEle) {\n    var dropRoot = closest(e.target, '.' + DROPPABLE);\n    var dropWrap = closest(e.target, '.' + TEXTWRAP);\n    var icon = select('div.' + ICON, virtualEle);\n    removeClass([icon], [DROPIN, DROPNEXT, DROPOUT, NODROP]);\n    this.removeVirtualEle();\n    document.body.style.cursor = '';\n    var classList = e.target.classList;\n\n    if (this.fullRowSelect && !dropWrap && !isNOU(classList) && classList.contains(FULLROW)) {\n      dropWrap = e.target.nextElementSibling;\n    }\n\n    if (dropRoot) {\n      var dropLi = closest(e.target, '.' + LISTITEM);\n      var checkWrapper = closest(e.target, '.' + CHECKBOXWRAP);\n      var collapse = closest(e.target, '.' + COLLAPSIBLE);\n      var expand = closest(e.target, '.' + EXPANDABLE);\n\n      if (!dropRoot.classList.contains(ROOT) || dropWrap && !dropLi.isSameNode(this.dragLi) && !this.isDescendant(this.dragLi, dropLi)) {\n        if (this.hasTemplate && dropLi) {\n          var templateTarget = select(this.fullRowSelect ? '.' + FULLROW : '.' + TEXTWRAP, dropLi);\n\n          if (e && !expand && !collapse && e.event.offsetY < 7 && !checkWrapper || expand && e.event.offsetY < 5 || collapse && e.event.offsetX < 3) {\n            var index = this.fullRowSelect ? 1 : 0;\n            this.appendIndicator(dropLi, icon, index);\n          } else if (e && !expand && !collapse && !checkWrapper && templateTarget && e.event.offsetY > templateTarget.offsetHeight - 10 || expand && e.event.offsetY > 19 || collapse && e.event.offsetX > 19) {\n            var index = this.fullRowSelect ? 2 : 1;\n            this.appendIndicator(dropLi, icon, index);\n          } else {\n            addClass([icon], DROPIN);\n          }\n        } else {\n          if (dropLi && e && !expand && !collapse && e.event.offsetY < 7 && !checkWrapper || expand && e.event.offsetY < 5 || collapse && e.event.offsetX < 3) {\n            var index = this.fullRowSelect ? 1 : 0;\n            this.appendIndicator(dropLi, icon, index);\n          } else if (dropLi && e && !expand && !collapse && e.target.offsetHeight > 0 && e.event.offsetY > e.target.offsetHeight - 10 && !checkWrapper || expand && e.event.offsetY > 19 || collapse && e.event.offsetX > 19) {\n            var index = this.fullRowSelect ? 2 : 1;\n            this.appendIndicator(dropLi, icon, index);\n          } else {\n            addClass([icon], DROPIN);\n          }\n        }\n      } else if (e.target.nodeName === 'LI' && !dropLi.isSameNode(this.dragLi) && !this.isDescendant(this.dragLi, dropLi)) {\n        addClass([icon], DROPNEXT);\n        this.renderVirtualEle(e);\n      } else if (e.target.classList.contains(SIBLING)) {\n        addClass([icon], DROPNEXT);\n      } else {\n        addClass([icon], DROPOUT);\n      }\n    } else {\n      addClass([icon], NODROP);\n      document.body.style.cursor = 'not-allowed';\n    }\n\n    var listItem = closest(e.target, '.e-list-item');\n    var level;\n\n    if (listItem) {\n      level = parseInt(listItem.getAttribute('aria-level'), 10);\n    }\n\n    var eventArgs = this.getDragEvent(e.event, this, e.target, e.target, null, virtualEle, level);\n\n    if (eventArgs.dropIndicator) {\n      removeClass([icon], eventArgs.dropIndicator);\n    }\n\n    this.trigger('nodeDragging', eventArgs);\n\n    if (eventArgs.dropIndicator) {\n      addClass([icon], eventArgs.dropIndicator);\n    }\n  };\n\n  TreeView.prototype.appendIndicator = function (dropLi, icon, index) {\n    addClass([icon], DROPNEXT);\n    var virEle = this.createElement('div', {\n      className: SIBLING\n    });\n    dropLi.insertBefore(virEle, dropLi.children[index]);\n  };\n  /* eslint-disable */\n\n\n  TreeView.prototype.dropAction = function (e) {\n    var offsetY = e.event.offsetY;\n    var dropTarget = e.target;\n    var dragObj;\n    var level;\n    var drop = false;\n    var dragInstance;\n    dragInstance = e.dragData.draggable;\n\n    for (var i = 0; i < dragInstance.ej2_instances.length; i++) {\n      if (dragInstance.ej2_instances[i] instanceof TreeView_1) {\n        dragObj = dragInstance.ej2_instances[i];\n        break;\n      }\n    }\n\n    if (dragObj && dragObj.dragTarget) {\n      var dragTarget = dragObj.dragTarget;\n      var dragLi = closest(dragTarget, '.' + LISTITEM);\n      var dropLi = closest(dropTarget, '.' + LISTITEM);\n\n      if (dropLi == null && dropTarget.classList.contains(ROOT)) {\n        dropLi = dropTarget.firstElementChild;\n      }\n\n      detach(e.droppedElement);\n      document.body.style.cursor = '';\n\n      if (!dropLi || dropLi.isSameNode(dragLi) || this.isDescendant(dragLi, dropLi)) {\n        if (this.fields.dataSource instanceof DataManager === false) {\n          this.preventExpand = false;\n        }\n\n        return;\n      }\n\n      if (dragObj.allowMultiSelection && dragLi.classList.contains(ACTIVE)) {\n        var sNodes = selectAll('.' + ACTIVE, dragObj.element);\n\n        if (e.target.offsetHeight <= 33 && offsetY > e.target.offsetHeight - 10 && offsetY > 6) {\n          for (var i = sNodes.length - 1; i >= 0; i--) {\n            if (dropLi.isSameNode(sNodes[i]) || this.isDescendant(sNodes[i], dropLi)) {\n              continue;\n            }\n\n            this.appendNode(dropTarget, sNodes[i], dropLi, e, dragObj, offsetY);\n          }\n        } else {\n          for (var i = 0; i < sNodes.length; i++) {\n            if (dropLi.isSameNode(sNodes[i]) || this.isDescendant(sNodes[i], dropLi)) {\n              continue;\n            }\n\n            this.appendNode(dropTarget, sNodes[i], dropLi, e, dragObj, offsetY);\n          }\n        }\n      } else {\n        this.appendNode(dropTarget, dragLi, dropLi, e, dragObj, offsetY);\n      }\n\n      level = parseInt(dragLi.getAttribute('aria-level'), 10);\n      drop = true;\n    }\n\n    if (this.fields.dataSource instanceof DataManager === false) {\n      this.preventExpand = false;\n    }\n\n    this.trigger('nodeDropped', this.getDragEvent(e.event, dragObj, dropTarget, e.target, e.dragData.draggedElement, null, level, drop));\n\n    if (dragObj.element.id !== this.element.id) {\n      dragObj.triggerEvent();\n    }\n\n    this.triggerEvent();\n  };\n\n  TreeView.prototype.appendNode = function (dropTarget, dragLi, dropLi, e, dragObj, offsetY) {\n    var checkWrapper = closest(dropTarget, '.' + CHECKBOXWRAP);\n    var collapse = closest(e.target, '.' + COLLAPSIBLE);\n    var expand = closest(e.target, '.' + EXPANDABLE);\n\n    if (!dragLi.classList.contains('e-disable') && !checkWrapper && (expand && e.event.offsetY < 5 || collapse && e.event.offsetX < 3 || expand && e.event.offsetY > 19 || collapse && e.event.offsetX > 19 || !expand && !collapse)) {\n      if (dropTarget.nodeName === 'LI') {\n        this.dropAsSiblingNode(dragLi, dropLi, e, dragObj);\n      } else if (dropTarget.firstElementChild && dropTarget.classList.contains(ROOT)) {\n        if (dropTarget.firstElementChild.nodeName === 'UL') {\n          this.dropAsSiblingNode(dragLi, dropLi, e, dragObj);\n        }\n      } else if (dropTarget.classList.contains('e-icon-collapsible') || dropTarget.classList.contains('e-icon-expandable')) {\n        this.dropAsSiblingNode(dragLi, dropLi, e, dragObj);\n      } else {\n        this.dropAsChildNode(dragLi, dropLi, dragObj, null, e, offsetY);\n      }\n    } else {\n      this.dropAsChildNode(dragLi, dropLi, dragObj, null, e, offsetY, true);\n    }\n  };\n\n  TreeView.prototype.dropAsSiblingNode = function (dragLi, dropLi, e, dragObj) {\n    var dropUl = closest(dropLi, '.' + PARENTITEM);\n    var dragParentUl = closest(dragLi, '.' + PARENTITEM);\n    var dragParentLi = closest(dragParentUl, '.' + LISTITEM);\n    var pre;\n\n    if (e.target.offsetHeight > 0 && e.event.offsetY > e.target.offsetHeight - 2) {\n      pre = false;\n    } else if (e.event.offsetY < 2) {\n      pre = true;\n    } else if (e.target.classList.contains('e-icon-expandable') || e.target.classList.contains('e-icon-collapsible')) {\n      if (e.event.offsetY < 5 || e.event.offsetX < 3) {\n        pre = true;\n      } else if (e.event.offsetY > 15 || e.event.offsetX > 17) {\n        pre = false;\n      }\n    }\n\n    if (e.target.classList.contains('e-icon-expandable') || e.target.classList.contains('e-icon-collapsible')) {\n      var target = e.target.closest('li');\n      dropUl.insertBefore(dragLi, pre ? target : target.nextElementSibling);\n    } else {\n      dropUl.insertBefore(dragLi, pre ? e.target : e.target.nextElementSibling);\n    }\n\n    this.moveData(dragLi, dropLi, dropUl, pre, dragObj);\n    this.updateElement(dragParentUl, dragParentLi);\n    this.updateAriaLevel(dragLi);\n\n    if (dragObj.element.id === this.element.id) {\n      this.updateList();\n    } else {\n      dragObj.updateInstance();\n      this.updateInstance();\n    }\n  };\n\n  TreeView.prototype.dropAsChildNode = function (dragLi, dropLi, dragObj, index, e, pos, isCheck) {\n    var dragParentUl = closest(dragLi, '.' + PARENTITEM);\n    var dragParentLi = closest(dragParentUl, '.' + LISTITEM);\n    var dropParentUl = closest(dropLi, '.' + PARENTITEM);\n    var templateTarget;\n\n    if (e && e.target) {\n      templateTarget = select(this.fullRowSelect ? '.' + FULLROW : '.' + TEXTWRAP, dropLi);\n    }\n\n    if (e && pos < 7 && !isCheck) {\n      dropParentUl.insertBefore(dragLi, dropLi);\n      this.moveData(dragLi, dropLi, dropParentUl, true, dragObj);\n    } else if (e && e.target.offsetHeight > 0 && pos > e.target.offsetHeight - 10 && !isCheck && !this.hasTemplate) {\n      dropParentUl.insertBefore(dragLi, dropLi.nextElementSibling);\n      this.moveData(dragLi, dropLi, dropParentUl, false, dragObj);\n    } else if (this.hasTemplate && templateTarget && pos > templateTarget.offsetHeight - 10 && !isCheck) {\n      dropParentUl.insertBefore(dragLi, dropLi.nextElementSibling);\n      this.moveData(dragLi, dropLi, dropParentUl, false, dragObj);\n    } else {\n      var dropUl = this.expandParent(dropLi);\n      var childLi = dropUl.childNodes[index];\n      dropUl.insertBefore(dragLi, childLi);\n      this.moveData(dragLi, childLi, dropUl, true, dragObj);\n    }\n\n    this.updateElement(dragParentUl, dragParentLi);\n    this.updateAriaLevel(dragLi);\n\n    if (dragObj.element.id === this.element.id) {\n      this.updateList();\n    } else {\n      dragObj.updateInstance();\n      this.updateInstance();\n    }\n  };\n\n  TreeView.prototype.moveData = function (dragLi, dropLi, dropUl, pre, dragObj) {\n    var dropParentLi = closest(dropUl, '.' + LISTITEM);\n    var id = this.getId(dragLi);\n    var removedData = dragObj.updateChildField(dragObj.treeData, dragObj.fields, id, null, null, true);\n    var refId = this.getId(dropLi);\n    var index = this.getDataPos(this.treeData, this.fields, refId);\n    var parentId = this.getId(dropParentLi);\n\n    if (this.dataType === 1) {\n      this.updateField(this.treeData, this.fields, parentId, 'hasChildren', true);\n      var pos = isNOU(index) ? this.treeData.length : pre ? index : index + 1;\n\n      if (isNOU(parentId) && !this.hasPid) {\n        delete removedData[0][this.fields.parentID];\n      } else {\n        var currPid = this.isNumberTypeId ? parseFloat(parentId) : parentId;\n        setValue(this.fields.parentID, currPid, removedData[0]);\n      }\n\n      this.treeData.splice(pos, 0, removedData[0]);\n\n      if (dragObj.element.id !== this.element.id) {\n        var childData = dragObj.removeChildNodes(id);\n        pos++;\n\n        for (var i = 0, len = childData.length; i < len; i++) {\n          this.treeData.splice(pos, 0, childData[i]);\n          pos++;\n        }\n\n        dragObj.groupedData = dragObj.getGroupedData(dragObj.treeData, dragObj.fields.parentID);\n      }\n\n      this.groupedData = this.getGroupedData(this.treeData, this.fields.parentID);\n    } else {\n      this.addChildData(this.treeData, this.fields, parentId, removedData, pre ? index : index + 1);\n    }\n  };\n\n  TreeView.prototype.expandParent = function (dropLi) {\n    var dropIcon = select('div.' + ICON, dropLi);\n\n    if (dropIcon && dropIcon.classList.contains(EXPANDABLE) && this.preventExpand !== true) {\n      this.expandAction(dropLi, dropIcon, null);\n    }\n\n    var dropUl = select('.' + PARENTITEM, dropLi);\n\n    if (this.preventExpand === true && !dropUl && dropIcon) {\n      this.renderChildNodes(dropLi);\n    }\n\n    dropUl = select('.' + PARENTITEM, dropLi);\n\n    if (!isNOU(dropUl) && this.preventExpand === true) {\n      dropUl.style.display = 'none';\n    }\n\n    if (!isNOU(dropUl) && this.preventExpand === false) {\n      dropUl.style.display = 'block';\n    }\n\n    if (isNOU(dropUl) && this.preventExpand === true) {\n      if (isNOU(dropIcon)) {\n        ListBase.generateIcon(this.createElement, dropLi, EXPANDABLE, this.listBaseOption);\n      }\n\n      var icon = select('div.' + ICON, dropLi);\n\n      if (icon) {\n        icon.classList.add('e-icon-expandable');\n      }\n\n      dropUl = ListBase.generateUL(this.createElement, [], null, this.listBaseOption);\n      dropLi.appendChild(dropUl);\n\n      if (icon) {\n        removeClass([icon], COLLAPSIBLE);\n      } else {\n        ListBase.generateIcon(this.createElement, dropLi, EXPANDABLE, this.listBaseOption);\n      }\n\n      dropLi.setAttribute('aria-expanded', 'false');\n      dropUl.style.display = 'none';\n    }\n\n    if (isNOU(dropUl)) {\n      this.trigger('nodeExpanding', this.getExpandEvent(dropLi, null));\n\n      if (isNOU(dropIcon)) {\n        ListBase.generateIcon(this.createElement, dropLi, COLLAPSIBLE, this.listBaseOption);\n      }\n\n      var icon = select('div.' + ICON, dropLi);\n\n      if (icon) {\n        removeClass([icon], EXPANDABLE);\n      } else {\n        ListBase.generateIcon(this.createElement, dropLi, COLLAPSIBLE, this.listBaseOption);\n        icon = select('div.' + ICON, dropLi);\n        removeClass([icon], EXPANDABLE);\n      }\n\n      dropUl = ListBase.generateUL(this.createElement, [], null, this.listBaseOption);\n      dropLi.appendChild(dropUl);\n      this.addExpand(dropLi);\n      this.trigger('nodeExpanded', this.getExpandEvent(dropLi, null));\n    }\n\n    return dropUl;\n  };\n\n  TreeView.prototype.updateElement = function (dragParentUl, dragParentLi) {\n    if (dragParentLi && dragParentUl.childElementCount === 0) {\n      var dragIcon = select('div.' + ICON, dragParentLi);\n      detach(dragParentUl);\n      detach(dragIcon);\n      var parentId = this.getId(dragParentLi);\n      this.updateField(this.treeData, this.fields, parentId, 'hasChildren', false);\n      this.removeExpand(dragParentLi, true);\n    }\n  };\n\n  TreeView.prototype.updateAriaLevel = function (dragLi) {\n    var level = this.parents(dragLi, '.' + PARENTITEM).length;\n    dragLi.setAttribute('aria-level', '' + level);\n    this.updateChildAriaLevel(select('.' + PARENTITEM, dragLi), level + 1);\n  };\n\n  TreeView.prototype.updateChildAriaLevel = function (element, level) {\n    if (!isNOU(element)) {\n      var cNodes = element.childNodes;\n\n      for (var i = 0, len = cNodes.length; i < len; i++) {\n        var liEle = cNodes[i];\n        liEle.setAttribute('aria-level', '' + level);\n        this.updateChildAriaLevel(select('.' + PARENTITEM, liEle), level + 1);\n      }\n    }\n  };\n\n  TreeView.prototype.renderVirtualEle = function (e) {\n    var pre;\n\n    if (e.event.offsetY > e.target.offsetHeight - 2) {\n      pre = false;\n    } else if (e.event.offsetY < 2) {\n      pre = true;\n    }\n\n    var virEle = this.createElement('div', {\n      className: SIBLING\n    });\n    var index = this.fullRowSelect ? pre ? 1 : 2 : pre ? 0 : 1;\n    e.target.insertBefore(virEle, e.target.children[index]);\n  };\n\n  TreeView.prototype.removeVirtualEle = function () {\n    var sibEle = select('.' + SIBLING);\n\n    if (sibEle) {\n      detach(sibEle);\n    }\n  };\n\n  TreeView.prototype.destroyDrag = function () {\n    if (this.dragObj && this.dropObj) {\n      this.dragObj.destroy();\n      this.dropObj.destroy();\n    }\n  };\n\n  TreeView.prototype.getDragEvent = function (event, obj, dropTarget, target, dragNode, cloneEle, level, drop) {\n    var dropLi = dropTarget ? closest(dropTarget, '.' + LISTITEM) : null;\n    var dropData = dropLi ? this.getNodeData(dropLi) : null;\n    var draggedNode = obj ? obj.dragLi : dragNode;\n    var draggedNodeData = obj ? obj.dragData : null;\n    var newParent = dropTarget ? this.parents(dropTarget, '.' + LISTITEM) : null;\n    var dragLiParent = obj.dragLi.parentElement;\n    var dragParent = obj.dragLi ? closest(dragLiParent, '.' + LISTITEM) : null;\n    var targetParent = null;\n    var indexValue = null;\n    var iconCss = [DROPNEXT, DROPIN, DROPOUT, NODROP];\n    var iconClass = null;\n    var node = drop === true ? draggedNode : dropLi;\n    var index = node ? closest(node, '.e-list-parent') : null;\n    var i = 0;\n    var position = null;\n    dragParent = obj.dragLi && dragParent === null ? closest(dragLiParent, '.' + ROOT) : dragParent;\n    dragParent = drop === true ? this.dragParent : dragParent;\n\n    if (cloneEle) {\n      while (i < 4) {\n        if (select('.' + ICON, cloneEle).classList.contains(iconCss[i])) {\n          iconClass = iconCss[i];\n          break;\n        }\n\n        i++;\n      }\n    }\n\n    if (index) {\n      var dropTar = 0;\n\n      for (i = 0; i < index.childElementCount; i++) {\n        dropTar = drop !== true && index.children[i] === draggedNode && dropLi !== draggedNode ? ++dropTar : dropTar;\n\n        if (drop !== true && index.children[i].classList.contains('e-hover')) {\n          indexValue = event.offsetY >= 23 ? i + 1 : i;\n          break;\n        } else if (index.children[i] === node) {\n          indexValue = event.offsetY >= 23 ? i : i;\n          break;\n        }\n      }\n\n      indexValue = dropTar !== 0 ? --indexValue : indexValue;\n      position = iconClass == \"e-drop-in\" ? \"Inside\" : event.offsetY < 7 ? \"Before\" : \"After\";\n    }\n\n    if (dropTarget) {\n      if (newParent.length === 0) {\n        targetParent = null;\n      } else if (dropTarget.classList.contains(LISTITEM)) {\n        targetParent = newParent[0];\n      } else {\n        targetParent = newParent[1];\n      }\n    }\n\n    if (dropLi === draggedNode) {\n      targetParent = dropLi;\n    }\n\n    if (dropTarget && target.offsetHeight <= 33 && event.offsetY < target.offsetHeight - 10 && event.offsetY > 6) {\n      targetParent = dropLi;\n\n      if (drop !== true) {\n        level = ++level;\n        var parent_2 = targetParent ? select('.e-list-parent', targetParent) : null;\n        indexValue = parent_2 ? parent_2.children.length : 0;\n\n        if (!(this.fields.dataSource instanceof DataManager) && parent_2 === null && targetParent) {\n          var parent_3 = targetParent.hasAttribute('data-uid') ? this.getChildNodes(this.fields.dataSource, targetParent.getAttribute('data-uid').toString()) : null;\n          indexValue = parent_3 ? parent_3.length : 0;\n        }\n      }\n    }\n\n    return {\n      cancel: false,\n      clonedNode: cloneEle,\n      event: event,\n      draggedNode: draggedNode,\n      draggedNodeData: draggedNodeData,\n      droppedNode: dropLi,\n      droppedNodeData: dropData,\n      dropIndex: indexValue,\n      dropLevel: level,\n      draggedParentNode: dragParent,\n      dropTarget: targetParent,\n      dropIndicator: iconClass,\n      target: target,\n      position: position\n    };\n  };\n\n  TreeView.prototype.addFullRow = function (toAdd) {\n    var len = this.liList.length;\n\n    if (toAdd) {\n      for (var i = 0; i < len; i++) {\n        this.createFullRow(this.liList[i]);\n      }\n    } else {\n      for (var i = 0; i < len; i++) {\n        var rowDiv = select('.' + FULLROW, this.liList[i]);\n        detach(rowDiv);\n      }\n    }\n  };\n\n  TreeView.prototype.createFullRow = function (item) {\n    var rowDiv = this.createElement('div', {\n      className: FULLROW\n    });\n    item.insertBefore(rowDiv, item.childNodes[0]);\n  };\n\n  TreeView.prototype.addMultiSelect = function (toAdd) {\n    if (toAdd) {\n      var liEles = selectAll('.' + LISTITEM + ':not([aria-selected=\"true\"])', this.element);\n\n      for (var _i = 0, liEles_1 = liEles; _i < liEles_1.length; _i++) {\n        var ele = liEles_1[_i];\n        ele.setAttribute('aria-selected', 'false');\n      }\n    } else {\n      var liEles = selectAll('.' + LISTITEM + '[aria-selected=\"false\"]', this.element);\n\n      for (var _a = 0, liEles_2 = liEles; _a < liEles_2.length; _a++) {\n        var ele = liEles_2[_a];\n        ele.removeAttribute('aria-selected');\n      }\n    }\n  };\n\n  TreeView.prototype.collapseByLevel = function (element, level, excludeHiddenNodes) {\n    if (level > 0 && !isNOU(element)) {\n      var cNodes = this.getVisibleNodes(excludeHiddenNodes, element.childNodes);\n\n      for (var i = 0, len = cNodes.length; i < len; i++) {\n        var liEle = cNodes[i];\n        var icon = select('.' + COLLAPSIBLE, select('.' + TEXTWRAP, liEle));\n\n        if (!isNOU(icon)) {\n          this.collapseNode(liEle, icon, null);\n        }\n\n        this.collapseByLevel(select('.' + PARENTITEM, liEle), level - 1, excludeHiddenNodes);\n      }\n    }\n  };\n\n  TreeView.prototype.collapseAllNodes = function (excludeHiddenNodes) {\n    var cIcons = this.getVisibleNodes(excludeHiddenNodes, selectAll('.' + COLLAPSIBLE, this.element));\n\n    for (var i = 0, len = cIcons.length; i < len; i++) {\n      var icon = cIcons[i];\n      var liEle = closest(icon, '.' + LISTITEM);\n      this.collapseNode(liEle, icon, null);\n    }\n  };\n\n  TreeView.prototype.expandByLevel = function (element, level, excludeHiddenNodes) {\n    if (level > 0 && !isNOU(element)) {\n      var eNodes = this.getVisibleNodes(excludeHiddenNodes, element.childNodes);\n\n      for (var i = 0, len = eNodes.length; i < len; i++) {\n        var liEle = eNodes[i];\n        var icon = select('.' + EXPANDABLE, select('.' + TEXTWRAP, liEle));\n\n        if (!isNOU(icon)) {\n          this.expandAction(liEle, icon, null);\n        }\n\n        this.expandByLevel(select('.' + PARENTITEM, liEle), level - 1, excludeHiddenNodes);\n      }\n    }\n  };\n\n  TreeView.prototype.expandAllNodes = function (excludeHiddenNodes) {\n    var eIcons = this.getVisibleNodes(excludeHiddenNodes, selectAll('.' + EXPANDABLE, this.element));\n\n    for (var i = 0, len = eIcons.length; i < len; i++) {\n      var icon = eIcons[i];\n      var liEle = closest(icon, '.' + LISTITEM);\n      this.expandAction(liEle, icon, null, true);\n    }\n  };\n\n  TreeView.prototype.getVisibleNodes = function (excludeHiddenNodes, nodes) {\n    var vNodes = Array.prototype.slice.call(nodes);\n\n    if (excludeHiddenNodes) {\n      for (var i = 0; i < vNodes.length; i++) {\n        if (!isVisible(vNodes[i])) {\n          vNodes.splice(i, 1);\n          i--;\n        }\n      }\n    }\n\n    return vNodes;\n  };\n\n  TreeView.prototype.removeNode = function (node) {\n    var dragParentUl = closest(node, '.' + PARENTITEM);\n    var dragParentLi = closest(dragParentUl, '.' + LISTITEM);\n\n    if (!isNOU(this.nodeTemplateFn)) {\n      this.destroyTemplate(node);\n    }\n\n    detach(node);\n    this.updateElement(dragParentUl, dragParentLi);\n    this.removeData(node);\n  };\n\n  TreeView.prototype.updateInstance = function () {\n    this.updateList();\n    this.updateSelectedNodes();\n    this.updateExpandedNodes();\n  };\n\n  TreeView.prototype.updateList = function () {\n    this.liList = Array.prototype.slice.call(selectAll('.' + LISTITEM, this.element));\n  };\n\n  TreeView.prototype.updateSelectedNodes = function () {\n    this.setProperties({\n      selectedNodes: []\n    }, true);\n    var sNodes = selectAll('.' + ACTIVE, this.element);\n    this.selectGivenNodes(sNodes);\n  };\n\n  TreeView.prototype.updateExpandedNodes = function () {\n    this.setProperties({\n      expandedNodes: []\n    }, true);\n    var eNodes = selectAll('[aria-expanded=\"true\"]', this.element);\n\n    for (var i = 0, len = eNodes.length; i < len; i++) {\n      this.addExpand(eNodes[i]);\n    }\n  };\n\n  TreeView.prototype.removeData = function (node) {\n    if (this.dataType === 1) {\n      var dm = new DataManager(this.treeData);\n      var id = this.getId(node);\n      var data = {};\n      var newId = this.isNumberTypeId ? parseFloat(id) : id;\n      data[this.fields.id] = newId;\n      dm.remove(this.fields.id, data);\n      this.removeChildNodes(id);\n    } else {\n      var id = this.getId(node);\n      this.updateChildField(this.treeData, this.fields, id, null, null, true);\n    }\n  };\n\n  TreeView.prototype.removeChildNodes = function (parentId) {\n    var cNodes = this.getChildGroup(this.groupedData, parentId, false);\n    var childData = [];\n\n    if (cNodes) {\n      for (var i = 0, len = cNodes.length; i < len; i++) {\n        var dm = new DataManager(this.treeData);\n        var id = getValue(this.fields.id, cNodes[i]).toString();\n        var data = {};\n        var currId = this.isNumberTypeId ? parseFloat(id) : id;\n        data[this.fields.id] = currId;\n        var nodeData = dm.remove(this.fields.id, data);\n        childData.push(nodeData[0]);\n        this.removeChildNodes(id);\n      }\n    }\n\n    return childData;\n  };\n\n  TreeView.prototype.doGivenAction = function (nodes, selector, toExpand) {\n    for (var i = 0, len = nodes.length; i < len; i++) {\n      var liEle = this.getElement(nodes[i]);\n\n      if (isNOU(liEle)) {\n        continue;\n      }\n\n      var icon = select('.' + selector, select('.' + TEXTWRAP, liEle));\n\n      if (!isNOU(icon)) {\n        toExpand ? this.expandAction(liEle, icon, null) : this.collapseNode(liEle, icon, null);\n      }\n    }\n  };\n\n  TreeView.prototype.addGivenNodes = function (nodes, dropLi, index, isRemote, dropEle) {\n    if (nodes.length === 0) {\n      return;\n    }\n\n    var sNodes = this.getSortedData(nodes);\n    var level = dropLi ? parseFloat(dropLi.getAttribute('aria-level')) + 1 : 1;\n\n    if (isRemote) {\n      this.updateMapper(level);\n    }\n\n    var li = ListBase.createListItemFromJson(this.createElement, sNodes, this.listBaseOption, level);\n    var dropUl;\n\n    if (!dropEle) {\n      dropUl = dropLi ? this.expandParent(dropLi) : select('.' + PARENTITEM, this.element);\n    } else {\n      dropUl = dropEle;\n    }\n\n    var refNode = dropUl.childNodes[index];\n\n    if (refNode || this.sortOrder === 'None') {\n      for (var i = 0; i < li.length; i++) {\n        dropUl.insertBefore(li[i], refNode);\n      }\n    }\n\n    if (!refNode && (this.sortOrder === 'Ascending' || this.sortOrder === 'Descending')) {\n      var cNodes = dropUl.childNodes;\n\n      for (var i = 0; i < li.length; i++) {\n        for (var j = 0; j < cNodes.length; j++) {\n          var returnValue = this.sortOrder === 'Ascending' ? cNodes[j].textContent.toUpperCase() > li[i].innerText.toUpperCase() : cNodes[j].textContent.toUpperCase() < li[i].innerText.toUpperCase();\n\n          if (returnValue) {\n            dropUl.insertBefore(li[i], cNodes[j]);\n            break;\n          }\n\n          dropUl.insertBefore(li[i], cNodes[cNodes.length]);\n        }\n      }\n    }\n\n    var id = this.getId(dropLi);\n\n    if (this.dataType === 1) {\n      this.updateField(this.treeData, this.fields, id, 'hasChildren', true);\n      var refId = this.getId(refNode);\n      var pos = isNOU(refId) ? this.treeData.length : this.getDataPos(this.treeData, this.fields, refId);\n\n      for (var j = 0; j < nodes.length; j++) {\n        if (!isNOU(id)) {\n          var currId = this.isNumberTypeId ? parseFloat(id) : id;\n          setValue(this.fields.parentID, currId, nodes[j]);\n        }\n\n        this.treeData.splice(pos, 0, nodes[j]);\n        pos++;\n      }\n    } else {\n      this.addChildData(this.treeData, this.fields, id, nodes, index);\n    }\n\n    this.finalizeNode(dropUl);\n  };\n\n  TreeView.prototype.updateMapper = function (level) {\n    var mapper = level === 1 ? this.fields : this.getChildFields(this.fields, level - 1, 1);\n    this.updateListProp(mapper);\n  };\n\n  TreeView.prototype.updateListProp = function (mapper) {\n    var prop = this.getActualProperties(mapper);\n    this.listBaseOption.fields = prop;\n    this.listBaseOption.fields.url = prop.hasOwnProperty('navigateUrl') ? prop.navigateUrl : 'navigateUrl';\n  };\n\n  TreeView.prototype.getDataPos = function (obj, mapper, id) {\n    var pos = null;\n\n    for (var i = 0, objlen = obj.length; i < objlen; i++) {\n      var nodeId = getValue(mapper.id, obj[i]);\n\n      if (obj[i] && nodeId && nodeId.toString() === id) {\n        return i;\n      } else if (typeof mapper.child === 'string' && !isNOU(getValue(mapper.child, obj[i]))) {\n        var data = getValue(mapper.child, obj[i]);\n        pos = this.getDataPos(data, this.getChildMapper(mapper), id);\n\n        if (pos !== null) {\n          break;\n        }\n      } else if (this.fields.dataSource instanceof DataManager && !isNOU(getValue('child', obj[i]))) {\n        var items = getValue('child', obj[i]);\n        pos = this.getDataPos(items, this.getChildMapper(mapper), id);\n\n        if (pos !== null) {\n          break;\n        }\n      }\n    }\n\n    return pos;\n  };\n\n  TreeView.prototype.addChildData = function (obj, mapper, id, data, index) {\n    var updated;\n\n    if (isNOU(id)) {\n      index = isNOU(index) ? obj.length : index;\n\n      for (var k = 0, len = data.length; k < len; k++) {\n        obj.splice(index, 0, data[k]);\n        index++;\n      }\n\n      return updated;\n    }\n\n    for (var i = 0, objlen = obj.length; i < objlen; i++) {\n      var nodeId = getValue(mapper.id, obj[i]);\n\n      if (obj[i] && nodeId && nodeId.toString() === id) {\n        if (typeof mapper.child === 'string' && obj[i].hasOwnProperty(mapper.child) && obj[i][mapper.child] !== null || this.fields.dataSource instanceof DataManager && obj[i].hasOwnProperty('child')) {\n          var key = typeof mapper.child === 'string' ? mapper.child : 'child';\n          var childData = getValue(key, obj[i]);\n\n          if (isNOU(childData)) {\n            childData = [];\n          }\n\n          index = isNOU(index) ? childData.length : index;\n\n          for (var k = 0, len = data.length; k < len; k++) {\n            childData.splice(index, 0, data[k]);\n            index++;\n          }\n        } else {\n          var key = typeof mapper.child === 'string' ? mapper.child : 'child';\n          obj[i][key] = data;\n        }\n\n        return true;\n      } else if (typeof mapper.child === 'string' && !isNOU(getValue(mapper.child, obj[i]))) {\n        var childObj = getValue(mapper.child, obj[i]);\n        updated = this.addChildData(childObj, this.getChildMapper(mapper), id, data, index);\n\n        if (updated !== undefined) {\n          break;\n        }\n      } else if (this.fields.dataSource instanceof DataManager && !isNOU(getValue('child', obj[i]))) {\n        var childData = getValue('child', obj[i]);\n        updated = this.addChildData(childData, this.getChildMapper(mapper), id, data, index);\n\n        if (updated !== undefined) {\n          break;\n        }\n      }\n    }\n\n    return updated;\n  };\n\n  TreeView.prototype.doDisableAction = function (nodes) {\n    var validNodes = this.nodeType(nodes);\n    var validID = this.checkValidId(validNodes);\n    this.validArr = [];\n\n    for (var i = 0, len = validID.length; i < len; i++) {\n      var id = validID[i][this.fields.id].toString();\n\n      if (id && this.disableNode.indexOf(id) === -1) {\n        this.disableNode.push(id);\n      }\n\n      var liEle = this.getElement(id);\n\n      if (liEle) {\n        liEle.setAttribute('aria-disabled', 'true');\n        addClass([liEle], DISABLE);\n      }\n    }\n  };\n\n  TreeView.prototype.doEnableAction = function (nodes) {\n    var strNodes = this.nodeType(nodes);\n\n    for (var i = 0, len = strNodes.length; i < len; i++) {\n      var liEle = this.getElement(strNodes[i]);\n      var id = strNodes[i];\n\n      if (id && this.disableNode.indexOf(id) !== -1) {\n        this.disableNode.splice(this.disableNode.indexOf(id), 1);\n      }\n\n      if (liEle) {\n        liEle.removeAttribute('aria-disabled');\n        removeClass([liEle], DISABLE);\n      }\n    }\n  };\n\n  TreeView.prototype.nodeType = function (nodes) {\n    var validID = [];\n\n    for (var i = 0, len = nodes.length; i < len; i++) {\n      var id = void 0;\n\n      if (typeof nodes[i] == \"string\") {\n        id = nodes[i] ? nodes[i].toString() : null;\n      } else if (typeof nodes[i] === \"object\") {\n        id = nodes[i] ? nodes[i].getAttribute(\"data-uid\").toString() : null;\n      }\n\n      if (validID.indexOf(id) == -1) {\n        validID.push(id);\n      }\n    }\n\n    return validID;\n  };\n\n  TreeView.prototype.checkValidId = function (node) {\n    var _this = this;\n\n    if (this.dataType === 1) {\n      this.validArr = this.treeData.filter(function (data) {\n        return node.indexOf(data[_this.fields.id] ? data[_this.fields.id].toString() : null) !== -1;\n      });\n    } else if (this.dataType === 2) {\n      for (var k = 0; k < this.treeData.length; k++) {\n        var id = this.treeData[k][this.fields.id] ? this.treeData[k][this.fields.id].toString() : null;\n\n        if (node.indexOf(id) !== -1) {\n          this.validArr.push(this.treeData[k]);\n        }\n\n        var childItems = getValue(this.fields.child.toString(), this.treeData[k]);\n\n        if (childItems) {\n          this.filterNestedChild(childItems, node);\n        }\n      }\n    }\n\n    return this.validArr;\n  };\n\n  TreeView.prototype.filterNestedChild = function (treeData, nodes) {\n    for (var k = 0; k < treeData.length; k++) {\n      var id = treeData[k][this.fields.id] ? treeData[k][this.fields.id].toString() : null;\n\n      if (nodes.indexOf(id) !== -1) {\n        this.validArr.push(treeData[k]);\n      }\n\n      var childItems = getValue(this.fields.child.toString(), treeData[k]);\n\n      if (childItems) {\n        this.filterNestedChild(childItems, nodes);\n      }\n    }\n  };\n\n  TreeView.prototype.setTouchClass = function () {\n    var ele = closest(this.element, '.' + BIGGER);\n    this.touchClass = isNOU(ele) ? '' : SMALL;\n  };\n\n  TreeView.prototype.updatePersistProp = function () {\n    this.removeField(this.treeData, this.fields, ['selected', 'expanded']);\n    var sleNodes = this.selectedNodes;\n\n    for (var l = 0, slelen = sleNodes.length; l < slelen; l++) {\n      this.updateField(this.treeData, this.fields, sleNodes[l], 'selected', true);\n    }\n\n    var enodes = this.expandedNodes;\n\n    for (var k = 0, nodelen = enodes.length; k < nodelen; k++) {\n      this.updateField(this.treeData, this.fields, enodes[k], 'expanded', true);\n    }\n\n    if (this.showCheckBox) {\n      this.removeField(this.treeData, this.fields, ['isChecked']);\n      var cnodes = this.checkedNodes;\n\n      for (var m = 0, nodelen = cnodes.length; m < nodelen; m++) {\n        this.updateField(this.treeData, this.fields, cnodes[m], 'isChecked', true);\n      }\n    }\n  };\n\n  TreeView.prototype.removeField = function (obj, mapper, names) {\n    if (isNOU(obj) || isNOU(mapper)) {\n      return;\n    }\n\n    for (var i = 0, objlen = obj.length; i < objlen; i++) {\n      for (var j = 0; j < names.length; j++) {\n        var field = this.getMapperProp(mapper, names[j]);\n\n        if (!isNOU(obj[i][field])) {\n          delete obj[i][field];\n        }\n      }\n\n      if (typeof mapper.child === 'string' && !isNOU(getValue(mapper.child, obj[i]))) {\n        this.removeField(getValue(mapper.child, obj[i]), this.getChildMapper(mapper), names);\n      } else if (this.fields.dataSource instanceof DataManager && !isNOU(getValue('child', obj[i]))) {\n        this.removeField(getValue('child', obj[i]), this.getChildMapper(mapper), names);\n      }\n    }\n  };\n\n  TreeView.prototype.getMapperProp = function (mapper, fieldName) {\n    switch (fieldName) {\n      case 'selected':\n        return !isNOU(mapper.selected) ? mapper.selected : 'selected';\n\n      case 'expanded':\n        return !isNOU(mapper.expanded) ? mapper.expanded : 'expanded';\n\n      case 'isChecked':\n        return !isNOU(mapper.isChecked) ? mapper.isChecked : 'isChecked';\n\n      case 'hasChildren':\n        return !isNOU(mapper.hasChildren) ? mapper.hasChildren : 'hasChildren';\n\n      default:\n        return fieldName;\n    }\n  };\n\n  TreeView.prototype.updateField = function (obj, mapper, id, key, value) {\n    var childNodes;\n\n    if (isNOU(id)) {\n      return;\n    } else if (this.dataType === 1) {\n      var newId = this.isNumberTypeId ? parseFloat(id) : id;\n      var resultData = new DataManager(this.treeData).executeLocal(new Query().where(mapper.id, 'equal', newId, false));\n      setValue(this.getMapperProp(mapper, key), value, resultData[0]);\n    } else {\n      this.updateChildField(obj, mapper, id, key, value);\n    }\n  };\n\n  TreeView.prototype.updateChildField = function (obj, mapper, id, key, value, remove) {\n    var removedData;\n\n    if (isNOU(obj)) {\n      return removedData;\n    }\n\n    for (var i = 0, objlen = obj.length; i < objlen; i++) {\n      var nodeId = getValue(mapper.id, obj[i]);\n\n      if (obj[i] && nodeId && nodeId.toString() === id) {\n        if (remove) {\n          removedData = obj.splice(i, 1);\n        } else {\n          setValue(this.getMapperProp(mapper, key), value, obj[i]);\n          removedData = [];\n        }\n\n        return removedData;\n      } else if (typeof mapper.child === 'string' && !isNOU(getValue(mapper.child, obj[i]))) {\n        var childData = getValue(mapper.child, obj[i]);\n        removedData = this.updateChildField(childData, this.getChildMapper(mapper), id, key, value, remove);\n\n        if (removedData !== undefined) {\n          break;\n        }\n      } else if (this.fields.dataSource instanceof DataManager && !isNOU(getValue('child', obj[i]))) {\n        var childItems = getValue('child', obj[i]);\n        removedData = this.updateChildField(childItems, this.getChildMapper(mapper), id, key, value, remove);\n\n        if (removedData !== undefined) {\n          break;\n        }\n      }\n    }\n\n    return removedData;\n  };\n\n  TreeView.prototype.triggerEvent = function () {\n    this.renderReactTemplates();\n    var eventArgs = {\n      data: this.treeData\n    };\n    this.trigger('dataSourceChanged', eventArgs);\n  };\n\n  TreeView.prototype.wireInputEvents = function (inpEle) {\n    EventHandler.add(inpEle, 'blur', this.inputFocusOut, this);\n  };\n\n  TreeView.prototype.wireEditingEvents = function (toBind) {\n    var _this = this;\n\n    if (toBind && !this.disabled) {\n      var proxy_2 = this;\n      this.touchEditObj = new Touch(this.element, {\n        tap: function (e) {\n          if (_this.isDoubleTapped(e) && e.tapCount === 2) {\n            e.originalEvent.preventDefault();\n            proxy_2.editingHandler(e.originalEvent);\n          }\n        }\n      });\n    } else {\n      if (this.touchEditObj) {\n        this.touchEditObj.destroy();\n      }\n    }\n  };\n\n  TreeView.prototype.wireClickEvent = function (toBind) {\n    if (toBind) {\n      var proxy_3 = this;\n      this.touchClickObj = new Touch(this.element, {\n        tap: function (e) {\n          proxy_3.clickHandler(e);\n        }\n      });\n    } else {\n      if (this.touchClickObj) {\n        this.touchClickObj.destroy();\n      }\n    }\n  };\n\n  TreeView.prototype.wireExpandOnEvent = function (toBind) {\n    var _this = this;\n\n    if (toBind) {\n      var proxy_4 = this;\n      this.touchExpandObj = new Touch(this.element, {\n        tap: function (e) {\n          if ((_this.expandOnType === 'Click' || _this.expandOnType === 'DblClick' && _this.isDoubleTapped(e) && e.tapCount === 2) && e.originalEvent.which !== 3) {\n            proxy_4.expandHandler(e);\n          }\n        }\n      });\n    } else {\n      if (this.touchExpandObj) {\n        this.touchExpandObj.destroy();\n      }\n    }\n  };\n\n  TreeView.prototype.mouseDownHandler = function (e) {\n    this.mouseDownStatus = true;\n\n    if (e.shiftKey || e.ctrlKey) {\n      e.preventDefault();\n    }\n\n    if (e.ctrlKey && this.allowMultiSelection) {\n      EventHandler.add(this.element, 'contextmenu', this.preventContextMenu, this);\n    }\n  };\n\n  ;\n\n  TreeView.prototype.preventContextMenu = function (e) {\n    e.preventDefault();\n  };\n\n  TreeView.prototype.wireEvents = function () {\n    EventHandler.add(this.element, 'mousedown', this.mouseDownHandler, this);\n    this.wireClickEvent(true);\n\n    if (this.expandOnType !== 'None') {\n      this.wireExpandOnEvent(true);\n    }\n\n    EventHandler.add(this.element, 'focus', this.focusIn, this);\n    EventHandler.add(this.element, 'blur', this.focusOut, this);\n    EventHandler.add(this.element, 'mouseover', this.onMouseOver, this);\n    EventHandler.add(this.element, 'mouseout', this.onMouseLeave, this);\n    this.keyboardModule = new KeyboardEvents(this.element, {\n      keyAction: this.keyActionHandler.bind(this),\n      keyConfigs: this.keyConfigs,\n      eventName: 'keydown'\n    });\n  };\n\n  TreeView.prototype.unWireEvents = function () {\n    EventHandler.remove(this.element, 'mousedown', this.mouseDownHandler);\n    this.wireClickEvent(false);\n    this.wireExpandOnEvent(false);\n    EventHandler.remove(this.element, 'focus', this.focusIn);\n    EventHandler.remove(this.element, 'blur', this.focusOut);\n    EventHandler.remove(this.element, 'mouseover', this.onMouseOver);\n    EventHandler.remove(this.element, 'mouseout', this.onMouseLeave);\n\n    if (!this.disabled) {\n      this.keyboardModule.destroy();\n    }\n  };\n\n  TreeView.prototype.parents = function (element, selector) {\n    var matched = [];\n    var el = element.parentNode;\n\n    while (!isNOU(el)) {\n      if (matches(el, selector)) {\n        matched.push(el);\n      }\n\n      el = el.parentNode;\n    }\n\n    return matched;\n  };\n\n  TreeView.prototype.isDoubleTapped = function (e) {\n    var target = e.originalEvent.target;\n    var secondTap;\n\n    if (target && e.tapCount) {\n      if (e.tapCount === 1) {\n        this.firstTap = closest(target, '.' + LISTITEM);\n      } else if (e.tapCount === 2) {\n        secondTap = closest(target, '.' + LISTITEM);\n      }\n    }\n\n    return this.firstTap === secondTap;\n  };\n\n  TreeView.prototype.isDescendant = function (parent, child) {\n    var node = child.parentNode;\n\n    while (!isNOU(node)) {\n      if (node === parent) {\n        return true;\n      }\n\n      node = node.parentNode;\n    }\n\n    return false;\n  };\n\n  TreeView.prototype.showSpinner = function (element) {\n    addClass([element], LOAD);\n    createSpinner({\n      target: element,\n      width: Browser.isDevice ? 16 : 14\n    }, this.createElement);\n    showSpinner(element);\n  };\n\n  TreeView.prototype.hideSpinner = function (element) {\n    hideSpinner(element);\n    element.innerHTML = '';\n    removeClass([element], LOAD);\n  };\n\n  TreeView.prototype.setCheckedNodes = function (nodes) {\n    nodes = JSON.parse(JSON.stringify(nodes));\n    this.uncheckAll(this.checkedNodes);\n    this.setIndeterminate(nodes);\n\n    if (nodes.length > 0) {\n      this.checkAll(nodes);\n    }\n  };\n  /**\n   * Checks whether the checkedNodes entered are valid and sets the valid checkedNodes while changing via setmodel\n   */\n\n\n  TreeView.prototype.setValidCheckedNode = function (node) {\n    if (this.dataType === 1) {\n      var mapper = this.fields;\n      var resultData = new DataManager(this.treeData).executeLocal(new Query().where(mapper.id, 'equal', node, true));\n\n      if (resultData[0]) {\n        this.setChildCheckState(resultData, node, resultData[0]);\n\n        if (this.autoCheck) {\n          var parent_4 = resultData[0][this.fields.parentID] ? resultData[0][this.fields.parentID].toString() : null;\n          var childNodes = this.getChildNodes(this.treeData, parent_4);\n          var count = 0;\n\n          for (var len = 0; len < childNodes.length; len++) {\n            var childId = childNodes[len][this.fields.id].toString();\n\n            if (this.checkedNodes.indexOf(childId) !== -1) {\n              count++;\n            }\n          }\n\n          if (count === childNodes.length && this.checkedNodes.indexOf(parent_4) === -1 && parent_4) {\n            this.checkedNodes.push(parent_4);\n          }\n        }\n      }\n    } else if (this.dataType === 2) {\n      for (var a = 0; a < this.treeData.length; a++) {\n        var index = this.treeData[a][this.fields.id] ? this.treeData[a][this.fields.id].toString() : '';\n\n        if (index === node && this.checkedNodes.indexOf(node) === -1) {\n          this.checkedNodes.push(node);\n          break;\n        }\n\n        var childItems = getValue(this.fields.child.toString(), this.treeData[a]);\n\n        if (childItems) {\n          this.setChildCheckState(childItems, node, this.treeData[a]);\n        }\n      }\n    }\n  };\n  /**\n   * Checks whether the checkedNodes entered are valid and sets the valid checkedNodes while changing via setmodel(for hierarchical DS)\n   */\n\n\n  TreeView.prototype.setChildCheckState = function (childItems, node, treeData) {\n    var checkedParent;\n    var count = 0;\n\n    if (this.dataType === 1) {\n      if (treeData) {\n        checkedParent = treeData[this.fields.id] ? treeData[this.fields.id].toString() : null;\n      }\n\n      for (var index = 0; index < childItems.length; index++) {\n        var checkNode = childItems[index][this.fields.id] ? childItems[index][this.fields.id].toString() : null;\n\n        if (treeData && checkedParent && this.autoCheck) {\n          if (this.checkedNodes.indexOf(checkedParent) !== -1 && this.checkedNodes.indexOf(checkNode) === -1) {\n            this.checkedNodes.push(checkNode);\n          }\n        }\n\n        if (checkNode === node && this.checkedNodes.indexOf(node) === -1) {\n          this.checkedNodes.push(node);\n        }\n\n        var subChildItems = this.getChildNodes(this.treeData, checkNode);\n\n        if (subChildItems) {\n          this.setChildCheckState(subChildItems, node, treeData);\n        }\n      }\n    } else {\n      if (treeData) {\n        checkedParent = treeData[this.fields.id] ? treeData[this.fields.id].toString() : '';\n      }\n\n      for (var index = 0; index < childItems.length; index++) {\n        var checkedChild = childItems[index][this.fields.id] ? childItems[index][this.fields.id].toString() : '';\n\n        if (treeData && checkedParent && this.autoCheck) {\n          if (this.checkedNodes.indexOf(checkedParent) !== -1 && this.checkedNodes.indexOf(checkedChild) === -1) {\n            this.checkedNodes.push(checkedChild);\n          }\n        }\n\n        if (checkedChild === node && this.checkedNodes.indexOf(node) === -1) {\n          this.checkedNodes.push(node);\n        }\n\n        var subChildItems = getValue(this.fields.child.toString(), childItems[index]);\n\n        if (subChildItems) {\n          this.setChildCheckState(subChildItems, node, childItems[index]);\n        }\n\n        if (this.checkedNodes.indexOf(checkedChild) !== -1 && this.autoCheck) {\n          count++;\n        }\n\n        if (count === childItems.length && this.checkedNodes.indexOf(checkedParent) === -1 && this.autoCheck) {\n          this.checkedNodes.push(checkedParent);\n        }\n      }\n    }\n  };\n\n  TreeView.prototype.setIndeterminate = function (nodes) {\n    for (var i = 0; i < nodes.length; i++) {\n      this.setValidCheckedNode(nodes[i]);\n    }\n  };\n\n  TreeView.prototype.updatePosition = function (id, newData, isRefreshChild, childValue) {\n    if (this.dataType === 1) {\n      var pos = this.getDataPos(this.treeData, this.fields, id);\n      this.treeData.splice(pos, 1, newData);\n\n      if (isRefreshChild) {\n        this.removeChildNodes(id);\n\n        for (var j = 0; j < childValue.length; j++) {\n          this.treeData.splice(pos, 0, childValue[j]);\n          pos++;\n        }\n      }\n\n      this.groupedData = this.getGroupedData(this.treeData, this.fields.parentID);\n    } else {\n      this.updateChildPosition(this.treeData, this.fields, id, [newData], undefined);\n    }\n  };\n\n  TreeView.prototype.updateChildPosition = function (treeData, mapper, currID, newData, index) {\n    var found;\n\n    for (var i = 0, objlen = treeData.length; i < objlen; i++) {\n      var nodeId = getValue(mapper.id, treeData[i]);\n\n      if (treeData[i] && nodeId && nodeId.toString() === currID) {\n        treeData[i] = newData[0];\n        return true;\n      } else if (typeof mapper.child === 'string' && !isNOU(getValue(mapper.child, treeData[i]))) {\n        var childObj = getValue(mapper.child, treeData[i]);\n        found = this.updateChildPosition(childObj, this.getChildMapper(mapper), currID, newData, index);\n\n        if (found !== undefined) {\n          break;\n        }\n      } else if (this.fields.dataSource instanceof DataManager && !isNOU(getValue('child', treeData[i]))) {\n        var childData = getValue('child', treeData[i]);\n        found = this.updateChildPosition(childData, this.getChildMapper(mapper), currID, newData, index);\n\n        if (found !== undefined) {\n          break;\n        }\n      }\n    }\n\n    return found;\n  };\n\n  TreeView.prototype.dynamicState = function () {\n    this.setDragAndDrop(this.allowDragAndDrop);\n    this.wireEditingEvents(this.allowEditing);\n\n    if (!this.disabled) {\n      this.wireEvents();\n      this.setRipple();\n    } else {\n      this.unWireEvents();\n      this.rippleFn();\n      this.rippleIconFn();\n    }\n  };\n\n  TreeView.prototype.crudOperation = function (operation, nodes, target, newText, newNode, index, prevent) {\n    var _this = this;\n\n    var data = this.fields.dataSource;\n    var matchedArr = [];\n    var query = this.getQuery(this.fields);\n    var key = this.fields.id;\n    var crud;\n    var changes = {\n      addedRecords: [],\n      deletedRecords: [],\n      changedRecords: []\n    };\n    var nodesID = [];\n\n    if (nodes) {\n      nodesID = this.nodeType(nodes);\n    } else if (target) {\n      if (typeof target == \"string\") {\n        nodesID[0] = target.toString();\n      } else if (typeof target === \"object\") {\n        nodesID[0] = target.getAttribute(\"data-uid\").toString();\n      }\n    }\n\n    for (var i = 0, len = nodesID.length; i < len; i++) {\n      var liEle = this.getElement(nodesID[i]);\n\n      if (isNullOrUndefined(liEle)) {\n        continue;\n      }\n\n      var removedData = this.getNodeObject(nodesID[i]);\n      matchedArr.push(removedData);\n    }\n\n    switch (operation) {\n      case 'delete':\n        if (nodes.length == 1) {\n          crud = data.remove(key, matchedArr[0], query.fromTable, query);\n        } else {\n          changes.deletedRecords = matchedArr;\n          crud = data.saveChanges(changes, key, query.fromTable, query);\n        }\n\n        crud.then(function (e) {\n          return _this.deleteSuccess(nodesID);\n        }).catch(function (e) {\n          return _this.dmFailure(e);\n        });\n        break;\n\n      case 'update':\n        matchedArr[0][this.fields.text] = newText;\n        crud = data.update(key, matchedArr[0], query.fromTable, query);\n        crud.then(function (e) {\n          return _this.editSucess(target, newText, prevent);\n        }).catch(function (e) {\n          return _this.dmFailure(e, target, prevent);\n        });\n        break;\n\n      case 'insert':\n        if (newNode.length == 1) {\n          crud = data.insert(newNode[0], query.fromTable, query);\n        } else {\n          var arr = [];\n\n          for (var i = 0, len = newNode.length; i < len; i++) {\n            arr.push(newNode[i]);\n          }\n\n          changes.addedRecords = arr;\n          crud = data.saveChanges(changes, key, query.fromTable, query);\n        }\n\n        crud.then(function (e) {\n          var dropLi = _this.getElement(target);\n\n          _this.addSuccess(newNode, dropLi, index);\n\n          _this.preventExpand = false;\n        }).catch(function (e) {\n          return _this.dmFailure(e);\n        });\n        break;\n    }\n  };\n\n  TreeView.prototype.deleteSuccess = function (nodes) {\n    for (var i = 0, len = nodes.length; i < len; i++) {\n      var liEle = this.getElement(nodes[i]);\n\n      if (isNOU(liEle)) {\n        continue;\n      }\n\n      this.removeNode(liEle);\n    }\n\n    this.updateInstance();\n\n    if (this.dataType === 1) {\n      this.groupedData = this.getGroupedData(this.treeData, this.fields.parentID);\n    }\n\n    this.triggerEvent();\n  };\n\n  TreeView.prototype.editSucess = function (target, newText, prevent) {\n    var liEle = this.getElement(target);\n    var txtEle = select('.' + LISTTEXT, liEle);\n    this.appendNewText(liEle, txtEle, newText, prevent);\n  };\n\n  TreeView.prototype.addSuccess = function (nodes, dropLi, index) {\n    var dropUl;\n    var icon = dropLi ? dropLi.querySelector('.' + ICON) : null;\n    var proxy = this;\n\n    if (dropLi && icon && icon.classList.contains(EXPANDABLE) && dropLi.querySelector('.' + PARENTITEM) === null) {\n      proxy.renderChildNodes(dropLi, null, function () {\n        dropUl = dropLi.querySelector('.' + PARENTITEM);\n        proxy.addGivenNodes(nodes, dropLi, index, true, dropUl);\n        proxy.triggerEvent();\n      });\n    } else {\n      this.addGivenNodes(nodes, dropLi, index, true);\n      this.triggerEvent();\n    }\n  };\n\n  TreeView.prototype.dmFailure = function (e, target, prevent) {\n    if (target) {\n      this.updatePreviousText(target, prevent);\n    }\n\n    this.trigger('actionFailure', {\n      error: e\n    });\n  };\n\n  TreeView.prototype.updatePreviousText = function (target, prevent) {\n    var liEle = this.getElement(target);\n    var txtEle = select('.' + LISTTEXT, liEle);\n    this.updateText(liEle, txtEle, this.oldText, prevent);\n  };\n  /**\n   * Called internally if any of the property value changed.\n   * @param  {TreeView} newProp\n   * @param  {TreeView} oldProp\n   * @returns void\n   * @private\n   */\n\n\n  TreeView.prototype.onPropertyChanged = function (newProp, oldProp) {\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n\n      switch (prop) {\n        case 'allowDragAndDrop':\n          this.setDragAndDrop(this.allowDragAndDrop);\n          break;\n\n        case 'dragArea':\n          if (this.allowDragAndDrop) {\n            this.dragObj.dragArea = this.dragArea;\n          }\n\n          break;\n\n        case 'allowEditing':\n          this.wireEditingEvents(this.allowEditing);\n          break;\n\n        case 'allowMultiSelection':\n          if (this.selectedNodes.length > 1) {\n            var sNode = this.getElement(this.selectedNodes[0]);\n            this.isLoaded = false;\n            this.removeSelectAll();\n            this.selectNode(sNode, null);\n            this.isLoaded = true;\n          }\n\n          this.setMultiSelect(this.allowMultiSelection);\n          this.addMultiSelect(this.allowMultiSelection);\n          break;\n\n        case 'allowTextWrap':\n          this.setTextWrap();\n          this.updateWrap();\n          break;\n\n        case 'checkedNodes':\n          if (this.showCheckBox) {\n            this.checkedNodes = oldProp.checkedNodes;\n            this.setCheckedNodes(newProp.checkedNodes);\n          }\n\n          break;\n\n        case 'autoCheck':\n          if (this.showCheckBox) {\n            this.autoCheck = newProp.autoCheck;\n            this.ensureIndeterminate();\n          }\n\n          break;\n\n        case 'cssClass':\n          this.setCssClass(oldProp.cssClass, newProp.cssClass);\n          break;\n\n        case 'enableRtl':\n          this.setEnableRtl();\n          break;\n\n        case 'expandedNodes':\n          this.isAnimate = false;\n          this.setProperties({\n            expandedNodes: []\n          }, true);\n          this.collapseAll();\n          this.isInitalExpand = true;\n          this.setProperties({\n            expandedNodes: isNOU(newProp.expandedNodes) ? [] : newProp.expandedNodes\n          }, true);\n          this.doExpandAction();\n          this.isInitalExpand = false;\n          this.isAnimate = true;\n          break;\n\n        case 'expandOn':\n          this.wireExpandOnEvent(false);\n          this.setExpandOnType();\n\n          if (this.expandOnType !== 'None' && !this.disabled) {\n            this.wireExpandOnEvent(true);\n          }\n\n          break;\n\n        case 'disabled':\n          this.setDisabledMode();\n          this.dynamicState();\n          break;\n\n        case 'fields':\n          this.isAnimate = false;\n          this.isFieldChange = true;\n          this.initialRender = true;\n          this.reRenderNodes();\n          this.initialRender = false;\n          this.isAnimate = true;\n          this.isFieldChange = false;\n          break;\n\n        case 'fullRowSelect':\n          this.setFullRow(this.fullRowSelect);\n          this.addFullRow(this.fullRowSelect);\n\n          if (this.allowTextWrap) {\n            this.setTextWrap();\n            this.updateWrap();\n          }\n\n          break;\n\n        case 'loadOnDemand':\n          if (this.loadOnDemand === false && !this.onLoaded) {\n            var nodes = this.element.querySelectorAll('li');\n            var i = 0;\n\n            while (i < nodes.length) {\n              if (nodes[i].getAttribute('aria-expanded') !== 'true') {\n                this.renderChildNodes(nodes[i], true, null, true);\n              }\n\n              i++;\n            }\n\n            this.onLoaded = true;\n          }\n\n          break;\n\n        case 'nodeTemplate':\n          this.hasTemplate = false;\n          this.nodeTemplateFn = this.templateComplier(this.nodeTemplate);\n          this.reRenderNodes();\n          break;\n\n        case 'selectedNodes':\n          this.removeSelectAll();\n          this.setProperties({\n            selectedNodes: newProp.selectedNodes\n          }, true);\n          this.doSelectionAction();\n          break;\n\n        case 'showCheckBox':\n          this.reRenderNodes();\n          break;\n\n        case 'sortOrder':\n          this.reRenderNodes();\n          break;\n\n        case 'fullRowNavigable':\n          this.setProperties({\n            fullRowNavigable: newProp.fullRowNavigable\n          }, true);\n          this.listBaseOption.itemNavigable = newProp.fullRowNavigable;\n          this.reRenderNodes();\n          break;\n      }\n    }\n  };\n  /**\n   * Removes the component from the DOM and detaches all its related event handlers. It also removes the attributes and classes.\n   */\n\n\n  TreeView.prototype.destroy = function () {\n    this.clearTemplate();\n    this.element.removeAttribute('aria-activedescendant');\n    this.element.removeAttribute('tabindex');\n    this.unWireEvents();\n    this.wireEditingEvents(false);\n\n    if (!this.disabled) {\n      this.rippleFn();\n      this.rippleIconFn();\n    }\n\n    this.setCssClass(this.cssClass, null);\n    this.setDragAndDrop(false);\n    this.setFullRow(false);\n\n    if (this.ulElement && this.ulElement.parentElement) {\n      this.ulElement.parentElement.removeChild(this.ulElement);\n    }\n\n    _super.prototype.destroy.call(this);\n  };\n  /**\n   * Adds the collection of TreeView nodes based on target and index position. If target node is not specified,\n   * then the nodes are added as children of the given parentID or in the root level of TreeView.\n   * @param  { { [key: string]: Object }[] } nodes - Specifies the array of JSON data that has to be added.\n   * @param  { string | Element } target - Specifies ID of TreeView node/TreeView node as target element.\n   * @param  { number } index - Specifies the index to place the newly added nodes in the target element.\n   * @param { boolean } preventTargetExpand - If set to true, the target parent node will be prevented from auto expanding.\n   */\n\n\n  TreeView.prototype.addNodes = function (nodes, target, index, preventTargetExpand) {\n    if (isNOU(nodes)) {\n      return;\n    }\n\n    nodes = JSON.parse(JSON.stringify(nodes));\n    var dropLi = this.getElement(target);\n    this.preventExpand = preventTargetExpand;\n\n    if (this.fields.dataSource instanceof DataManager) {\n      if (!this.isOffline) {\n        this.crudOperation('insert', null, target, null, nodes, index, this.preventExpand);\n      } else {\n        this.addSuccess(nodes, dropLi, index);\n      }\n    } else if (this.dataType === 2) {\n      this.addGivenNodes(nodes, dropLi, index);\n    } else {\n      if (dropLi) {\n        this.addGivenNodes(nodes, dropLi, index);\n      } else {\n        nodes = this.getSortedData(nodes);\n\n        for (var i = 0; i < nodes.length; i++) {\n          var pid = getValue(this.fields.parentID, nodes[i]);\n          dropLi = pid ? this.getElement(pid.toString()) : pid;\n          this.addGivenNodes([nodes[i]], dropLi, index);\n        }\n      }\n\n      this.groupedData = this.getGroupedData(this.treeData, this.fields.parentID);\n    }\n\n    this.updateCheckedStateFromDS();\n\n    if (this.showCheckBox && dropLi) {\n      this.ensureParentCheckState(dropLi);\n    }\n\n    if (this.fields.dataSource instanceof DataManager === false) {\n      this.preventExpand = false;\n      this.triggerEvent();\n    }\n  };\n  /**\n   * Instead of clicking on the TreeView node for editing, we can enable it by using\n   * `beginEdit` property. On passing the node ID or element through this property, the edit textBox\n   * will be created for the particular node thus allowing us to edit it.\n   * @param  {string | Element} node - Specifies ID of TreeView node/TreeView node.\n   */\n\n\n  TreeView.prototype.beginEdit = function (node) {\n    var ele = this.getElement(node);\n\n    if (isNOU(ele) || this.disabled) {\n      return;\n    }\n\n    this.createTextbox(ele, null);\n  };\n  /**\n   * Checks all the unchecked nodes. You can also check specific nodes by passing array of unchecked nodes\n   * as argument to this method.\n   * @param  {string[] | Element[]} nodes - Specifies the array of TreeView nodes ID/array of TreeView node.\n   */\n\n\n  TreeView.prototype.checkAll = function (nodes) {\n    if (this.showCheckBox) {\n      this.doCheckBoxAction(nodes, true);\n    }\n  };\n  /**\n   * Collapses all the expanded TreeView nodes. You can collapse specific nodes by passing array of nodes as argument to this method.\n   * You can also collapse all the nodes excluding the hidden nodes by setting **excludeHiddenNodes** to true. If you want to collapse\n   * a specific level of nodes, set **level** as argument to collapseAll method.\n   * @param  {string[] | Element[]} nodes - Specifies the array of TreeView nodes ID/ array of TreeView node.\n   * @param  {number} level - TreeView nodes will collapse up to the given level.\n   * @param  {boolean} excludeHiddenNodes - Whether or not to exclude hidden nodes of TreeView when collapsing all nodes.\n   */\n\n\n  TreeView.prototype.collapseAll = function (nodes, level, excludeHiddenNodes) {\n    if (!isNOU(nodes)) {\n      this.doGivenAction(nodes, COLLAPSIBLE, false);\n    } else {\n      if (level > 0) {\n        this.collapseByLevel(select('.' + PARENTITEM, this.element), level, excludeHiddenNodes);\n      } else {\n        this.collapseAllNodes(excludeHiddenNodes);\n      }\n    }\n  };\n  /**\n   * Disables the collection of nodes by passing the ID of nodes or node elements in the array.\n   * @param  {string[] | Element[]} nodes - Specifies the array of TreeView nodes ID/array of TreeView nodes.\n   */\n\n\n  TreeView.prototype.disableNodes = function (nodes) {\n    if (!isNOU(nodes)) {\n      this.doDisableAction(nodes);\n    }\n  };\n  /**\n   * Enables the collection of disabled nodes by passing the ID of nodes or node elements in the array.\n   * @param  {string[] | Element[]} nodes - Specifies the array of TreeView nodes ID/array of TreeView nodes.\n   */\n\n\n  TreeView.prototype.enableNodes = function (nodes) {\n    if (!isNOU(nodes)) {\n      this.doEnableAction(nodes);\n    }\n  };\n  /**\n   * Ensures visibility of the TreeView node by using node ID or node element.\n   * When many TreeView nodes are present and we need to find a particular node, `ensureVisible` property\n   * helps bring the node to visibility by expanding the TreeView and scrolling to the specific node.\n   * @param  {string | Element} node - Specifies ID of TreeView node/TreeView nodes.\n   */\n\n\n  TreeView.prototype.ensureVisible = function (node) {\n    var liEle = this.getElement(node);\n\n    if (isNOU(liEle)) {\n      return;\n    }\n\n    var parents = this.parents(liEle, '.' + LISTITEM);\n    this.expandAll(parents);\n    setTimeout(function () {\n      liEle.scrollIntoView(true);\n    }, 450);\n  };\n  /**\n   * Expands all the collapsed TreeView nodes. You can expand the specific nodes by passing the array of collapsed nodes\n   * as argument to this method. You can also expand all the collapsed nodes by excluding the hidden nodes by setting\n   * **excludeHiddenNodes** to true to this method. To expand a specific level of nodes, set **level** as argument to expandAll method.\n   * @param  {string[] | Element[]} nodes - Specifies the array of TreeView nodes ID/array of TreeView nodes.\n   * @param  {number} level - TreeView nodes will expand up to the given level.\n   * @param  {boolean} excludeHiddenNodes - Whether or not to exclude hidden nodes when expanding all nodes.\n   */\n\n\n  TreeView.prototype.expandAll = function (nodes, level, excludeHiddenNodes) {\n    if (!isNOU(nodes)) {\n      this.doGivenAction(nodes, EXPANDABLE, true);\n    } else {\n      if (level > 0) {\n        this.expandByLevel(select('.' + PARENTITEM, this.element), level, excludeHiddenNodes);\n      } else {\n        this.expandAllNodes(excludeHiddenNodes);\n      }\n    }\n  };\n  /**\n   * Gets all the checked nodes including child, whether it is loaded or not.\n   */\n\n\n  TreeView.prototype.getAllCheckedNodes = function () {\n    var checkNodes = this.checkedNodes;\n    return checkNodes;\n  };\n  /**\n  * Gets all the disabled nodes including child, whether it is loaded or not.\n  */\n\n\n  TreeView.prototype.getDisabledNodes = function () {\n    var disabledNodes = this.disableNode;\n    return disabledNodes;\n  };\n  /**\n   * Get the node's data such as id, text, parentID, selected, isChecked, and expanded by passing the node element or it's ID.\n   * @param  {string | Element} node - Specifies ID of TreeView node/TreeView node.\n   */\n\n\n  TreeView.prototype.getNode = function (node) {\n    var ele = this.getElement(node);\n    return this.getNodeData(ele, true);\n  };\n  /**\n   * To get the updated data source of TreeView after performing some operation like drag and drop, node editing,\n   * node selecting/unSelecting, node expanding/collapsing, node checking/unChecking, adding and removing node.\n   * * If you pass the ID of TreeView node as arguments for this method then it will return the updated data source\n   * of the corresponding node otherwise it will return the entire updated data source of TreeView.\n   * * The updated data source also contains custom attributes if you specified in data source.\n   * @param  {string | Element} node - Specifies ID of TreeView node/TreeView node.\n   * @isGenericType true\n   */\n\n\n  TreeView.prototype.getTreeData = function (node) {\n    var id = this.getId(node);\n    this.updatePersistProp();\n\n    if (isNOU(id)) {\n      return this.treeData;\n    } else {\n      var data = this.getNodeObject(id);\n      return isNOU(data) ? [] : [data];\n    }\n  };\n  /**\n   * Moves the collection of nodes within the same TreeView based on target or its index position.\n   * @param  {string[] | Element[]} sourceNodes - Specifies the array of TreeView nodes ID/array of TreeView node.\n   * @param  {string | Element} target - Specifies ID of TreeView node/TreeView node as target element.\n   * @param  {number} index - Specifies the index to place the moved nodes in the target element.\n   * @param { boolean } preventTargetExpand - If set to true, the target parent node will be prevented from auto expanding.\n   */\n\n\n  TreeView.prototype.moveNodes = function (sourceNodes, target, index, preventTargetExpand) {\n    var dropLi = this.getElement(target);\n\n    if (isNOU(dropLi)) {\n      return;\n    }\n\n    for (var i = 0; i < sourceNodes.length; i++) {\n      var dragLi = this.getElement(sourceNodes[i]);\n\n      if (isNOU(dragLi) || dropLi.isSameNode(dragLi) || this.isDescendant(dragLi, dropLi)) {\n        continue;\n      }\n\n      this.preventExpand = preventTargetExpand;\n      this.dropAsChildNode(dragLi, dropLi, this, index);\n    }\n\n    if (this.fields.dataSource instanceof DataManager === false) {\n      this.preventExpand = false;\n    }\n\n    this.triggerEvent();\n  };\n  /**\n   * Refreshes a particular node of the TreeView.\n   * @param  {string | Element} target - Specifies the ID of TreeView node or TreeView node as target element.\n   * @param  {{ [key: string]: Object }[]} newData - Specifies the new data of TreeView node.\n   */\n\n\n  TreeView.prototype.refreshNode = function (target, newData) {\n    if (isNOU(target) || isNOU(newData)) {\n      return;\n    }\n\n    var id;\n    var isRefreshChild = false;\n\n    if (this.dataType == 1 && newData.length > 1) {\n      isRefreshChild = true;\n    } else if (this.dataType == 2 && newData.length === 1) {\n      var updatedChildValue = getValue(this.fields.child.toString(), newData[0]);\n\n      if (!isNOU(updatedChildValue)) {\n        isRefreshChild = true;\n      }\n    }\n\n    var liEle = this.getElement(target);\n    id = liEle ? liEle.getAttribute('data-uid') : target ? target.toString() : null;\n    this.refreshData = this.getNodeObject(id);\n    newData = JSON.parse(JSON.stringify(newData));\n    /* eslint-disable */\n\n    var newNodeData;\n    var parentData;\n\n    if (this.dataType == 1 && isRefreshChild) {\n      for (var k = 0; k < newData.length; k++) {\n        if (isNOU(newData[k][this.fields.parentID])) {\n          parentData = newData[k];\n          newData.splice(k, 1);\n          break;\n        }\n      }\n\n      newNodeData = extend({}, this.refreshData, parentData);\n    } else {\n      newNodeData = extend({}, this.refreshData, newData[0]);\n    }\n\n    if (isNOU(liEle)) {\n      this.updatePosition(id, newNodeData, isRefreshChild, newData);\n      return;\n    }\n\n    this.isRefreshed = true;\n    var level = parseFloat(liEle.getAttribute('aria-level'));\n    var newliEle = ListBase.createListItemFromJson(this.createElement, [newNodeData], this.listBaseOption, level);\n    var ul = select('.' + PARENTITEM, liEle);\n    var childItems = getValue(this.fields.child.toString(), newNodeData);\n\n    if (isRefreshChild && ul || isRefreshChild && !isNOU(childItems)) {\n      var parentEle = liEle.parentElement;\n      var index = Array.prototype.indexOf.call(parentEle.childNodes, liEle);\n      remove(liEle);\n      parentEle.insertBefore(newliEle[0], parentEle.childNodes[index]);\n      this.updatePosition(id, newNodeData, isRefreshChild, newData);\n\n      if (isRefreshChild && ul) {\n        this.expandAll([id]);\n      }\n    } else {\n      var txtEle = select('.' + TEXTWRAP, liEle);\n      var newTextEle = select('.' + TEXTWRAP, newliEle[0]);\n      var icon = select('div.' + ICON, txtEle);\n      var newIcon = select('div.' + ICON, newTextEle);\n\n      if (icon && newIcon) {\n        if (newIcon.classList.contains(EXPANDABLE) && icon.classList.contains(COLLAPSIBLE)) {\n          removeClass([newIcon], EXPANDABLE);\n          addClass([newIcon], COLLAPSIBLE);\n        } else if (newIcon.classList.contains(COLLAPSIBLE) && icon.classList.contains(EXPANDABLE)) {\n          removeClass([newIcon], COLLAPSIBLE);\n          addClass([newIcon], EXPANDABLE);\n        } else if (icon.classList.contains('interaction')) {\n          addClass([newIcon], 'interaction');\n        }\n      }\n\n      remove(txtEle);\n      var fullEle = select('.' + FULLROW, liEle);\n      fullEle.parentNode.insertBefore(newTextEle, fullEle.nextSibling);\n      this.updatePosition(id, newNodeData, isRefreshChild, newData);\n    }\n\n    liEle = this.getElement(target);\n\n    if (newNodeData[this.fields.tooltip]) {\n      liEle.setAttribute(\"title\", newNodeData[this.fields.tooltip]);\n    }\n\n    if (newNodeData.hasOwnProperty(this.fields.htmlAttributes) && newNodeData[this.fields.htmlAttributes]) {\n      var attr = {};\n      merge(attr, newNodeData[this.fields.htmlAttributes]);\n\n      if (attr.class) {\n        addClass([liEle], attr.class.split(' '));\n        delete attr.class;\n      } else {\n        attributes(liEle, attr);\n      }\n    }\n\n    if (this.selectedNodes.indexOf(id) !== -1) {\n      liEle.setAttribute('aria-selected', 'true');\n      addClass([liEle], ACTIVE);\n    }\n\n    this.isRefreshed = false;\n    this.triggerEvent();\n  };\n  /**\n   * Removes the collection of TreeView nodes by passing the array of node details as argument to this method.\n   * @param  {string[] | Element[]} nodes - Specifies the array of TreeView nodes ID/array of TreeView node.\n   */\n\n\n  TreeView.prototype.removeNodes = function (nodes) {\n    if (!isNOU(nodes)) {\n      if (this.fields.dataSource instanceof DataManager && !this.isOffline) {\n        this.crudOperation('delete', nodes);\n      } else {\n        this.deleteSuccess(nodes);\n      }\n    }\n  };\n  /**\n   * Replaces the text of the TreeView node with the given text.\n   * @param  {string | Element} target - Specifies ID of TreeView node/TreeView node as target element.\n   * @param  {string} newText - Specifies the new text of TreeView node.\n   */\n\n\n  TreeView.prototype.updateNode = function (target, newText) {\n    var _this = this;\n\n    if (isNOU(target) || isNOU(newText) || !this.allowEditing) {\n      return;\n    }\n\n    var liEle = this.getElement(target);\n\n    if (isNOU(liEle)) {\n      return;\n    }\n\n    var txtEle = select('.' + LISTTEXT, liEle);\n    this.updateOldText(liEle);\n    var eventArgs = this.getEditEvent(liEle, null, null);\n    this.trigger('nodeEditing', eventArgs, function (observedArgs) {\n      if (!observedArgs.cancel) {\n        if (_this.fields.dataSource instanceof DataManager && !_this.isOffline) {\n          _this.crudOperation('update', null, target, newText, null, null, false);\n        } else {\n          _this.appendNewText(liEle, txtEle, newText, false);\n        }\n      }\n    });\n  };\n  /**\n   * Unchecks all the checked nodes. You can also uncheck the specific nodes by passing array of checked nodes\n   * as argument to this method.\n   * @param  {string[] | Element[]} nodes - Specifies the array of TreeView nodes ID/array of TreeView node.\n   */\n\n\n  TreeView.prototype.uncheckAll = function (nodes) {\n    if (this.showCheckBox) {\n      this.doCheckBoxAction(nodes, false);\n    }\n  };\n\n  var TreeView_1;\n\n  __decorate([Property(false)], TreeView.prototype, \"allowDragAndDrop\", void 0);\n\n  __decorate([Property(false)], TreeView.prototype, \"allowEditing\", void 0);\n\n  __decorate([Property(false)], TreeView.prototype, \"allowMultiSelection\", void 0);\n\n  __decorate([Property(false)], TreeView.prototype, \"allowTextWrap\", void 0);\n\n  __decorate([Complex({}, NodeAnimationSettings)], TreeView.prototype, \"animation\", void 0);\n\n  __decorate([Property()], TreeView.prototype, \"checkedNodes\", void 0);\n\n  __decorate([Property('')], TreeView.prototype, \"cssClass\", void 0);\n\n  __decorate([Property(false)], TreeView.prototype, \"disabled\", void 0);\n\n  __decorate([Property(null)], TreeView.prototype, \"dragArea\", void 0);\n\n  __decorate([Property(false)], TreeView.prototype, \"enableHtmlSanitizer\", void 0);\n\n  __decorate([Property(false)], TreeView.prototype, \"enablePersistence\", void 0);\n\n  __decorate([Property()], TreeView.prototype, \"expandedNodes\", void 0);\n\n  __decorate([Property('Auto')], TreeView.prototype, \"expandOn\", void 0);\n\n  __decorate([Complex({}, FieldsSettings)], TreeView.prototype, \"fields\", void 0);\n\n  __decorate([Property(true)], TreeView.prototype, \"fullRowSelect\", void 0);\n\n  __decorate([Property(true)], TreeView.prototype, \"loadOnDemand\", void 0);\n\n  __decorate([Property()], TreeView.prototype, \"locale\", void 0);\n\n  __decorate([Property()], TreeView.prototype, \"nodeTemplate\", void 0);\n\n  __decorate([Property()], TreeView.prototype, \"selectedNodes\", void 0);\n\n  __decorate([Property('None')], TreeView.prototype, \"sortOrder\", void 0);\n\n  __decorate([Property(false)], TreeView.prototype, \"showCheckBox\", void 0);\n\n  __decorate([Property(true)], TreeView.prototype, \"autoCheck\", void 0);\n\n  __decorate([Property(false)], TreeView.prototype, \"fullRowNavigable\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"actionFailure\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"created\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"dataBound\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"dataSourceChanged\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"drawNode\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"destroyed\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"keyPress\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"nodeChecked\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"nodeChecking\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"nodeClicked\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"nodeCollapsed\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"nodeCollapsing\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"nodeDragging\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"nodeDragStart\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"nodeDragStop\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"nodeDropped\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"nodeEdited\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"nodeEditing\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"nodeExpanded\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"nodeExpanding\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"nodeSelected\", void 0);\n\n  __decorate([Event()], TreeView.prototype, \"nodeSelecting\", void 0);\n\n  TreeView = TreeView_1 = __decorate([NotifyPropertyChanges], TreeView);\n  return TreeView;\n}(Component);\n\nexport { TreeView };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Component","isUndefined","Browser","compile","isNullOrUndefined","Property","NotifyPropertyChanges","ChildProperty","Complex","Event","EventHandler","KeyboardEvents","rippleEffect","Animation","remove","Draggable","Droppable","getElement","addClass","removeClass","closest","matches","detach","select","selectAll","isVisible","append","DataManager","Query","isNOU","Touch","getValue","setValue","extend","merge","attributes","ListBase","createCheckBox","rippleMouseHandler","Input","createSpinner","showSpinner","hideSpinner","ROOT","CONTROL","COLLAPSIBLE","EXPANDABLE","LISTITEM","LISTTEXT","LISTWRAP","IELISTWRAP","PARENTITEM","HOVER","ACTIVE","LOAD","PROCESS","ICON","TEXTWRAP","INPUT","INPUTGROUP","TREEINPUT","EDITING","RTL","INTERACTION","DRAGITEM","DROPPABLE","DRAGGING","SIBLING","DROPIN","DROPNEXT","DROPOUT","NODROP","FULLROWWRAP","FULLROW","SELECTED","EXPANDED","NODECOLLAPSED","DISABLE","DROPCOUNT","CHECK","INDETERMINATE","CHECKBOXWRAP","CHECKBOXFRAME","CHECKBOXRIPPLE","RIPPLE","RIPPLEELMENT","FOCUS","IMAGE","BIGGER","SMALL","CHILD","ITEM_ANIMATION_ACTIVE","DISABLED","treeAriaAttr","treeRole","itemRole","listRole","itemText","wrapperRole","FieldsSettings","_super","apply","ActionSettings","NodeAnimationSettings","effect","duration","easing","TreeView","options","element","_this","call","isRefreshed","preventExpand","checkedElement","disableNode","validArr","validNodes","expandChildren","isFieldChange","changeDataSource","hasTemplate","isFirstRender","mouseDownStatus","TreeView_1","getModuleName","preRender","checkActionNodes","parentNodeCheck","dragStartAction","isAnimate","keyConfigs","escape","end","enter","f2","home","moveDown","moveLeft","moveRight","moveUp","ctrlDown","ctrlUp","ctrlEnter","ctrlHome","ctrlEnd","ctrlA","shiftDown","shiftUp","shiftEnter","shiftHome","shiftEnd","csDown","csUp","csEnter","csHome","csEnd","space","listBaseOption","expandCollapse","showIcon","expandIconClass","ariaAttributes","expandIconPosition","itemCreated","e","beforeNodeCreate","enableHtmlSanitizer","itemNavigable","fullRowNavigable","updateListProp","fields","aniObj","treeList","isLoaded","isInitalExpand","index","setTouchClass","selectedNodes","setProperties","checkedNodes","expandedNodes","getPersistData","keyEntity","addOnPersist","render","initialRender","initialize","setDataBinding","setDisabledMode","setExpandOnType","disabled","setRipple","wireEditingEvents","allowEditing","setDragAndDrop","allowDragAndDrop","wireEvents","renderComplete","setAttribute","id","setCssClass","cssClass","setEnableRtl","setFullRow","fullRowSelect","setTextWrap","nodeTemplateFn","templateComplier","nodeTemplate","classList","add","enableRtl","tempStr","rippleModel","selector","ignore","rippleFn","iconModel","isCenterRipple","rippleIconFn","isEnabled","setMultiSelect","firstUl","removeAttribute","template","document","querySelectorAll","querySelector","innerHTML","trim","undefined","push","dataSource","isOffline","offline","ready","then","pop","treeData","result","isNumberTypeId","getType","setRootData","renderItems","finalize","catch","trigger","error","executeQuery","getQuery","rootData","JSON","parse","stringify","mapper","value","columns","query","prop","getActualProperties","_i","_a","keys","col","indexOf","from","tableName","clone","addSorting","sortOrder","text","parentID","where","parseFloat","dataType","getDataType","groupedData","getGroupedData","rootItems","getChildNodes","isSorted","level","sortedData","getSortedData","ulElement","createList","createElement","appendChild","rootNodes","loadOnDemand","renderChildNodes","parentEle","finalizeNode","parentCheckData","updateCheckedStateFromDS","autoCheck","showCheckBox","updateParentCheckState","resultData","executeLocal","isChecked","resultId","toString","resultPId","hasChildren","id_1","childData","child","childId","mapper_1","checkState","getCheckedNodeDetails","checkIndeterminateState","checkedId","checkedData","fieldId","childItems","updateChildCheckState","enablePersistence","checkNodes","count","len","childNodes","preElement","check","changeState","indeterminate","childCheckedElement","node","nodeId","getAttribute","j","nodeCheck","data","ariaChecked","checkedParent","checkedChild","subChildItems","checkboxEle","touchClass","icon","item","insertBefore","checkValue","curData","addCheck","frame","frameMouseHandler","createFullRow","allowMultiSelection","contains","addActionClass","selected","expanded","textEle","dataId","renderNodeTemplate","eventArgs","nodeData","rippleSpan","parentElement","action","actionValue","ds","groupBy","cusQuery","group","getDataSource","grpItem","itemObj","items","list","iNodes","k","sNodes","selectNode","cNodes","disableExpandAttr","eNodes","updateList","updateCheckedProp","nodes","concat","ensureIndeterminate","liElement","ensureParentCheckState","ensureChildCheckState","indeterminateNodes","checkBoxEle","getElementsByClassName","parentUL","currentParent","childElement","checkBoxes","parentCheck","childCheck","expandState","checkedState","currentLoadData","ele","splice","isNodeChecked","doCheckBoxAction","doCheck","li","liEle","setValidCheckedNode","dynamicCheckState","updateField","checkBox","validateCheckNode","updateFieldChecked","checkbox","currLi","nodeDetails","getNodeData","parent_1","updateIndeterminate","subChild","updateChildIndeterminate","indeterminateData","getTreeData","parent","subId","childElementCheck","innerChild","wrapper","state","isPrevent","isAdd","getCheckEvent","observedArgs","cancel","nodeCheckAction","ariaState","frameSpan","removeCheck","ensureStateChange","checked","isInteracted","firstNode","updateIdAttr","allowTextWrap","updateWrap","renderReactTemplates","hasPid","doExpandAction","isIE","ulEle","liList","calculateWrap","nextElementSibling","style","height","offsetHeight","eUids","expandGivenNodes","eNode","expandAction","afterFinalized","arr","proxy","expandCallback","eUid","callback","doSelectionAction","sUids","sNode","selectGivenNodes","clickHandler","event","originalEvent","preventContextMenu","which","rippleElement","rippleIcons","removeHover","setFocusElement","checkWrapper","checkElement","triggerClickEvent","collapseNode","toggleSelect","nodeCheckedEvent","isCheck","expandNode","loaded","start_1","end_1","proxy_1","ul_1","liEle_1","setHeight","activeElement_1","animate","name","animation","expand","timingFunction","begin","args","overflow","HTMLElement","progress","display","animateHeight","expandedNode","ul","addExpand","expandArgs","getExpandEvent","colArgs","nodeCollapseAction","start","activeElement","collapse","collapsedNode","removeExpand","toRemove","visibility","remaining","timeStamp","currentHeight","parentLi","expandChild","eicon","parents","mapper_2","getChildFields","loadChild","setSelectionForChildNodes","ensureCheckNode","disableTreeNodes","renderSubChild","getNodeObject","doDisableAction","getFields","nodeLevel","dataLevel","getChildMapper","obj","parentId","isRoot","getChildGroup","objlen","cIcons","curLi","multiSelect","ctrlKey","isActive","unselectNode","getSelectEvent","nodeSelectAction","removeSelectAll","shiftKey","startNode","startIndex","endIndex","temp","currNode","addSelect","nodeUnselectAction","removeSelect","focusedNode","getFocusedNode","selectedLI","selectedLI_1","expandOnType","expandOn","isDevice","expandHandler","expandCollapseAction","nodeExpandAction","nodeName","liEles","getId","icon_1","keyActionHandler","inpEle","blur","focus","oldText","preventDefault","checkNode","openNode","shiftKeySelect","navigateNode","navigateRootNode","createTextbox","navigateToFocus","isUp","focusNode","pos","getBoundingClientRect","getScrollParent","parentPos","bottom","scrollTop","top","isVisibleInViewport","scrollIntoView","txtWrap","left","window","innerHeight","documentElement","clientHeight","right","innerWidth","clientWidth","scrollHeight","isTowards","nextNode","getNextNode","getPrevNode","checkWrap","nodeCheckingAction","allCheckNode","parentIndex","getChildItems","childStateChange","childIsCheck","newCheck","validateCheck","length_1","hierChildId","childId_1","toBeOpened","focusNextNode","setFocus","isBackwards","rootNode","getRootNode","getEndNode","selectedItem","fNode","firstElementChild","lastChild","previousSibling","nextSibling","prevNode","endNode","preNode","focusIn","focusOut","onMouseOver","currentLi","setHover","onMouseLeave","hoveredNode","fromDS","getText","pNode","parentNode","pid","nodeFields","textContent","tempArr","isStringTemplate","root","slice","destroyTemplate","clearTemplate","reRenderNodes","removeChild","oldClass","newClass","split","editingHandler","oldInpEle","updateOldText","innerEle","className","attrs","getEditEvent","outerHTML","inpWidth","offsetWidth","innerHtml","inputObj","createInput","properties","container","inputEle","setSelectionRange","wireInputEvents","editData","editFields","inputFocusOut","newText","txtEle","crudOperation","appendNewText","isInput","updateText","triggerEvent","newData","innerText","getChildNodeObject","newList","toBind","initializeDrag","destroyDrag","virtualEle","dragObj","enableTailMode","enableAutoScroll","dragArea","dragTarget","helper","sender","dragRoot","dragWrap","dragLi","isSameNode","cloneEle","cloneNode","children","nLen","cNode","body","cursor","dragData","dragStart","listItem","parseInt","getDragEvent","draggedNode","intDestroy","dragCancelAction","drag","cursorAt","targetTouches","dragAction","dragStop","removeVirtualEle","dropTarget","preventTargetExpand","dropRoot","isHelperElement","dragParent","draggedParentNode","dropObj","out","over","drop","dropAction","dropWrap","dropLi","isDescendant","templateTarget","offsetY","offsetX","appendIndicator","renderVirtualEle","dropIndicator","virEle","dragInstance","draggable","ej2_instances","droppedElement","appendNode","draggedElement","dropAsSiblingNode","dropAsChildNode","dropUl","dragParentUl","dragParentLi","pre","moveData","updateElement","updateAriaLevel","updateInstance","dropParentUl","expandParent","childLi","dropParentLi","removedData","updateChildField","refId","getDataPos","currPid","removeChildNodes","addChildData","dropIcon","generateIcon","generateUL","childElementCount","dragIcon","updateChildAriaLevel","sibEle","destroy","dragNode","dropData","draggedNodeData","newParent","dragLiParent","targetParent","indexValue","iconCss","iconClass","position","dropTar","parent_2","parent_3","hasAttribute","clonedNode","droppedNode","droppedNodeData","dropIndex","dropLevel","addFullRow","toAdd","rowDiv","addMultiSelect","liEles_1","liEles_2","collapseByLevel","excludeHiddenNodes","getVisibleNodes","collapseAllNodes","expandByLevel","expandAllNodes","eIcons","vNodes","removeNode","removeData","updateSelectedNodes","updateExpandedNodes","dm","newId","currId","doGivenAction","toExpand","addGivenNodes","isRemote","dropEle","updateMapper","createListItemFromJson","refNode","returnValue","toUpperCase","url","navigateUrl","updated","childObj","nodeType","validID","checkValidId","doEnableAction","strNodes","filter","filterNestedChild","updatePersistProp","removeField","sleNodes","l","slelen","enodes","nodelen","cnodes","m","names","field","getMapperProp","fieldName","proxy_2","touchEditObj","tap","isDoubleTapped","tapCount","wireClickEvent","proxy_3","touchClickObj","wireExpandOnEvent","proxy_4","touchExpandObj","mouseDownHandler","keyboardModule","keyAction","bind","eventName","unWireEvents","matched","el","secondTap","firstTap","width","setCheckedNodes","uncheckAll","setIndeterminate","checkAll","setChildCheckState","parent_4","a","updatePosition","isRefreshChild","childValue","updateChildPosition","currID","found","dynamicState","operation","newNode","prevent","matchedArr","crud","changes","addedRecords","deletedRecords","changedRecords","nodesID","fromTable","saveChanges","deleteSuccess","dmFailure","update","editSucess","insert","addSuccess","updatePreviousText","onPropertyChanged","newProp","oldProp","collapseAll","onLoaded","addNodes","beginEdit","disableNodes","enableNodes","ensureVisible","expandAll","setTimeout","getAllCheckedNodes","getDisabledNodes","disabledNodes","getNode","moveNodes","sourceNodes","refreshNode","updatedChildValue","refreshData","newNodeData","parentData","newliEle","newTextEle","newIcon","fullEle","tooltip","htmlAttributes","attr","class","removeNodes","updateNode"],"sources":["C:/Project/show-me-the-code-test/view/node_modules/@syncfusion/ej2-navigations/src/treeview/treeview.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, isUndefined, Browser, compile, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Property, NotifyPropertyChanges, ChildProperty, Complex } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, KeyboardEvents } from '@syncfusion/ej2-base';\nimport { rippleEffect, Animation, remove } from '@syncfusion/ej2-base';\nimport { Draggable, Droppable } from '@syncfusion/ej2-base';\nimport { getElement } from '@syncfusion/ej2-base';\nimport { addClass, removeClass, closest, matches, detach, select, selectAll, isVisible, append } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined as isNOU, Touch, getValue, setValue, extend, merge, attributes } from '@syncfusion/ej2-base';\nimport { ListBase } from '@syncfusion/ej2-lists';\nimport { createCheckBox, rippleMouseHandler } from '@syncfusion/ej2-buttons';\nimport { Input } from '@syncfusion/ej2-inputs';\nimport { createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nvar ROOT = 'e-treeview';\nvar CONTROL = 'e-control';\nvar COLLAPSIBLE = 'e-icon-collapsible';\nvar EXPANDABLE = 'e-icon-expandable';\nvar LISTITEM = 'e-list-item';\nvar LISTTEXT = 'e-list-text';\nvar LISTWRAP = 'e-text-wrap';\nvar IELISTWRAP = 'e-ie-wrap';\nvar PARENTITEM = 'e-list-parent';\nvar HOVER = 'e-hover';\nvar ACTIVE = 'e-active';\nvar LOAD = 'e-icons-spinner';\nvar PROCESS = 'e-process';\nvar ICON = 'e-icons';\nvar TEXTWRAP = 'e-text-content';\nvar INPUT = 'e-input';\nvar INPUTGROUP = 'e-input-group';\nvar TREEINPUT = 'e-tree-input';\nvar EDITING = 'e-editing';\nvar RTL = 'e-rtl';\nvar INTERACTION = 'e-interaction';\nvar DRAGITEM = 'e-drag-item';\nvar DROPPABLE = 'e-droppable';\nvar DRAGGING = 'e-dragging';\nvar SIBLING = 'e-sibling';\nvar DROPIN = 'e-drop-in';\nvar DROPNEXT = 'e-drop-next';\nvar DROPOUT = 'e-drop-out';\nvar NODROP = 'e-no-drop';\nvar FULLROWWRAP = 'e-fullrow-wrap';\nvar FULLROW = 'e-fullrow';\nvar SELECTED = 'e-selected';\nvar EXPANDED = 'e-expanded';\nvar NODECOLLAPSED = 'e-node-collapsed';\nvar DISABLE = 'e-disable';\nvar DROPCOUNT = 'e-drop-count';\nvar CHECK = 'e-check';\nvar INDETERMINATE = 'e-stop';\nvar CHECKBOXWRAP = 'e-checkbox-wrapper';\nvar CHECKBOXFRAME = 'e-frame';\nvar CHECKBOXRIPPLE = 'e-ripple-container';\nvar RIPPLE = 'e-ripple';\nvar RIPPLEELMENT = 'e-ripple-element';\nvar FOCUS = 'e-node-focus';\nvar IMAGE = 'e-list-img';\nvar BIGGER = 'e-bigger';\nvar SMALL = 'e-small';\nvar CHILD = 'e-has-child';\nvar ITEM_ANIMATION_ACTIVE = 'e-animation-active';\nvar DISABLED = 'e-disabled';\nvar treeAriaAttr = {\n    treeRole: 'tree',\n    itemRole: 'treeitem',\n    listRole: 'group',\n    itemText: '',\n    wrapperRole: ''\n};\n/**\n * Configures the fields to bind to the properties of node in the TreeView component.\n */\nvar FieldsSettings = /** @class */ (function (_super) {\n    __extends(FieldsSettings, _super);\n    function FieldsSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('child')\n    ], FieldsSettings.prototype, \"child\", void 0);\n    __decorate([\n        Property([])\n    ], FieldsSettings.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property('expanded')\n    ], FieldsSettings.prototype, \"expanded\", void 0);\n    __decorate([\n        Property('hasChildren')\n    ], FieldsSettings.prototype, \"hasChildren\", void 0);\n    __decorate([\n        Property('htmlAttributes')\n    ], FieldsSettings.prototype, \"htmlAttributes\", void 0);\n    __decorate([\n        Property('iconCss')\n    ], FieldsSettings.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property('id')\n    ], FieldsSettings.prototype, \"id\", void 0);\n    __decorate([\n        Property('imageUrl')\n    ], FieldsSettings.prototype, \"imageUrl\", void 0);\n    __decorate([\n        Property('isChecked')\n    ], FieldsSettings.prototype, \"isChecked\", void 0);\n    __decorate([\n        Property('parentID')\n    ], FieldsSettings.prototype, \"parentID\", void 0);\n    __decorate([\n        Property(null)\n    ], FieldsSettings.prototype, \"query\", void 0);\n    __decorate([\n        Property('selected')\n    ], FieldsSettings.prototype, \"selected\", void 0);\n    __decorate([\n        Property(null)\n    ], FieldsSettings.prototype, \"tableName\", void 0);\n    __decorate([\n        Property('text')\n    ], FieldsSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property('tooltip')\n    ], FieldsSettings.prototype, \"tooltip\", void 0);\n    __decorate([\n        Property('navigateUrl')\n    ], FieldsSettings.prototype, \"navigateUrl\", void 0);\n    return FieldsSettings;\n}(ChildProperty));\nexport { FieldsSettings };\n/**\n * Configures animation settings for the TreeView component.\n */\nvar ActionSettings = /** @class */ (function (_super) {\n    __extends(ActionSettings, _super);\n    function ActionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('SlideDown')\n    ], ActionSettings.prototype, \"effect\", void 0);\n    __decorate([\n        Property(400)\n    ], ActionSettings.prototype, \"duration\", void 0);\n    __decorate([\n        Property('linear')\n    ], ActionSettings.prototype, \"easing\", void 0);\n    return ActionSettings;\n}(ChildProperty));\nexport { ActionSettings };\n/**\n * Configures the animation settings for expanding and collapsing nodes in TreeView.\n */\nvar NodeAnimationSettings = /** @class */ (function (_super) {\n    __extends(NodeAnimationSettings, _super);\n    function NodeAnimationSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Complex({ effect: 'SlideUp', duration: 400, easing: 'linear' }, ActionSettings)\n    ], NodeAnimationSettings.prototype, \"collapse\", void 0);\n    __decorate([\n        Complex({ effect: 'SlideDown', duration: 400, easing: 'linear' }, ActionSettings)\n    ], NodeAnimationSettings.prototype, \"expand\", void 0);\n    return NodeAnimationSettings;\n}(ChildProperty));\nexport { NodeAnimationSettings };\n/**\n * The TreeView component is used to represent hierarchical data in a tree like structure with advanced\n * functions to perform edit, drag and drop, selection with check-box, and more.\n * ```html\n *  <div id=\"tree\"></div>\n * ```\n * ```typescript\n *  let treeObj: TreeView = new TreeView();\n *  treeObj.appendTo('#tree');\n * ```\n */\nvar TreeView = /** @class */ (function (_super) {\n    __extends(TreeView, _super);\n    function TreeView(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.isRefreshed = false;\n        _this.preventExpand = false;\n        _this.checkedElement = [];\n        _this.disableNode = [];\n        // eslint-disable-next-line\n        _this.validArr = [];\n        _this.validNodes = [];\n        _this.expandChildren = [];\n        _this.isFieldChange = false;\n        _this.changeDataSource = false;\n        _this.hasTemplate = false;\n        _this.isFirstRender = false;\n        _this.mouseDownStatus = false;\n        return _this;\n    }\n    TreeView_1 = TreeView;\n    /**\n     * Get component name.\n     *\n     * @returns {string} - returns module name.\n     * @private\n     */\n    TreeView.prototype.getModuleName = function () {\n        return 'treeview';\n    };\n    /**\n     * Initialize the event handler\n     *\n     * @returns {void}\n     */\n    TreeView.prototype.preRender = function () {\n        var _this = this;\n        this.checkActionNodes = [];\n        this.parentNodeCheck = [];\n        this.dragStartAction = false;\n        this.isAnimate = false;\n        this.keyConfigs = {\n            escape: 'escape',\n            end: 'end',\n            enter: 'enter',\n            f2: 'f2',\n            home: 'home',\n            moveDown: 'downarrow',\n            moveLeft: 'leftarrow',\n            moveRight: 'rightarrow',\n            moveUp: 'uparrow',\n            ctrlDown: 'ctrl+downarrow',\n            ctrlUp: 'ctrl+uparrow',\n            ctrlEnter: 'ctrl+enter',\n            ctrlHome: 'ctrl+home',\n            ctrlEnd: 'ctrl+end',\n            ctrlA: 'ctrl+A',\n            shiftDown: 'shift+downarrow',\n            shiftUp: 'shift+uparrow',\n            shiftEnter: 'shift+enter',\n            shiftHome: 'shift+home',\n            shiftEnd: 'shift+end',\n            csDown: 'ctrl+shift+downarrow',\n            csUp: 'ctrl+shift+uparrow',\n            csEnter: 'ctrl+shift+enter',\n            csHome: 'ctrl+shift+home',\n            csEnd: 'ctrl+shift+end',\n            space: 'space'\n        };\n        this.listBaseOption = {\n            expandCollapse: true,\n            showIcon: true,\n            expandIconClass: EXPANDABLE,\n            ariaAttributes: treeAriaAttr,\n            expandIconPosition: 'Left',\n            itemCreated: function (e) {\n                _this.beforeNodeCreate(e);\n            },\n            enableHtmlSanitizer: this.enableHtmlSanitizer,\n            itemNavigable: this.fullRowNavigable\n        };\n        this.updateListProp(this.fields);\n        this.aniObj = new Animation({});\n        this.treeList = [];\n        this.isLoaded = false;\n        this.isInitalExpand = false;\n        this.expandChildren = [];\n        this.index = 0;\n        this.setTouchClass();\n        if (isNOU(this.selectedNodes)) {\n            this.setProperties({ selectedNodes: [] }, true);\n        }\n        if (isNOU(this.checkedNodes)) {\n            this.setProperties({ checkedNodes: [] }, true);\n        }\n        if (isNOU(this.expandedNodes)) {\n            this.setProperties({ expandedNodes: [] }, true);\n        }\n        else {\n            this.isInitalExpand = true;\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     *\n     * @returns {string} - returns the persisted data\n     * @hidden\n     */\n    TreeView.prototype.getPersistData = function () {\n        var keyEntity = ['selectedNodes', 'checkedNodes', 'expandedNodes'];\n        return this.addOnPersist(keyEntity);\n    };\n    /**\n     * To Initialize the control rendering\n     *\n     * @private\n     * @returns {void}\n     */\n    TreeView.prototype.render = function () {\n        this.initialRender = true;\n        this.initialize();\n        this.setDataBinding(false);\n        this.setDisabledMode();\n        this.setExpandOnType();\n        if (!this.disabled) {\n            this.setRipple();\n        }\n        this.wireEditingEvents(this.allowEditing);\n        this.setDragAndDrop(this.allowDragAndDrop);\n        if (!this.disabled) {\n            this.wireEvents();\n        }\n        this.initialRender = false;\n        this.renderComplete();\n    };\n    TreeView.prototype.initialize = function () {\n        this.element.setAttribute('role', 'tree');\n        this.element.setAttribute('tabindex', '0');\n        this.element.setAttribute('aria-activedescendant', this.element.id + '_active');\n        this.setCssClass(null, this.cssClass);\n        this.setEnableRtl();\n        this.setFullRow(this.fullRowSelect);\n        this.setTextWrap();\n        this.nodeTemplateFn = this.templateComplier(this.nodeTemplate);\n    };\n    TreeView.prototype.setDisabledMode = function () {\n        if (this.disabled) {\n            this.element.classList.add(DISABLED);\n        }\n        else {\n            this.element.classList.remove(DISABLED);\n        }\n    };\n    TreeView.prototype.setEnableRtl = function () {\n        (this.enableRtl ? addClass : removeClass)([this.element], RTL);\n    };\n    TreeView.prototype.setRipple = function () {\n        var tempStr = '.' + FULLROW + ',.' + TEXTWRAP;\n        var rippleModel = {\n            selector: tempStr,\n            ignore: '.' + TEXTWRAP + ' > .' + ICON + ',.' + INPUTGROUP + ',.' + INPUT + ', .' + CHECKBOXWRAP\n        };\n        this.rippleFn = rippleEffect(this.element, rippleModel);\n        var iconModel = {\n            selector: '.' + TEXTWRAP + ' > .' + ICON,\n            isCenterRipple: true\n        };\n        this.rippleIconFn = rippleEffect(this.element, iconModel);\n    };\n    TreeView.prototype.setFullRow = function (isEnabled) {\n        (isEnabled ? addClass : removeClass)([this.element], FULLROWWRAP);\n    };\n    TreeView.prototype.setMultiSelect = function (isEnabled) {\n        var firstUl = select('.' + PARENTITEM, this.element);\n        if (isEnabled) {\n            firstUl.setAttribute('aria-multiselectable', 'true');\n        }\n        else {\n            firstUl.removeAttribute('aria-multiselectable');\n        }\n    };\n    // eslint-disable-next-line\n    TreeView.prototype.templateComplier = function (template) {\n        if (template) {\n            this.hasTemplate = true;\n            // eslint-disable-next-line\n            var e = void 0;\n            this.element.classList.add(INTERACTION);\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n                else {\n                    return compile(template);\n                }\n            }\n            catch (e) {\n                return compile(template);\n            }\n        }\n        this.element.classList.remove(INTERACTION);\n        return undefined;\n    };\n    TreeView.prototype.setDataBinding = function (changeDataSource) {\n        var _this = this;\n        this.treeList.push('false');\n        if (this.fields.dataSource instanceof DataManager) {\n            /* eslint-disable */\n            this.isOffline = this.fields.dataSource.dataSource.offline;\n            if (this.fields.dataSource.ready) {\n                this.fields.dataSource.ready.then(function (e) {\n                    /* eslint-disable */\n                    _this.isOffline = _this.fields.dataSource.dataSource.offline;\n                    if (_this.fields.dataSource instanceof DataManager && _this.isOffline) {\n                        _this.treeList.pop();\n                        _this.treeData = e.result;\n                        _this.isNumberTypeId = _this.getType();\n                        _this.setRootData();\n                        _this.renderItems(true);\n                        if (_this.treeList.length === 0 && !_this.isLoaded) {\n                            _this.finalize();\n                        }\n                    }\n                }).catch(function (e) {\n                    _this.trigger('actionFailure', { error: e });\n                });\n            }\n            else {\n                this.fields.dataSource.executeQuery(this.getQuery(this.fields)).then(function (e) {\n                    _this.treeList.pop();\n                    _this.treeData = e.result;\n                    _this.isNumberTypeId = _this.getType();\n                    _this.setRootData();\n                    if (changeDataSource) {\n                        _this.changeDataSource = true;\n                    }\n                    _this.renderItems(true);\n                    _this.changeDataSource = false;\n                    if (_this.treeList.length === 0 && !_this.isLoaded) {\n                        _this.finalize();\n                    }\n                }).catch(function (e) {\n                    _this.trigger('actionFailure', { error: e });\n                });\n            }\n        }\n        else {\n            this.treeList.pop();\n            if (isNOU(this.fields.dataSource)) {\n                this.rootData = this.treeData = [];\n            }\n            else {\n                this.treeData = JSON.parse(JSON.stringify(this.fields.dataSource));\n                this.setRootData();\n            }\n            this.isNumberTypeId = this.getType();\n            this.renderItems(false);\n        }\n        if (this.treeList.length === 0 && !this.isLoaded) {\n            this.finalize();\n        }\n    };\n    TreeView.prototype.getQuery = function (mapper, value) {\n        if (value === void 0) { value = null; }\n        var columns = [];\n        var query;\n        if (!mapper.query) {\n            query = new Query();\n            var prop = this.getActualProperties(mapper);\n            for (var _i = 0, _a = Object.keys(prop); _i < _a.length; _i++) {\n                var col = _a[_i];\n                if (col !== 'dataSource' && col !== 'tableName' && col !== 'child' && !!mapper[col]\n                    && col !== 'url' && columns.indexOf(mapper[col]) === -1) {\n                    columns.push(mapper[col]);\n                }\n            }\n            query.select(columns);\n            if (prop.hasOwnProperty('tableName')) {\n                query.from(mapper.tableName);\n            }\n        }\n        else {\n            query = mapper.query.clone();\n        }\n        ListBase.addSorting(this.sortOrder, mapper.text, query);\n        if (!isNOU(value) && !isNOU(mapper.parentID)) {\n            query.where(mapper.parentID, 'equal', (this.isNumberTypeId ? parseFloat(value) : value));\n        }\n        return query;\n    };\n    TreeView.prototype.getType = function () {\n        return this.treeData[0] ? ((typeof getValue(this.fields.id, this.treeData[0]) === 'number') ? true : false) : false;\n    };\n    TreeView.prototype.setRootData = function () {\n        this.dataType = this.getDataType(this.treeData, this.fields);\n        if (this.dataType === 1) {\n            this.groupedData = this.getGroupedData(this.treeData, this.fields.parentID);\n            var rootItems = this.getChildNodes(this.treeData, undefined, true);\n            if (isNOU(rootItems)) {\n                this.rootData = [];\n            }\n            else {\n                this.rootData = rootItems;\n            }\n        }\n        else {\n            this.rootData = this.treeData;\n        }\n    };\n    TreeView.prototype.renderItems = function (isSorted) {\n        /* eslint-disable */\n        this.listBaseOption.ariaAttributes.level = 1;\n        var sortedData = this.getSortedData(this.rootData);\n        this.ulElement = ListBase.createList(this.createElement, isSorted ? this.rootData : sortedData, this.listBaseOption);\n        this.element.appendChild(this.ulElement);\n        var rootNodes = this.ulElement.querySelectorAll('.e-list-item');\n        if (this.loadOnDemand === false) {\n            var i = 0;\n            while (i < rootNodes.length) {\n                this.renderChildNodes(rootNodes[i], true, null, true);\n                i++;\n            }\n        }\n        var parentEle = selectAll('.' + PARENTITEM, this.element);\n        if ((parentEle.length === 1 && (rootNodes && rootNodes.length !== 0)) || this.loadOnDemand) {\n            this.finalizeNode(this.element);\n        }\n        this.parentNodeCheck = [];\n        this.parentCheckData = [];\n        this.updateCheckedStateFromDS();\n        if (this.autoCheck && this.showCheckBox && !this.isLoaded) {\n            this.updateParentCheckState();\n        }\n    };\n    /**\n     * Update the checkedNodes from datasource at initial rendering\n     */\n    TreeView.prototype.updateCheckedStateFromDS = function (id) {\n        this.validNodes = [];\n        if (this.treeData && this.showCheckBox) {\n            if (this.dataType === 1) {\n                var mapper = this.fields;\n                var resultData = new DataManager(this.treeData).executeLocal(new Query().where(mapper.isChecked, 'equal', true, false));\n                for (var i = 0; i < resultData.length; i++) {\n                    var resultId = resultData[i][this.fields.id] ? resultData[i][this.fields.id].toString() : null;\n                    var resultPId = resultData[i][this.fields.parentID] ? resultData[i][this.fields.parentID].toString() : null;\n                    if (this.checkedNodes.indexOf(resultId) === -1 && !(this.isLoaded)) {\n                        this.checkedNodes.push(resultId);\n                    }\n                    if (resultData[i][this.fields.hasChildren]) {\n                        var id_1 = resultData[i][this.fields.id];\n                        var childData = new DataManager(this.treeData).\n                            executeLocal(new Query().where(mapper.parentID, 'equal', id_1, false));\n                        for (var child = 0; child < childData.length; child++) {\n                            var childId = childData[child][this.fields.id] ? childData[child][this.fields.id].toString() : null;\n                            if (this.checkedNodes.indexOf(childId) === -1 && this.autoCheck) {\n                                this.checkedNodes.push(childId);\n                            }\n                        }\n                    }\n                }\n                for (var i = 0; i < this.checkedNodes.length; i++) {\n                    var mapper_1 = this.fields;\n                    var checkState = new DataManager(this.treeData).\n                        executeLocal(new Query().where(mapper_1.id, 'equal', this.checkedNodes[i], true));\n                    if (checkState[0] && this.autoCheck) {\n                        this.getCheckedNodeDetails(mapper_1, checkState);\n                        this.checkIndeterminateState(checkState[0]);\n                    }\n                    if (checkState.length > 0) {\n                        var checkedId = checkState[0][this.fields.id] ? checkState[0][this.fields.id].toString() : null;\n                        if (this.checkedNodes.indexOf(checkedId) > -1 && this.validNodes.indexOf(checkedId) === -1) {\n                            this.validNodes.push(checkedId);\n                        }\n                    }\n                    var checkedData = new DataManager(this.treeData).\n                        executeLocal(new Query().where(mapper_1.parentID, 'equal', this.checkedNodes[i], true));\n                    for (var index = 0; index < checkedData.length; index++) {\n                        var checkedId = checkedData[index][this.fields.id] ? checkedData[index][this.fields.id].toString() : null;\n                        if (this.checkedNodes.indexOf(checkedId) === -1 && this.autoCheck) {\n                            this.checkedNodes.push(checkedId);\n                        }\n                        if (this.checkedNodes.indexOf(checkedId) > -1 && this.validNodes.indexOf(checkedId) === -1) {\n                            this.validNodes.push(checkedId);\n                        }\n                    }\n                }\n            }\n            else if (this.dataType === 2 || (this.fields.dataSource instanceof DataManager &&\n                this.isOffline)) {\n                for (var index = 0; index < this.treeData.length; index++) {\n                    var fieldId = this.treeData[index][this.fields.id] ? this.treeData[index][this.fields.id].toString() : '';\n                    if (this.treeData[index][this.fields.isChecked] && !(this.isLoaded) && this.checkedNodes.indexOf(fieldId) === -1) {\n                        this.checkedNodes.push(fieldId);\n                    }\n                    if (this.checkedNodes.indexOf(fieldId) > -1 && this.validNodes.indexOf(fieldId) === -1) {\n                        this.validNodes.push(fieldId);\n                    }\n                    var childItems = getValue(this.fields.child.toString(), this.treeData[index]);\n                    if (childItems) {\n                        this.updateChildCheckState(childItems, this.treeData[index]);\n                    }\n                }\n                this.validNodes = (this.enablePersistence) ? this.checkedNodes : this.validNodes;\n            }\n            this.setProperties({ checkedNodes: this.validNodes }, true);\n        }\n    };\n    /**\n     * To check whether the list data has sub child and to change the parent check state accordingly\n     */\n    TreeView.prototype.getCheckedNodeDetails = function (mapper, checkNodes) {\n        var id = checkNodes[0][this.fields.parentID] ? checkNodes[0][this.fields.parentID].toString() : null;\n        var count = 0;\n        var element = this.element.querySelector('[data-uid=\"' + checkNodes[0][this.fields.id] + '\"]');\n        var parentEle = this.element.querySelector('[data-uid=\"' + checkNodes[0][this.fields.parentID] + '\"]');\n        if (!element && !parentEle) {\n            var len = this.parentNodeCheck.length;\n            if (this.parentNodeCheck.indexOf(id) === -1) {\n                this.parentNodeCheck.push(id);\n            }\n            var childNodes = this.getChildNodes(this.treeData, id);\n            for (var i = 0; i < childNodes.length; i++) {\n                var childId = childNodes[i][this.fields.id] ? childNodes[i][this.fields.id].toString() : null;\n                if (this.checkedNodes.indexOf(childId) !== -1) {\n                    count++;\n                }\n                if (count === childNodes.length && this.checkedNodes.indexOf(id) === -1) {\n                    this.checkedNodes.push(id);\n                }\n            }\n            var preElement = new DataManager(this.treeData).\n                executeLocal(new Query().where(mapper.id, 'equal', id, true));\n            this.getCheckedNodeDetails(mapper, preElement);\n        }\n        else if (parentEle) {\n            var check = select('.' + CHECK, parentEle);\n            if (!check) {\n                this.changeState(parentEle, 'indeterminate', null, true, true);\n            }\n        }\n    };\n    /**\n     * Update the checkedNodes and parent state when all the child Nodes are in checkedstate at initial rendering\n     */\n    TreeView.prototype.updateParentCheckState = function () {\n        var indeterminate = selectAll('.' + INDETERMINATE, this.element);\n        var childCheckedElement;\n        for (var i = 0; i < indeterminate.length; i++) {\n            var node = closest(indeterminate[i], '.' + LISTITEM);\n            var nodeId = node.getAttribute('data-uid').toString();\n            if (this.dataType === 1) {\n                childCheckedElement = new DataManager(this.treeData).\n                    executeLocal(new Query().where(this.fields.parentID, 'equal', nodeId, true));\n            }\n            else {\n                childCheckedElement = this.getChildNodes(this.treeData, nodeId);\n            }\n            var count = 0;\n            if (childCheckedElement) {\n                for (var j = 0; j < childCheckedElement.length; j++) {\n                    var childId = childCheckedElement[j][this.fields.id].toString();\n                    if (this.checkedNodes.indexOf(childId) !== -1) {\n                        count++;\n                    }\n                }\n                if (count === childCheckedElement.length) {\n                    var nodeCheck = node.getAttribute('data-uid');\n                    if (this.checkedNodes.indexOf(nodeCheck) === -1) {\n                        this.checkedNodes.push(nodeCheck);\n                    }\n                    this.changeState(node, 'check', null, true, true);\n                }\n                else if (count === 0 && this.checkedNodes.length === 0) {\n                    this.changeState(node, 'uncheck', null, true, true);\n                }\n            }\n        }\n    };\n    /**\n     * Change the parent to indeterminate state whenever the child is in checked state which is not rendered in DOM\n     */\n    TreeView.prototype.checkIndeterminateState = function (data) {\n        var element;\n        if (this.dataType === 1) {\n            element = this.element.querySelector('[data-uid=\"' + data[this.fields.parentID] + '\"]');\n        }\n        else {\n            element = this.element.querySelector('[data-uid=\"' + data[this.fields.id] + '\"]');\n        }\n        if (element) {\n            var ariaChecked = element.querySelector('.' + CHECKBOXWRAP).getAttribute('aria-checked');\n            if (ariaChecked !== 'true') {\n                this.changeState(element, 'indeterminate', null, true, true);\n            }\n        }\n        else if (this.dataType === 2) {\n            var len = this.parentNodeCheck.length;\n            if (this.parentNodeCheck.indexOf(data[this.fields.id].toString()) === -1) {\n                this.parentNodeCheck.push(data[this.fields.id].toString());\n            }\n        }\n    };\n    /**\n     * Update the checkedNodes for child and subchild from datasource (hierarchical datasource) at initial rendering\n     */\n    TreeView.prototype.updateChildCheckState = function (childItems, treeData) {\n        var count = 0;\n        var checkedParent = treeData[this.fields.id] ? treeData[this.fields.id].toString() : '';\n        for (var index = 0; index < childItems.length; index++) {\n            var checkedChild = childItems[index][this.fields.id] ? childItems[index][this.fields.id].toString() : '';\n            if (childItems[index][this.fields.isChecked] && !(this.isLoaded) && this.checkedNodes.indexOf(checkedChild) === -1) {\n                this.checkedNodes.push(checkedChild);\n            }\n            if (this.checkedNodes.indexOf(checkedParent) !== -1 && this.checkedNodes.indexOf(checkedChild) === -1 && this.autoCheck) {\n                this.checkedNodes.push(checkedChild);\n            }\n            if (this.checkedNodes.indexOf(checkedChild) !== -1 && this.autoCheck) {\n                count++;\n            }\n            if (this.checkedNodes.indexOf(checkedChild) > -1 && this.validNodes.indexOf(checkedChild) === -1) {\n                this.validNodes.push(checkedChild);\n            }\n            var subChildItems = getValue(this.fields.child.toString(), childItems[index]);\n            if (subChildItems && subChildItems.length) {\n                if (this.parentCheckData.indexOf(treeData) === -1)\n                    this.parentCheckData.push(treeData);\n                this.updateChildCheckState(subChildItems, childItems[index]);\n            }\n            if (count === childItems.length && this.autoCheck && this.checkedNodes.indexOf(checkedParent) === -1) {\n                this.checkedNodes.push(checkedParent);\n            }\n        }\n        if (count !== 0 && this.autoCheck) {\n            this.checkIndeterminateState(treeData);\n            for (var len = 0; len < this.parentCheckData.length; len++) {\n                if ((treeData !== this.parentCheckData[len]) && (this.parentCheckData[len])) {\n                    this.checkIndeterminateState(this.parentCheckData[len]);\n                }\n            }\n        }\n    };\n    TreeView.prototype.beforeNodeCreate = function (e) {\n        if (this.showCheckBox) {\n            var checkboxEle = createCheckBox(this.createElement, true, { cssClass: this.touchClass });\n            checkboxEle.setAttribute('role', 'checkbox');\n            var icon = select('div.' + ICON, e.item);\n            var id = e.item.getAttribute('data-uid');\n            e.item.childNodes[0].insertBefore(checkboxEle, e.item.childNodes[0].childNodes[isNOU(icon) ? 0 : 1]);\n            var checkValue = getValue(e.fields.isChecked, e.curData);\n            if (this.checkedNodes.indexOf(id) > -1) {\n                select('.' + CHECKBOXFRAME, checkboxEle).classList.add(CHECK);\n                checkboxEle.setAttribute('aria-checked', 'true');\n                this.addCheck(e.item);\n            }\n            else if (!isNOU(checkValue) && checkValue.toString() === 'true') {\n                select('.' + CHECKBOXFRAME, checkboxEle).classList.add(CHECK);\n                checkboxEle.setAttribute('aria-checked', 'true');\n                this.addCheck(e.item);\n            }\n            else {\n                checkboxEle.setAttribute('aria-checked', 'false');\n            }\n            var frame = select('.' + CHECKBOXFRAME, checkboxEle);\n            EventHandler.add(frame, 'mousedown', this.frameMouseHandler, this);\n            EventHandler.add(frame, 'mouseup', this.frameMouseHandler, this);\n        }\n        if (this.fullRowSelect) {\n            this.createFullRow(e.item);\n        }\n        if (this.allowMultiSelection && !e.item.classList.contains(SELECTED)) {\n            e.item.setAttribute('aria-selected', 'false');\n        }\n        var fields = e.fields;\n        this.addActionClass(e, fields.selected, SELECTED);\n        this.addActionClass(e, fields.expanded, EXPANDED);\n        if (!isNOU(this.nodeTemplateFn)) {\n            var textEle = e.item.querySelector('.' + LISTTEXT);\n            var dataId = e.item.getAttribute('data-uid');\n            textEle.innerHTML = '';\n            this.renderNodeTemplate(e.curData, textEle, dataId);\n        }\n        var eventArgs = {\n            node: e.item,\n            nodeData: e.curData,\n            text: e.text,\n        };\n        if (!this.isRefreshed) {\n            this.trigger('drawNode', eventArgs);\n        }\n    };\n    TreeView.prototype.frameMouseHandler = function (e) {\n        var rippleSpan = select('.' + CHECKBOXRIPPLE, e.target.parentElement);\n        rippleMouseHandler(e, rippleSpan);\n    };\n    TreeView.prototype.addActionClass = function (e, action, cssClass) {\n        var data = e.curData;\n        var actionValue = getValue(action, data);\n        if (!isNOU(actionValue) && actionValue.toString() !== 'false') {\n            e.item.classList.add(cssClass);\n        }\n    };\n    TreeView.prototype.getDataType = function (ds, mapper) {\n        if (this.fields.dataSource instanceof DataManager) {\n            for (var i = 0; i < ds.length; i++) {\n                if (this.isOffline) {\n                    if ((typeof mapper.child === 'string') && isNOU(getValue(mapper.child, ds[i])) && !isNOU(getValue(mapper.parentID, ds[i]))) {\n                        return 1;\n                    }\n                }\n                else if ((typeof mapper.child === 'string') && isNOU(getValue(mapper.child, ds[i]))) {\n                    return 1;\n                }\n            }\n            return 2;\n        }\n        for (var i = 0, len = ds.length; i < len; i++) {\n            if ((typeof mapper.child === 'string') && !isNOU(getValue(mapper.child, ds[i]))) {\n                return 2;\n            }\n            if (!isNOU(getValue(mapper.parentID, ds[i])) || !isNOU(getValue(mapper.hasChildren, ds[i]))) {\n                return 1;\n            }\n        }\n        return 1;\n    };\n    TreeView.prototype.getGroupedData = function (dataSource, groupBy) {\n        var cusQuery = new Query().group(groupBy);\n        var ds = ListBase.getDataSource(dataSource, cusQuery);\n        var grpItem = [];\n        for (var j = 0; j < ds.length; j++) {\n            var itemObj = ds[j].items;\n            grpItem.push(itemObj);\n        }\n        return grpItem;\n    };\n    TreeView.prototype.getSortedData = function (list) {\n        if (list && this.sortOrder !== 'None') {\n            list = ListBase.getDataSource(list, ListBase.addSorting(this.sortOrder, this.fields.text));\n        }\n        return list;\n    };\n    TreeView.prototype.finalizeNode = function (element) {\n        var iNodes = selectAll('.' + IMAGE, element);\n        for (var k = 0; k < iNodes.length; k++) {\n            iNodes[k].setAttribute('alt', IMAGE);\n        }\n        if (this.isLoaded) {\n            var sNodes = selectAll('.' + SELECTED, element);\n            for (var i = 0; i < sNodes.length; i++) {\n                this.selectNode(sNodes[i], null);\n                break;\n            }\n            removeClass(sNodes, SELECTED);\n        }\n        var cNodes = selectAll('.' + LISTITEM + ':not(.' + EXPANDED + ')', element);\n        for (var j = 0; j < cNodes.length; j++) {\n            var icon = select('div.' + ICON, cNodes[j]);\n            if (icon && icon.classList.contains(EXPANDABLE)) {\n                this.disableExpandAttr(cNodes[j]);\n            }\n        }\n        var eNodes = selectAll('.' + EXPANDED, element);\n        if (!this.isInitalExpand) {\n            for (var i = 0; i < eNodes.length; i++) {\n                this.renderChildNodes(eNodes[i]);\n            }\n        }\n        removeClass(eNodes, EXPANDED);\n        this.updateList();\n        if (this.isLoaded) {\n            this.updateCheckedProp();\n        }\n    };\n    TreeView.prototype.updateCheckedProp = function () {\n        if (this.showCheckBox) {\n            var nodes = [].concat([], this.checkedNodes);\n            this.setProperties({ checkedNodes: nodes }, true);\n        }\n    };\n    TreeView.prototype.ensureIndeterminate = function () {\n        if (this.autoCheck) {\n            var liElement = selectAll('li', this.element);\n            var ulElement = void 0;\n            for (var i = 0; i < liElement.length; i++) {\n                if (liElement[i].classList.contains(LISTITEM)) {\n                    ulElement = select('.' + PARENTITEM, liElement[i]);\n                    if (ulElement) {\n                        this.ensureParentCheckState(liElement[i]);\n                    }\n                    else {\n                        this.ensureChildCheckState(liElement[i]);\n                    }\n                }\n            }\n        }\n        else {\n            var indeterminate = selectAll('.' + INDETERMINATE, this.element);\n            for (var i = 0; i < indeterminate.length; i++) {\n                indeterminate[i].classList.remove(INDETERMINATE);\n            }\n        }\n    };\n    TreeView.prototype.ensureParentCheckState = function (element) {\n        if (!isNOU(element)) {\n            if (element.classList.contains(ROOT)) {\n                return;\n            }\n            var ulElement = element;\n            if (element.classList.contains(LISTITEM)) {\n                ulElement = select('.' + PARENTITEM, element);\n            }\n            var checkedNodes = selectAll('.' + CHECK, ulElement);\n            var indeterminateNodes = selectAll('.' + INDETERMINATE, ulElement);\n            var nodes = selectAll('.' + LISTITEM, ulElement);\n            var checkBoxEle = element.getElementsByClassName(CHECKBOXWRAP)[0];\n            if (nodes.length === checkedNodes.length) {\n                this.changeState(checkBoxEle, 'check', null, true, true);\n            }\n            else if (checkedNodes.length > 0 || indeterminateNodes.length > 0) {\n                this.changeState(checkBoxEle, 'indeterminate', null, true, true);\n            }\n            else if (checkedNodes.length === 0) {\n                this.changeState(checkBoxEle, 'uncheck', null, true, true);\n            }\n            var parentUL = closest(element, '.' + PARENTITEM);\n            if (!isNOU(parentUL)) {\n                var currentParent = closest(parentUL, '.' + LISTITEM);\n                this.ensureParentCheckState(currentParent);\n            }\n        }\n    };\n    TreeView.prototype.ensureChildCheckState = function (element, e) {\n        if (!isNOU(element)) {\n            var childElement = select('.' + PARENTITEM, element);\n            var checkBoxes = void 0;\n            if (!isNOU(childElement)) {\n                checkBoxes = selectAll('.' + CHECKBOXWRAP, childElement);\n                var isChecked = element.getElementsByClassName(CHECKBOXFRAME)[0].classList.contains(CHECK);\n                var parentCheck = element.getElementsByClassName(CHECKBOXFRAME)[0].classList.contains(INDETERMINATE);\n                var childCheck = childElement.querySelectorAll('li');\n                var expandState = childElement.parentElement.getAttribute('aria-expanded');\n                var checkedState = void 0;\n                for (var index = 0; index < checkBoxes.length; index++) {\n                    var childId = childCheck[index].getAttribute('data-uid');\n                    if (!isNOU(this.currentLoadData) && !isNOU(getValue(this.fields.isChecked, this.currentLoadData[index]))) {\n                        checkedState = getValue(this.fields.isChecked, this.currentLoadData[index]) ? 'check' : 'uncheck';\n                        if (this.ele !== -1) {\n                            checkedState = isChecked ? 'check' : 'uncheck';\n                        }\n                        if ((checkedState === 'uncheck') && (!isUndefined(this.parentNodeCheck) && this.autoCheck\n                            && this.parentNodeCheck.indexOf(childId) !== -1)) {\n                            this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(childId), 1);\n                            checkedState = 'indeterminate';\n                        }\n                    }\n                    else {\n                        var isNodeChecked = checkBoxes[index].getElementsByClassName(CHECKBOXFRAME)[0].classList.contains(CHECK);\n                        if (isChecked) {\n                            checkedState = 'check';\n                        }\n                        else if (isNodeChecked && !this.isLoaded) {\n                            checkedState = 'check';\n                        }\n                        else if (this.checkedNodes.indexOf(childId) !== -1 && this.isLoaded && (parentCheck || isChecked)) {\n                            checkedState = 'check';\n                        }\n                        else if (childCheck[index].classList.contains(CHILD) && (!isUndefined(this.parentNodeCheck) && this.autoCheck\n                            && (isChecked || parentCheck) && this.parentNodeCheck.indexOf(childId) !== -1)) {\n                            checkedState = 'indeterminate';\n                            this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(childId), 1);\n                        }\n                        else if (this.dataType === 1 && (!isUndefined(this.parentNodeCheck) && this.autoCheck &&\n                            (isChecked || parentCheck) && this.parentNodeCheck.indexOf(childId) !== -1)) {\n                            checkedState = 'indeterminate';\n                            this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(childId), 1);\n                        }\n                        else {\n                            checkedState = 'uncheck';\n                        }\n                    }\n                    this.changeState(checkBoxes[index], checkedState, e, true, true);\n                }\n            }\n            if (this.autoCheck && this.isLoaded) {\n                this.updateParentCheckState();\n            }\n        }\n    };\n    TreeView.prototype.doCheckBoxAction = function (nodes, doCheck) {\n        var li = selectAll('.' + LISTITEM, this.element);\n        if (!isNOU(nodes)) {\n            for (var len = nodes.length; len >= 0; len--) {\n                var liEle = void 0;\n                if (nodes.length === 1) {\n                    liEle = this.getElement(nodes[len - 1]);\n                }\n                else {\n                    liEle = this.getElement(nodes[len]);\n                }\n                if (isNOU(liEle)) {\n                    var node = void 0;\n                    node = nodes[len - nodes.length] ? nodes[len - nodes.length].toString() : nodes[len] ? nodes[len].toString() : null;\n                    if (node !== '' && doCheck && node) {\n                        this.setValidCheckedNode(node);\n                        this.dynamicCheckState(node, doCheck);\n                    }\n                    else if (this.checkedNodes.indexOf(node) !== -1 && node !== '' && !doCheck) {\n                        this.checkedNodes.splice(this.checkedNodes.indexOf(node), 1);\n                        var childItems = this.getChildNodes(this.treeData, node);\n                        if (childItems) {\n                            for (var i = 0; i < childItems.length; i++) {\n                                var id = childItems[i][this.fields.id] ? childItems[i][this.fields.id].toString() : null;\n                                if (this.checkedNodes.indexOf(id) !== -1) {\n                                    this.checkedNodes.splice(this.checkedNodes.indexOf(id), 1);\n                                    var ele = this.element.querySelector('[data-uid=\"' + id + '\"]');\n                                    if (ele) {\n                                        this.changeState(ele, 'uncheck', null);\n                                    }\n                                }\n                            }\n                            if (this.parentNodeCheck.indexOf(node) !== -1) {\n                                this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(node), 1);\n                            }\n                        }\n                        if (node) {\n                            this.dynamicCheckState(node, doCheck);\n                        }\n                        this.updateField(this.treeData, this.fields, node, 'isChecked', null);\n                    }\n                    continue;\n                }\n                var checkBox = select('.' + PARENTITEM + ' .' + CHECKBOXWRAP, liEle);\n                this.validateCheckNode(checkBox, !doCheck, liEle, null);\n            }\n        }\n        else {\n            var checkBoxes = selectAll('.' + CHECKBOXWRAP, this.element);\n            if (this.loadOnDemand) {\n                for (var index = 0; index < checkBoxes.length; index++) {\n                    this.updateFieldChecked(checkBoxes[index], doCheck);\n                    this.changeState(checkBoxes[index], doCheck ? 'check' : 'uncheck', null, null, null, doCheck);\n                }\n            }\n            else {\n                for (var index = 0; index < checkBoxes.length; index++) {\n                    this.updateFieldChecked(checkBoxes[index], doCheck);\n                    this.changeState(checkBoxes[index], doCheck ? 'check' : 'uncheck');\n                }\n            }\n        }\n        if (nodes) {\n            for (var j = 0; j < nodes.length; j++) {\n                var node = nodes[j] ? nodes[j].toString() : '';\n                if (!doCheck) {\n                    this.updateField(this.treeData, this.fields, node, 'isChecked', null);\n                }\n            }\n        }\n        if (this.autoCheck) {\n            this.updateParentCheckState();\n        }\n    };\n    TreeView.prototype.updateFieldChecked = function (checkbox, doCheck) {\n        var currLi = closest(checkbox, '.' + LISTITEM);\n        var id = currLi.getAttribute('data-uid');\n        var nodeDetails = this.getNodeData(currLi);\n        if (nodeDetails.isChecked === 'true' && !doCheck) {\n            this.updateField(this.treeData, this.fields, id, 'isChecked', null);\n        }\n    };\n    /**\n     * Changes the parent and child  check state while changing the checkedNodes via setmodel\n     */\n    TreeView.prototype.dynamicCheckState = function (node, doCheck) {\n        if (this.dataType === 1) {\n            var count = 0;\n            var resultId = new DataManager(this.treeData).executeLocal(new Query().where(this.fields.id, 'equal', node, true));\n            if (resultId[0]) {\n                var id = resultId[0][this.fields.id] ? resultId[0][this.fields.id].toString() : null;\n                var parent_1 = resultId[0][this.fields.parentID] ? resultId[0][this.fields.parentID].toString() : null;\n                var parentElement = this.element.querySelector('[data-uid=\"' + parent_1 + '\"]');\n                var indeterminate = parentElement ? select('.' + INDETERMINATE, parentElement) : null;\n                var check = parentElement ? select('.' + CHECK, parentElement) : null;\n                var element = this.element.querySelector('[data-uid=\"' + id + '\"]');\n                var childNodes = this.getChildNodes(this.treeData, parent_1);\n                if (childNodes) {\n                    for (var i = 0; i < childNodes.length; i++) {\n                        var childId = childNodes[i][this.fields.id] ? childNodes[i][this.fields.id].toString() : null;\n                        if (this.checkedNodes.indexOf(childId) !== -1) {\n                            count++;\n                        }\n                    }\n                }\n                if (this.checkedNodes.indexOf(node) !== -1 && parentElement && (id === node) && this.autoCheck) {\n                    this.changeState(parentElement, 'indeterminate', null);\n                }\n                else if (this.checkedNodes.indexOf(node) === -1 && element && (id === node) && !doCheck) {\n                    this.changeState(element, 'uncheck', null);\n                }\n                else if (this.checkedNodes.indexOf(node) !== -1 && element && (id === node) && doCheck) {\n                    this.changeState(element, 'check', null);\n                }\n                else if (this.checkedNodes.indexOf(node) === -1 && !element && parentElement && (id === node) && this.autoCheck\n                    && count !== 0) {\n                    this.changeState(parentElement, 'indeterminate', null);\n                }\n                else if (this.checkedNodes.indexOf(node) === -1 && !element && parentElement && (id === node) && this.autoCheck\n                    && count === 0) {\n                    this.changeState(parentElement, 'uncheck', null);\n                }\n                else if (!element && !parentElement && (id === node) && this.autoCheck) {\n                    this.updateIndeterminate(node, doCheck);\n                }\n            }\n        }\n        else if (this.dataType === 2 || (this.fields.dataSource instanceof DataManager &&\n            this.isOffline)) {\n            var id = void 0;\n            var parentElement = void 0;\n            var check = void 0;\n            for (var i = 0; i < this.treeData.length; i++) {\n                id = this.treeData[i][this.fields.id] ? this.treeData[i][this.fields.id].toString() : '';\n                parentElement = this.element.querySelector('[data-uid=\"' + id + '\"]');\n                check = parentElement ? select('.' + CHECK, parentElement) : null;\n                if (this.checkedNodes.indexOf(id) === -1 && parentElement && check && !doCheck) {\n                    this.changeState(parentElement, 'uncheck', null);\n                }\n                var subChild = getValue(this.fields.child.toString(), this.treeData[i]);\n                if (subChild) {\n                    this.updateChildIndeterminate(subChild, id, node, doCheck, id);\n                }\n            }\n        }\n    };\n    /**\n     * updates the parent and child  check state while changing the checkedNodes via setmodel for listData\n     */\n    TreeView.prototype.updateIndeterminate = function (node, doCheck) {\n        var indeterminateData = this.getTreeData(node);\n        var count = 0;\n        var parent;\n        if (this.dataType === 1) {\n            parent = indeterminateData[0][this.fields.parentID] ? indeterminateData[0][this.fields.parentID].toString() : null;\n        }\n        var childNodes = this.getChildNodes(this.treeData, parent);\n        if (childNodes) {\n            for (var i = 0; i < childNodes.length; i++) {\n                var childId = childNodes[i][this.fields.id] ? childNodes[i][this.fields.id].toString() : null;\n                if (this.checkedNodes.indexOf(childId) !== -1) {\n                    count++;\n                }\n            }\n        }\n        var parentElement = this.element.querySelector('[data-uid=\"' + parent + '\"]');\n        if (parentElement && doCheck) {\n            this.changeState(parentElement, 'indeterminate', null);\n        }\n        else if (!doCheck && parentElement && this.parentNodeCheck.indexOf(parent) === -1 && count !== 0) {\n            this.changeState(parentElement, 'indeterminate', null);\n        }\n        else if (!doCheck && parentElement && this.parentNodeCheck.indexOf(parent) === -1 && count === 0) {\n            this.changeState(parentElement, 'uncheck', null);\n        }\n        else if (!parentElement) {\n            if (!doCheck && this.checkedNodes.indexOf(parent) === -1 && this.parentNodeCheck.indexOf(parent) !== -1) {\n                this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(parent), 1);\n            }\n            else if (doCheck && this.checkedNodes.indexOf(parent) === -1 && this.parentNodeCheck.indexOf(parent) === -1) {\n                this.parentNodeCheck.push(parent);\n            }\n            else if (!doCheck && this.checkedNodes.indexOf(parent) !== -1 && this.parentNodeCheck.indexOf(parent) === -1\n                && count !== 0) {\n                this.parentNodeCheck.push(parent);\n            }\n            this.updateIndeterminate(parent, doCheck);\n            if (this.checkedNodes.indexOf(parent) !== -1 && !doCheck) {\n                this.checkedNodes.splice(this.checkedNodes.indexOf(parent), 1);\n            }\n        }\n    };\n    /**\n     * updates the parent and child  check state while changing the checkedNodes via setmodel for hierarchical data\n     */\n    TreeView.prototype.updateChildIndeterminate = function (subChild, parent, node, doCheck, child) {\n        var count = 0;\n        for (var j = 0; j < subChild.length; j++) {\n            var subId = subChild[j][this.fields.id] ? subChild[j][this.fields.id].toString() : '';\n            if (this.checkedNodes.indexOf(subId) !== -1) {\n                count++;\n            }\n            var parentElement = this.element.querySelector('[data-uid=\"' + parent + '\"]');\n            var indeterminate = parentElement ? select('.' + INDETERMINATE, parentElement) : null;\n            var check = parentElement ? select('.' + CHECK, parentElement) : null;\n            var element = this.element.querySelector('[data-uid=\"' + subId + '\"]');\n            var childElementCheck = element ? select('.' + CHECK, element) : null;\n            if (this.checkedNodes.indexOf(node) !== -1 && parentElement && (subId === node) && this.autoCheck) {\n                this.changeState(parentElement, 'indeterminate', null);\n            }\n            else if (this.checkedNodes.indexOf(node) === -1 && parentElement && !element && (subId === node) && !doCheck) {\n                if (this.autoCheck) {\n                    this.changeState(parentElement, 'uncheck', null);\n                }\n                else {\n                    if (count !== 0) {\n                        this.changeState(parentElement, 'indeterminate', null);\n                    }\n                    else {\n                        this.changeState(parentElement, 'uncheck', null);\n                    }\n                }\n            }\n            else if (this.checkedNodes.indexOf(node) === -1 && element && (subId === node) && !doCheck) {\n                this.changeState(element, 'uncheck', null);\n            }\n            else if (this.checkedNodes.indexOf(node) === -1 && indeterminate && (subId === node) && this.autoCheck && count === 0\n                && !doCheck) {\n                indeterminate.classList.remove(INDETERMINATE);\n            }\n            else if (this.checkedNodes.indexOf(node) === -1 && !element && check && (subId === node) && count === 0) {\n                this.changeState(parentElement, 'uncheck', null);\n            }\n            else if (this.checkedNodes.indexOf(subId) === -1 && element && childElementCheck && count === 0) {\n                this.changeState(element, 'uncheck', null);\n            }\n            else if (!element && !parentElement && (subId === node) || (this.parentNodeCheck.indexOf(parent) !== -1) && this.autoCheck) {\n                var childElement = this.element.querySelector('[data-uid=\"' + child + '\"]');\n                if (doCheck && count !== 0) {\n                    this.changeState(childElement, 'indeterminate', null);\n                }\n                else if (doCheck && count === subChild.length && this.checkedNodes.indexOf(parent) === -1) {\n                    this.checkedNodes.push(parent);\n                }\n                else if (!doCheck && count === 0 && this.parentNodeCheck.indexOf(parent) !== -1) {\n                    this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(parent));\n                }\n                if (this.parentNodeCheck.indexOf(parent) === -1) {\n                    this.parentNodeCheck.push(parent);\n                }\n            }\n            var innerChild = getValue(this.fields.child.toString(), subChild[j]);\n            if (innerChild) {\n                this.updateChildIndeterminate(innerChild, subId, node, doCheck, child);\n            }\n        }\n    };\n    TreeView.prototype.changeState = function (wrapper, state, e, isPrevent, isAdd, doCheck) {\n        var _this = this;\n        var eventArgs;\n        var currLi = closest(wrapper, '.' + LISTITEM);\n        if (wrapper === currLi) {\n            wrapper = select('.' + CHECKBOXWRAP, currLi);\n        }\n        if (!isPrevent) {\n            this.checkActionNodes = [];\n            eventArgs = this.getCheckEvent(currLi, state, e);\n            this.trigger('nodeChecking', eventArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    _this.nodeCheckAction(wrapper, state, currLi, observedArgs, e, isPrevent, isAdd, doCheck);\n                }\n            });\n        }\n        else {\n            this.nodeCheckAction(wrapper, state, currLi, eventArgs, e, isPrevent, isAdd, doCheck);\n        }\n    };\n    TreeView.prototype.nodeCheckAction = function (wrapper, state, currLi, eventArgs, e, isPrevent, isAdd, doCheck) {\n        var ariaState;\n        var frameSpan = wrapper.getElementsByClassName(CHECKBOXFRAME)[0];\n        if (state === 'check' && !frameSpan.classList.contains(CHECK)) {\n            frameSpan.classList.remove(INDETERMINATE);\n            frameSpan.classList.add(CHECK);\n            this.addCheck(currLi);\n            ariaState = 'true';\n        }\n        else if (state === 'uncheck' && (frameSpan.classList.contains(CHECK) || frameSpan.classList.contains(INDETERMINATE))) {\n            removeClass([frameSpan], [CHECK, INDETERMINATE]);\n            this.removeCheck(currLi);\n            ariaState = 'false';\n        }\n        else if (state === 'indeterminate' && this.autoCheck) {\n            frameSpan.classList.remove(CHECK);\n            frameSpan.classList.add(INDETERMINATE);\n            this.removeCheck(currLi);\n            ariaState = 'mixed';\n        }\n        ariaState = state === 'check' ? 'true' : state === 'uncheck' ? 'false' : ariaState;\n        if (!isNOU(ariaState)) {\n            wrapper.setAttribute('aria-checked', ariaState);\n        }\n        if (isAdd) {\n            var data = [].concat([], this.checkActionNodes);\n            eventArgs = this.getCheckEvent(currLi, state, e);\n            if (isUndefined(isPrevent)) {\n                eventArgs.data = data;\n            }\n        }\n        if (doCheck !== undefined) {\n            this.ensureStateChange(currLi, doCheck);\n        }\n        if (!isPrevent) {\n            if (!isNOU(ariaState)) {\n                wrapper.setAttribute('aria-checked', ariaState);\n                eventArgs.data[0].checked = ariaState;\n                this.trigger('nodeChecked', eventArgs);\n                this.checkActionNodes = [];\n            }\n        }\n    };\n    TreeView.prototype.addCheck = function (liEle) {\n        var id = liEle.getAttribute('data-uid');\n        if (!isNOU(id) && this.checkedNodes.indexOf(id) === -1) {\n            this.checkedNodes.push(id);\n        }\n    };\n    TreeView.prototype.removeCheck = function (liEle) {\n        var index = this.checkedNodes.indexOf(liEle.getAttribute('data-uid'));\n        if (index > -1) {\n            this.checkedNodes.splice(index, 1);\n        }\n    };\n    TreeView.prototype.getCheckEvent = function (currLi, action, e) {\n        this.checkActionNodes.push(this.getNodeData(currLi));\n        var nodeData = this.checkActionNodes;\n        return { action: action, cancel: false, isInteracted: isNOU(e) ? false : true, node: currLi, data: nodeData };\n    };\n    TreeView.prototype.finalize = function () {\n        var firstUl = select('.' + PARENTITEM, this.element);\n        if (!isNullOrUndefined(firstUl)) {\n            firstUl.setAttribute('role', treeAriaAttr.treeRole);\n            this.setMultiSelect(this.allowMultiSelection);\n            var firstNode = select('.' + LISTITEM, this.element);\n            if (firstNode) {\n                addClass([firstNode], FOCUS);\n                this.updateIdAttr(null, firstNode);\n            }\n            if (this.allowTextWrap) {\n                this.updateWrap();\n            }\n            this.renderReactTemplates();\n            this.hasPid = this.rootData[0] ? this.rootData[0].hasOwnProperty(this.fields.parentID) : false;\n            this.doExpandAction();\n        }\n    };\n    TreeView.prototype.setTextWrap = function () {\n        (this.allowTextWrap ? addClass : removeClass)([this.element], LISTWRAP);\n        if (Browser.isIE) {\n            (this.allowTextWrap ? addClass : removeClass)([this.element], IELISTWRAP);\n        }\n    };\n    TreeView.prototype.updateWrap = function (ulEle) {\n        if (!this.fullRowSelect) {\n            return;\n        }\n        var liEle = ulEle ? selectAll('.' + LISTITEM, ulEle) : this.liList;\n        var length = liEle.length;\n        for (var i = 0; i < length; i++) {\n            this.calculateWrap(liEle[i]);\n        }\n    };\n    TreeView.prototype.calculateWrap = function (liEle) {\n        var element = select('.' + FULLROW, liEle);\n        if (element && element.nextElementSibling) {\n            element.style.height = this.allowTextWrap ? element.nextElementSibling.offsetHeight + 'px' : '';\n        }\n    };\n    TreeView.prototype.doExpandAction = function () {\n        var eUids = this.expandedNodes;\n        if (this.isInitalExpand && eUids.length > 0) {\n            this.setProperties({ expandedNodes: [] }, true);\n            /* eslint-disable */\n            if (this.fields.dataSource instanceof DataManager) {\n                this.expandGivenNodes(eUids);\n            }\n            else {\n                for (var i = 0; i < eUids.length; i++) {\n                    var eNode = select('[data-uid=\"' + eUids[i] + '\"]', this.element);\n                    if (!isNOU(eNode)) {\n                        var icon = select('.' + EXPANDABLE, select('.' + TEXTWRAP, eNode));\n                        if (!isNOU(icon)) {\n                            this.expandAction(eNode, icon, null);\n                        }\n                    }\n                    else {\n                        if (eUids[i] && this.expandChildren.indexOf(eUids[i]) === -1) {\n                            this.expandChildren.push(eUids[i].toString());\n                        }\n                        continue;\n                    }\n                }\n                this.afterFinalized();\n            }\n        }\n        else {\n            this.afterFinalized();\n        }\n    };\n    TreeView.prototype.expandGivenNodes = function (arr) {\n        var proxy = this;\n        this.expandCallback(arr[this.index], function () {\n            proxy.index++;\n            if (proxy.index < arr.length) {\n                proxy.expandGivenNodes(arr);\n            }\n            else {\n                proxy.afterFinalized();\n            }\n        });\n    };\n    TreeView.prototype.expandCallback = function (eUid, callback) {\n        var eNode = select('[data-uid=\"' + eUid + '\"]', this.element);\n        if (!isNOU(eNode)) {\n            var icon = select('.' + EXPANDABLE, select('.' + TEXTWRAP, eNode));\n            if (!isNOU(icon)) {\n                this.expandAction(eNode, icon, null, false, callback);\n            }\n            else {\n                callback();\n            }\n        }\n        else {\n            callback();\n        }\n    };\n    TreeView.prototype.afterFinalized = function () {\n        this.doSelectionAction();\n        this.updateCheckedProp();\n        this.isAnimate = true;\n        this.isInitalExpand = false;\n        if (!this.isLoaded || this.isFieldChange) {\n            var eventArgs = { data: this.treeData };\n            this.trigger('dataBound', eventArgs);\n        }\n        this.isLoaded = true;\n    };\n    TreeView.prototype.doSelectionAction = function () {\n        var sNodes = selectAll('.' + SELECTED, this.element);\n        var sUids = this.selectedNodes;\n        if (sUids.length > 0) {\n            this.setProperties({ selectedNodes: [] }, true);\n            for (var i = 0; i < sUids.length; i++) {\n                var sNode = select('[data-uid=\"' + sUids[i] + '\"]', this.element);\n                if (sNode && !(sNode.classList.contains('e-active'))) {\n                    this.selectNode(sNode, null, true);\n                }\n                else {\n                    this.selectedNodes.push(sUids[i]);\n                }\n                if (!this.allowMultiSelection) {\n                    break;\n                }\n            }\n        }\n        else {\n            this.selectGivenNodes(sNodes);\n        }\n        removeClass(sNodes, SELECTED);\n    };\n    TreeView.prototype.selectGivenNodes = function (sNodes) {\n        for (var i = 0; i < sNodes.length; i++) {\n            if (!sNodes[i].classList.contains('e-disable')) {\n                this.selectNode(sNodes[i], null, true);\n            }\n            if (!this.allowMultiSelection) {\n                break;\n            }\n        }\n    };\n    TreeView.prototype.clickHandler = function (event) {\n        var target = event.originalEvent.target;\n        EventHandler.remove(this.element, 'contextmenu', this.preventContextMenu);\n        if (!target || this.dragStartAction) {\n            return;\n        }\n        else {\n            var classList = target.classList;\n            var li = closest(target, '.' + LISTITEM);\n            if (!li) {\n                return;\n            }\n            else if (event.originalEvent.which !== 3) {\n                var rippleElement = select('.' + RIPPLEELMENT, li);\n                var rippleIcons = select('.' + ICON, li);\n                this.removeHover();\n                this.setFocusElement(li);\n                if (this.showCheckBox && !li.classList.contains('e-disable')) {\n                    var checkWrapper = closest(target, '.' + CHECKBOXWRAP);\n                    if (!isNOU(checkWrapper)) {\n                        var checkElement = select('.' + CHECKBOXFRAME, checkWrapper);\n                        this.validateCheckNode(checkWrapper, checkElement.classList.contains(CHECK), li, event.originalEvent);\n                        this.triggerClickEvent(event.originalEvent, li);\n                        return;\n                    }\n                }\n                if (classList.contains(EXPANDABLE)) {\n                    this.expandAction(li, target, event);\n                }\n                else if (classList.contains(COLLAPSIBLE)) {\n                    this.collapseNode(li, target, event);\n                }\n                else if (rippleElement && rippleIcons) {\n                    if (rippleIcons.classList.contains(RIPPLE) && rippleIcons.classList.contains(EXPANDABLE)) {\n                        this.expandAction(li, rippleIcons, event);\n                    }\n                    else if (rippleIcons.classList.contains(RIPPLE) && rippleIcons.classList.contains(COLLAPSIBLE)) {\n                        this.collapseNode(li, rippleIcons, event);\n                    }\n                    else if (!classList.contains(PARENTITEM) && !classList.contains(LISTITEM)) {\n                        this.toggleSelect(li, event.originalEvent, false);\n                    }\n                }\n                else {\n                    if (!classList.contains(PARENTITEM) && !classList.contains(LISTITEM)) {\n                        this.toggleSelect(li, event.originalEvent, false);\n                    }\n                }\n            }\n            this.triggerClickEvent(event.originalEvent, li);\n        }\n    };\n    TreeView.prototype.nodeCheckedEvent = function (wrapper, isCheck, e) {\n        var currLi = closest(wrapper, '.' + LISTITEM);\n        var eventArgs = this.getCheckEvent(wrapper, isCheck ? 'uncheck' : 'check', e);\n        eventArgs.data = eventArgs.data.splice(0, eventArgs.data.length - 1);\n        this.trigger('nodeChecked', eventArgs);\n    };\n    TreeView.prototype.triggerClickEvent = function (e, li) {\n        var eventArgs = {\n            event: e,\n            node: li,\n        };\n        this.trigger('nodeClicked', eventArgs);\n    };\n    TreeView.prototype.expandNode = function (currLi, icon, loaded) {\n        var _this = this;\n        this.renderReactTemplates();\n        if (icon.classList.contains(LOAD)) {\n            this.hideSpinner(icon);\n        }\n        if (!this.initialRender) {\n            icon.classList.add('interaction');\n        }\n        if (loaded !== true || (loaded === true && currLi.classList.contains('e-expanded'))) {\n            if (this.preventExpand !== true) {\n                removeClass([icon], EXPANDABLE);\n                addClass([icon], COLLAPSIBLE);\n                var start_1 = 0;\n                var end_1 = 0;\n                var proxy_1 = this;\n                var ul_1 = select('.' + PARENTITEM, currLi);\n                var liEle_1 = currLi;\n                this.setHeight(liEle_1, ul_1);\n                var activeElement_1 = select('.' + LISTITEM + '.' + ACTIVE, currLi);\n                if (this.isAnimate && !this.isRefreshed) {\n                    this.aniObj.animate(ul_1, {\n                        name: this.animation.expand.effect,\n                        duration: this.animation.expand.duration,\n                        timingFunction: this.animation.expand.easing,\n                        begin: function (args) {\n                            liEle_1.style.overflow = 'hidden';\n                            if (!isNullOrUndefined(activeElement_1) && activeElement_1 instanceof HTMLElement) {\n                                activeElement_1.classList.add(ITEM_ANIMATION_ACTIVE);\n                            }\n                            start_1 = liEle_1.offsetHeight;\n                            end_1 = select('.' + TEXTWRAP, currLi).offsetHeight;\n                        },\n                        progress: function (args) {\n                            args.element.style.display = 'block';\n                            proxy_1.animateHeight(args, start_1, end_1);\n                        },\n                        end: function (args) {\n                            args.element.style.display = 'block';\n                            if (!isNullOrUndefined(activeElement_1) && activeElement_1 instanceof HTMLElement) {\n                                activeElement_1.classList.remove(ITEM_ANIMATION_ACTIVE);\n                            }\n                            _this.expandedNode(liEle_1, ul_1, icon);\n                        }\n                    });\n                }\n                else {\n                    this.expandedNode(liEle_1, ul_1, icon);\n                }\n            }\n        }\n        else {\n            var ul = select('.' + PARENTITEM, currLi);\n            ul.style.display = 'none';\n            if (this.fields.dataSource instanceof DataManager === true) {\n                this.preventExpand = false;\n            }\n        }\n        if (this.initialRender) {\n            icon.classList.add('interaction');\n        }\n    };\n    TreeView.prototype.expandedNode = function (currLi, ul, icon) {\n        ul.style.display = 'block';\n        currLi.style.display = 'block';\n        currLi.style.overflow = '';\n        currLi.style.height = '';\n        removeClass([icon], PROCESS);\n        this.addExpand(currLi);\n        if (this.allowTextWrap && this.isLoaded && this.isFirstRender) {\n            this.updateWrap(currLi);\n            this.isFirstRender = false;\n        }\n        if (this.isLoaded && this.expandArgs && !this.isRefreshed) {\n            this.expandArgs = this.getExpandEvent(currLi, null);\n            this.trigger('nodeExpanded', this.expandArgs);\n        }\n    };\n    TreeView.prototype.addExpand = function (liEle) {\n        liEle.setAttribute('aria-expanded', 'true');\n        removeClass([liEle], NODECOLLAPSED);\n        var id = liEle.getAttribute('data-uid');\n        if (!isNOU(id) && this.expandedNodes.indexOf(id) === -1) {\n            this.expandedNodes.push(id);\n        }\n    };\n    TreeView.prototype.collapseNode = function (currLi, icon, e) {\n        var _this = this;\n        if (icon.classList.contains(PROCESS)) {\n            return;\n        }\n        else {\n            addClass([icon], PROCESS);\n        }\n        var colArgs;\n        if (this.isLoaded) {\n            colArgs = this.getExpandEvent(currLi, e);\n            this.trigger('nodeCollapsing', colArgs, function (observedArgs) {\n                if (observedArgs.cancel) {\n                    removeClass([icon], PROCESS);\n                }\n                else {\n                    _this.nodeCollapseAction(currLi, icon, observedArgs);\n                }\n            });\n        }\n        else {\n            this.nodeCollapseAction(currLi, icon, colArgs);\n        }\n    };\n    TreeView.prototype.nodeCollapseAction = function (currLi, icon, colArgs) {\n        var _this = this;\n        removeClass([icon], COLLAPSIBLE);\n        addClass([icon], EXPANDABLE);\n        var start = 0;\n        var end = 0;\n        var proxy = this;\n        var ul = select('.' + PARENTITEM, currLi);\n        var liEle = currLi;\n        var activeElement = select('.' + LISTITEM + '.' + ACTIVE, currLi);\n        if (this.isAnimate) {\n            this.aniObj.animate(ul, {\n                name: this.animation.collapse.effect,\n                duration: this.animation.collapse.duration,\n                timingFunction: this.animation.collapse.easing,\n                begin: function (args) {\n                    liEle.style.overflow = 'hidden';\n                    if (!isNullOrUndefined(activeElement) && activeElement instanceof HTMLElement) {\n                        activeElement.classList.add(ITEM_ANIMATION_ACTIVE);\n                    }\n                    start = select('.' + TEXTWRAP, currLi).offsetHeight;\n                    end = liEle.offsetHeight;\n                },\n                progress: function (args) {\n                    proxy.animateHeight(args, start, end);\n                },\n                end: function (args) {\n                    args.element.style.display = 'none';\n                    if (!isNullOrUndefined(activeElement) && activeElement instanceof HTMLElement) {\n                        activeElement.classList.remove(ITEM_ANIMATION_ACTIVE);\n                    }\n                    _this.collapsedNode(liEle, ul, icon, colArgs);\n                }\n            });\n        }\n        else {\n            this.collapsedNode(liEle, ul, icon, colArgs);\n        }\n    };\n    TreeView.prototype.collapsedNode = function (liEle, ul, icon, colArgs) {\n        ul.style.display = 'none';\n        liEle.style.overflow = '';\n        liEle.style.height = '';\n        removeClass([icon], PROCESS);\n        this.removeExpand(liEle);\n        if (this.isLoaded) {\n            colArgs = this.getExpandEvent(liEle, null);\n            this.trigger('nodeCollapsed', colArgs);\n        }\n    };\n    TreeView.prototype.removeExpand = function (liEle, toRemove) {\n        if (toRemove) {\n            liEle.removeAttribute('aria-expanded');\n        }\n        else {\n            this.disableExpandAttr(liEle);\n        }\n        var index = this.expandedNodes.indexOf(liEle.getAttribute('data-uid'));\n        if (index > -1) {\n            this.expandedNodes.splice(index, 1);\n        }\n    };\n    TreeView.prototype.disableExpandAttr = function (liEle) {\n        liEle.setAttribute('aria-expanded', 'false');\n        addClass([liEle], NODECOLLAPSED);\n    };\n    TreeView.prototype.setHeight = function (currLi, ul) {\n        ul.style.display = 'block';\n        ul.style.visibility = 'hidden';\n        currLi.style.height = currLi.offsetHeight + 'px';\n        ul.style.display = 'none';\n        ul.style.visibility = '';\n    };\n    TreeView.prototype.animateHeight = function (args, start, end) {\n        var remaining = (args.duration - args.timeStamp) / args.duration;\n        var currentHeight = (end - start) * remaining + start;\n        args.element.parentElement.style.height = currentHeight + 'px';\n    };\n    TreeView.prototype.renderChildNodes = function (parentLi, expandChild, callback, loaded) {\n        var _this = this;\n        var eicon = select('div.' + ICON, parentLi);\n        if (isNOU(eicon)) {\n            return;\n        }\n        this.showSpinner(eicon);\n        var childItems;\n        /* eslint-disable */\n        if (this.fields.dataSource instanceof DataManager) {\n            var level = this.parents(parentLi, '.' + PARENTITEM).length;\n            var mapper_2 = this.getChildFields(this.fields, level, 1);\n            if (isNOU(mapper_2) || isNOU(mapper_2.dataSource)) {\n                detach(eicon);\n                this.removeExpand(parentLi, true);\n                return;\n            }\n            this.treeList.push('false');\n            if (this.fields.dataSource instanceof DataManager && this.isOffline) {\n                this.treeList.pop();\n                childItems = this.getChildNodes(this.treeData, parentLi.getAttribute('data-uid'));\n                this.loadChild(childItems, mapper_2, eicon, parentLi, expandChild, callback, loaded);\n            }\n            else {\n                mapper_2.dataSource.executeQuery(this.getQuery(mapper_2, parentLi.getAttribute('data-uid'))).then(function (e) {\n                    _this.treeList.pop();\n                    childItems = e.result;\n                    if (_this.dataType === 1) {\n                        _this.dataType = 2;\n                    }\n                    _this.loadChild(childItems, mapper_2, eicon, parentLi, expandChild, callback, loaded);\n                }).catch(function (e) {\n                    _this.trigger('actionFailure', { error: e });\n                });\n            }\n        }\n        else {\n            childItems = this.getChildNodes(this.treeData, parentLi.getAttribute('data-uid'));\n            this.currentLoadData = this.getSortedData(childItems);\n            if (isNOU(childItems) || childItems.length === 0) {\n                detach(eicon);\n                this.removeExpand(parentLi, true);\n                return;\n            }\n            else {\n                this.listBaseOption.ariaAttributes.level = parseFloat(parentLi.getAttribute('aria-level')) + 1;\n                parentLi.appendChild(ListBase.createList(this.createElement, this.currentLoadData, this.listBaseOption));\n                this.expandNode(parentLi, eicon, loaded);\n                this.setSelectionForChildNodes(childItems);\n                this.ensureCheckNode(parentLi);\n                this.finalizeNode(parentLi);\n                this.disableTreeNodes(childItems);\n                this.renderSubChild(parentLi, expandChild, loaded);\n            }\n        }\n    };\n    TreeView.prototype.loadChild = function (childItems, mapper, eicon, parentLi, expandChild, callback, loaded) {\n        this.currentLoadData = childItems;\n        if (isNOU(childItems) || childItems.length === 0) {\n            detach(eicon);\n            this.removeExpand(parentLi, true);\n        }\n        else {\n            this.updateListProp(mapper);\n            if (this.fields.dataSource instanceof DataManager && !this.isOffline) {\n                var id = parentLi.getAttribute('data-uid');\n                var nodeData = this.getNodeObject(id);\n                setValue('child', childItems, nodeData);\n            }\n            this.listBaseOption.ariaAttributes.level = parseFloat(parentLi.getAttribute('aria-level')) + 1;\n            parentLi.appendChild(ListBase.createList(this.createElement, childItems, this.listBaseOption));\n            this.expandNode(parentLi, eicon, loaded);\n            this.setSelectionForChildNodes(childItems);\n            this.ensureCheckNode(parentLi);\n            this.finalizeNode(parentLi);\n            this.disableTreeNodes(childItems);\n            this.renderSubChild(parentLi, expandChild, loaded);\n        }\n        if (callback) {\n            callback();\n        }\n        if (this.treeList.length === 0 && !this.isLoaded) {\n            this.finalize();\n        }\n    };\n    TreeView.prototype.disableTreeNodes = function (childItems) {\n        var i = 0;\n        while (i < childItems.length) {\n            var id = childItems[i][this.fields.id] ? childItems[i][this.fields.id].toString() : null;\n            if (this.disableNode !== undefined && this.disableNode.indexOf(id) !== -1) {\n                this.doDisableAction([id]);\n            }\n            i++;\n        }\n    };\n    /**\n     * Sets the child Item in selectedState while rendering the child node\n     */\n    TreeView.prototype.setSelectionForChildNodes = function (nodes) {\n        var i;\n        for (i = 0; i < nodes.length; i++) {\n            var id = nodes[i][this.fields.id] ? nodes[i][this.fields.id].toString() : null;\n            if (this.selectedNodes !== undefined && this.selectedNodes.indexOf(id) !== -1) {\n                this.doSelectionAction();\n            }\n        }\n    };\n    TreeView.prototype.ensureCheckNode = function (element) {\n        if (this.showCheckBox) {\n            this.ele = (this.checkedElement) ? this.checkedElement.indexOf(element.getAttribute('data-uid')) : null;\n            if (this.autoCheck) {\n                this.ensureChildCheckState(element);\n                this.ensureParentCheckState(element);\n            }\n        }\n        this.currentLoadData = null;\n    };\n    TreeView.prototype.getFields = function (mapper, nodeLevel, dataLevel) {\n        if (nodeLevel === dataLevel) {\n            return mapper;\n        }\n        else {\n            return this.getFields(this.getChildMapper(mapper), nodeLevel, dataLevel + 1);\n        }\n    };\n    TreeView.prototype.getChildFields = function (mapper, nodeLevel, dataLevel) {\n        var childData;\n        if (nodeLevel === dataLevel) {\n            return this.getChildMapper(mapper);\n        }\n        else {\n            return this.getChildFields(this.getChildMapper(mapper), nodeLevel, dataLevel + 1);\n        }\n    };\n    TreeView.prototype.getChildMapper = function (mapper) {\n        return (typeof mapper.child === 'string' || isNOU(mapper.child)) ? mapper : mapper.child;\n    };\n    TreeView.prototype.getChildNodes = function (obj, parentId, isRoot) {\n        if (isRoot === void 0) { isRoot = false; }\n        var childNodes;\n        if (isNOU(obj)) {\n            return childNodes;\n        }\n        else if (this.dataType === 1) {\n            return this.getChildGroup(this.groupedData, parentId, isRoot);\n        }\n        else {\n            if (typeof this.fields.child === 'string') {\n                for (var i = 0, objlen = obj.length; i < objlen; i++) {\n                    var dataId = getValue(this.fields.id, obj[i]);\n                    if (dataId && dataId.toString() === parentId) {\n                        return getValue(this.fields.child, obj[i]);\n                    }\n                    else if (!isNOU(getValue(this.fields.child, obj[i]))) {\n                        childNodes = this.getChildNodes(getValue(this.fields.child, obj[i]), parentId);\n                        if (childNodes !== undefined) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        return childNodes;\n    };\n    TreeView.prototype.getChildGroup = function (data, parentId, isRoot) {\n        var childNodes;\n        if (isNOU(data)) {\n            return childNodes;\n        }\n        for (var i = 0, objlen = data.length; i < objlen; i++) {\n            if (!isNOU(data[i][0]) && !isNOU(getValue(this.fields.parentID, data[i][0]))) {\n                if (getValue(this.fields.parentID, data[i][0]).toString() === parentId) {\n                    return data[i];\n                }\n            }\n            else if (isRoot) {\n                return data[i];\n            }\n            else {\n                return [];\n            }\n        }\n        return childNodes;\n    };\n    TreeView.prototype.renderSubChild = function (element, expandChild, loaded) {\n        if (expandChild) {\n            var cIcons = selectAll('.' + EXPANDABLE, element);\n            for (var i = 0, len = cIcons.length; i < len; i++) {\n                var icon = cIcons[i];\n                if (element.querySelector('.e-icons') !== cIcons[i]) {\n                    var curLi = closest(icon, '.' + LISTITEM);\n                    this.expandArgs = this.getExpandEvent(curLi, null);\n                    if (loaded !== true) {\n                        this.trigger('nodeExpanding', this.expandArgs);\n                    }\n                    this.renderChildNodes(curLi, expandChild, null, loaded);\n                }\n            }\n        }\n    };\n    TreeView.prototype.toggleSelect = function (li, e, multiSelect) {\n        if (!li.classList.contains('e-disable')) {\n            if (this.allowMultiSelection && ((e && e.ctrlKey) || multiSelect) && this.isActive(li)) {\n                this.unselectNode(li, e);\n            }\n            else {\n                this.selectNode(li, e, multiSelect);\n            }\n        }\n    };\n    TreeView.prototype.isActive = function (li) {\n        return li.classList.contains(ACTIVE) ? true : false;\n    };\n    TreeView.prototype.selectNode = function (li, e, multiSelect) {\n        var _this = this;\n        if (isNOU(li) || (!this.allowMultiSelection && this.isActive(li) && !isNOU(e))) {\n            this.setFocusElement(li);\n            return;\n        }\n        var eventArgs;\n        if (this.isLoaded) {\n            eventArgs = this.getSelectEvent(li, 'select', e);\n            this.trigger('nodeSelecting', eventArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    _this.nodeSelectAction(li, e, observedArgs, multiSelect);\n                }\n            });\n        }\n        else {\n            this.nodeSelectAction(li, e, eventArgs, multiSelect);\n        }\n    };\n    TreeView.prototype.nodeSelectAction = function (li, e, eventArgs, multiSelect) {\n        if (!this.allowMultiSelection || (!multiSelect && (!e || (e && !e.ctrlKey)))) {\n            this.removeSelectAll();\n        }\n        if (this.allowMultiSelection && e && e.shiftKey) {\n            if (!this.startNode) {\n                this.startNode = li;\n            }\n            var startIndex = this.liList.indexOf(this.startNode);\n            var endIndex = this.liList.indexOf(li);\n            if (startIndex > endIndex) {\n                var temp = startIndex;\n                startIndex = endIndex;\n                endIndex = temp;\n            }\n            for (var i = startIndex; i <= endIndex; i++) {\n                var currNode = this.liList[i];\n                if (isVisible(currNode) && !currNode.classList.contains('e-disable')) {\n                    this.addSelect(currNode);\n                }\n            }\n        }\n        else {\n            this.startNode = li;\n            this.addSelect(li);\n        }\n        this.setFocusElement(li);\n        if (this.isLoaded) {\n            eventArgs.nodeData = this.getNodeData(li);\n            this.trigger('nodeSelected', eventArgs);\n        }\n    };\n    TreeView.prototype.unselectNode = function (li, e) {\n        var _this = this;\n        var eventArgs;\n        if (this.isLoaded) {\n            eventArgs = this.getSelectEvent(li, 'un-select', e);\n            this.trigger('nodeSelecting', eventArgs, function (observedArgs) {\n                if (!observedArgs.cancel) {\n                    _this.nodeUnselectAction(li, observedArgs);\n                }\n            });\n        }\n        else {\n            this.nodeUnselectAction(li, eventArgs);\n        }\n    };\n    TreeView.prototype.nodeUnselectAction = function (li, eventArgs) {\n        this.removeSelect(li);\n        this.setFocusElement(li);\n        if (this.isLoaded) {\n            eventArgs.nodeData = this.getNodeData(li);\n            this.trigger('nodeSelected', eventArgs);\n        }\n    };\n    TreeView.prototype.setFocusElement = function (li) {\n        if (!isNOU(li)) {\n            var focusedNode = this.getFocusedNode();\n            if (focusedNode) {\n                removeClass([focusedNode], FOCUS);\n            }\n            addClass([li], FOCUS);\n            this.updateIdAttr(focusedNode, li);\n        }\n    };\n    TreeView.prototype.addSelect = function (liEle) {\n        liEle.setAttribute('aria-selected', 'true');\n        addClass([liEle], ACTIVE);\n        var id = liEle.getAttribute('data-uid');\n        if (!isNOU(id) && this.selectedNodes.indexOf(id) === -1) {\n            this.selectedNodes.push(id);\n        }\n    };\n    TreeView.prototype.removeSelect = function (liEle) {\n        if (this.allowMultiSelection) {\n            liEle.setAttribute('aria-selected', 'false');\n        }\n        else {\n            liEle.removeAttribute('aria-selected');\n        }\n        removeClass([liEle], ACTIVE);\n        var index = this.selectedNodes.indexOf(liEle.getAttribute('data-uid'));\n        if (index > -1) {\n            this.selectedNodes.splice(index, 1);\n        }\n    };\n    TreeView.prototype.removeSelectAll = function () {\n        var selectedLI = this.element.querySelectorAll('.' + ACTIVE);\n        for (var _i = 0, selectedLI_1 = selectedLI; _i < selectedLI_1.length; _i++) {\n            var ele = selectedLI_1[_i];\n            if (this.allowMultiSelection) {\n                ele.setAttribute('aria-selected', 'false');\n            }\n            else {\n                ele.removeAttribute('aria-selected');\n            }\n        }\n        removeClass(selectedLI, ACTIVE);\n        this.setProperties({ selectedNodes: [] }, true);\n    };\n    TreeView.prototype.getSelectEvent = function (currLi, action, e) {\n        var nodeData = this.getNodeData(currLi);\n        return { action: action, cancel: false, isInteracted: isNOU(e) ? false : true, node: currLi, nodeData: nodeData };\n    };\n    TreeView.prototype.setExpandOnType = function () {\n        this.expandOnType = (this.expandOn === 'Auto') ? (Browser.isDevice ? 'Click' : 'DblClick') : this.expandOn;\n    };\n    TreeView.prototype.expandHandler = function (e) {\n        var target = e.originalEvent.target;\n        if (!target || target.classList.contains(INPUT) || target.classList.contains(ROOT) ||\n            target.classList.contains(PARENTITEM) || target.classList.contains(LISTITEM) ||\n            target.classList.contains(ICON) || this.showCheckBox && closest(target, '.' + CHECKBOXWRAP)) {\n            return;\n        }\n        else {\n            this.expandCollapseAction(closest(target, '.' + LISTITEM), e);\n        }\n    };\n    TreeView.prototype.expandCollapseAction = function (currLi, e) {\n        var icon = select('div.' + ICON, currLi);\n        if (!icon || icon.classList.contains(PROCESS)) {\n            return;\n        }\n        else {\n            var classList = icon.classList;\n            if (classList.contains(EXPANDABLE)) {\n                this.expandAction(currLi, icon, e);\n            }\n            else if (classList.contains(COLLAPSIBLE)) {\n                this.collapseNode(currLi, icon, e);\n            }\n        }\n    };\n    TreeView.prototype.expandAction = function (currLi, icon, e, expandChild, callback) {\n        var _this = this;\n        if (icon.classList.contains(PROCESS)) {\n            return;\n        }\n        else {\n            addClass([icon], PROCESS);\n        }\n        if (this.isLoaded && !this.isRefreshed) {\n            this.expandArgs = this.getExpandEvent(currLi, e);\n            this.trigger('nodeExpanding', this.expandArgs, function (observedArgs) {\n                if (observedArgs.cancel) {\n                    removeClass([icon], PROCESS);\n                }\n                else {\n                    _this.nodeExpandAction(currLi, icon, expandChild, callback);\n                }\n            });\n        }\n        else {\n            this.nodeExpandAction(currLi, icon, expandChild, callback);\n        }\n    };\n    TreeView.prototype.nodeExpandAction = function (currLi, icon, expandChild, callback) {\n        var ul = select('.' + PARENTITEM, currLi);\n        if (ul && ul.nodeName === 'UL') {\n            this.expandNode(currLi, icon);\n        }\n        else {\n            this.isFirstRender = true;\n            this.renderChildNodes(currLi, expandChild, callback);\n            var liEles = selectAll('.' + LISTITEM, currLi);\n            for (var i = 0; i < liEles.length; i++) {\n                var id = this.getId(liEles[i]);\n                if (this.expandChildren.indexOf(id) !== -1 && this.expandChildren !== undefined) {\n                    var icon_1 = select('.' + EXPANDABLE, select('.' + TEXTWRAP, liEles[i]));\n                    if (!isNOU(icon_1)) {\n                        this.expandAction(liEles[i], icon_1, null);\n                    }\n                    this.expandChildren.splice(this.expandChildren.indexOf(id), 1);\n                }\n            }\n        }\n    };\n    TreeView.prototype.keyActionHandler = function (e) {\n        var _this = this;\n        var target = e.target;\n        var focusedNode = this.getFocusedNode();\n        if (target && target.classList.contains(INPUT)) {\n            var inpEle = target;\n            if (e.action === 'enter') {\n                inpEle.blur();\n                this.element.focus();\n                addClass([focusedNode], HOVER);\n            }\n            else if (e.action === 'escape') {\n                inpEle.value = this.oldText;\n                inpEle.blur();\n                this.element.focus();\n                addClass([focusedNode], HOVER);\n            }\n            return;\n        }\n        e.preventDefault();\n        var eventArgs = {\n            cancel: false,\n            event: e,\n            node: focusedNode,\n        };\n        this.trigger('keyPress', eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                switch (e.action) {\n                    case 'space':\n                        if (_this.showCheckBox) {\n                            _this.checkNode(e);\n                        }\n                        break;\n                    case 'moveRight':\n                        _this.openNode(_this.enableRtl ? false : true, e);\n                        break;\n                    case 'moveLeft':\n                        _this.openNode(_this.enableRtl ? true : false, e);\n                        break;\n                    case 'shiftDown':\n                        _this.shiftKeySelect(true, e);\n                        break;\n                    case 'moveDown':\n                    case 'ctrlDown':\n                    case 'csDown':\n                        _this.navigateNode(true);\n                        break;\n                    case 'shiftUp':\n                        _this.shiftKeySelect(false, e);\n                        break;\n                    case 'moveUp':\n                    case 'ctrlUp':\n                    case 'csUp':\n                        _this.navigateNode(false);\n                        break;\n                    case 'home':\n                    case 'shiftHome':\n                    case 'ctrlHome':\n                    case 'csHome':\n                        _this.navigateRootNode(true);\n                        break;\n                    case 'end':\n                    case 'shiftEnd':\n                    case 'ctrlEnd':\n                    case 'csEnd':\n                        _this.navigateRootNode(false);\n                        break;\n                    case 'enter':\n                    case 'ctrlEnter':\n                    case 'shiftEnter':\n                    case 'csEnter':\n                        _this.toggleSelect(focusedNode, e);\n                        break;\n                    case 'f2':\n                        if (_this.allowEditing && !focusedNode.classList.contains('e-disable')) {\n                            _this.createTextbox(focusedNode, e);\n                        }\n                        break;\n                    case 'ctrlA':\n                        if (_this.allowMultiSelection) {\n                            var sNodes = selectAll('.' + LISTITEM + ':not(.' + ACTIVE + ')', _this.element);\n                            _this.selectGivenNodes(sNodes);\n                        }\n                        break;\n                }\n            }\n        });\n    };\n    TreeView.prototype.navigateToFocus = function (isUp) {\n        var focusNode = this.getFocusedNode().querySelector('.' + TEXTWRAP);\n        var pos = focusNode.getBoundingClientRect();\n        var parent = this.getScrollParent(this.element);\n        if (!isNOU(parent)) {\n            var parentPos = parent.getBoundingClientRect();\n            if (pos.bottom > parentPos.bottom) {\n                parent.scrollTop += pos.bottom - parentPos.bottom;\n            }\n            else if (pos.top < parentPos.top) {\n                parent.scrollTop -= parentPos.top - pos.top;\n            }\n        }\n        var isVisible = this.isVisibleInViewport(focusNode);\n        if (!isVisible) {\n            focusNode.scrollIntoView(isUp);\n        }\n    };\n    TreeView.prototype.isVisibleInViewport = function (txtWrap) {\n        var pos = txtWrap.getBoundingClientRect();\n        return (pos.top >= 0 && pos.left >= 0 && pos.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n            pos.right <= (window.innerWidth || document.documentElement.clientWidth));\n    };\n    TreeView.prototype.getScrollParent = function (node) {\n        if (isNOU(node)) {\n            return null;\n        }\n        return (node.scrollHeight > node.clientHeight) ? node : this.getScrollParent(node.parentElement);\n    };\n    TreeView.prototype.shiftKeySelect = function (isTowards, e) {\n        if (this.allowMultiSelection) {\n            var focusedNode = this.getFocusedNode();\n            var nextNode = isTowards ? this.getNextNode(focusedNode) : this.getPrevNode(focusedNode);\n            this.removeHover();\n            this.setFocusElement(nextNode);\n            this.toggleSelect(nextNode, e, false);\n            this.navigateToFocus(!isTowards);\n        }\n        else {\n            this.navigateNode(isTowards);\n        }\n    };\n    TreeView.prototype.checkNode = function (e) {\n        var focusedNode = this.getFocusedNode();\n        var checkWrap = select('.' + CHECKBOXWRAP, focusedNode);\n        var isChecked = select(' .' + CHECKBOXFRAME, checkWrap).classList.contains(CHECK);\n        if (!focusedNode.classList.contains('e-disable')) {\n            if (focusedNode.getElementsByClassName(\"e-checkbox-disabled\").length == 0) {\n                this.validateCheckNode(checkWrap, isChecked, focusedNode, e);\n            }\n        }\n    };\n    TreeView.prototype.validateCheckNode = function (checkWrap, isCheck, li, e) {\n        var _this = this;\n        var currLi = closest(checkWrap, '.' + LISTITEM);\n        this.checkActionNodes = [];\n        var ariaState = !isCheck ? 'true' : 'false';\n        if (!isNOU(ariaState)) {\n            checkWrap.setAttribute('aria-checked', ariaState);\n        }\n        var eventArgs = this.getCheckEvent(currLi, isCheck ? 'uncheck' : 'check', e);\n        this.trigger('nodeChecking', eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                _this.nodeCheckingAction(checkWrap, isCheck, li, observedArgs, e);\n            }\n        });\n    };\n    TreeView.prototype.nodeCheckingAction = function (checkWrap, isCheck, li, eventArgs, e) {\n        if (this.checkedElement.indexOf(li.getAttribute('data-uid')) === -1) {\n            this.checkedElement.push(li.getAttribute('data-uid'));\n            if (this.autoCheck) {\n                var child = this.getChildNodes(this.treeData, li.getAttribute('data-uid'));\n                (child !== null) ? this.allCheckNode(child, this.checkedElement, null, null, false) : child = null;\n            }\n        }\n        this.changeState(checkWrap, isCheck ? 'uncheck' : 'check', e, true);\n        if (this.autoCheck) {\n            this.ensureChildCheckState(li);\n            this.ensureParentCheckState(closest(closest(li, '.' + PARENTITEM), '.' + LISTITEM));\n            var doCheck = void 0;\n            if (eventArgs.action === 'check') {\n                doCheck = true;\n            }\n            else if (eventArgs.action === 'uncheck') {\n                doCheck = false;\n            }\n            this.ensureStateChange(li, doCheck);\n        }\n        this.nodeCheckedEvent(checkWrap, isCheck, e);\n    };\n    /**\n     * Update checkedNodes when UI interaction happens before the child node renders in DOM\n     */\n    TreeView.prototype.ensureStateChange = function (li, doCheck) {\n        var childElement = select('.' + PARENTITEM, li);\n        var parentIndex = li.getAttribute('data-uid');\n        var mapper = this.fields;\n        if (this.dataType === 1 && this.autoCheck) {\n            var resultData = new DataManager(this.treeData).executeLocal(new Query().where(mapper.parentID, 'equal', parentIndex, true));\n            for (var i = 0; i < resultData.length; i++) {\n                var resultId = resultData[i][this.fields.id] ? resultData[i][this.fields.id].toString() : null;\n                var isCheck = resultData[i][this.fields.isChecked] ? resultData[i][this.fields.isChecked].toString() : null;\n                if (this.checkedNodes.indexOf(parentIndex) !== -1 && this.checkedNodes.indexOf(resultId) === -1) {\n                    this.checkedNodes.push(resultId);\n                    var childItems = this.getChildNodes(this.treeData, resultId);\n                    this.getChildItems(childItems, doCheck);\n                    if (this.parentNodeCheck.indexOf(resultId) !== -1) {\n                        this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(resultId), 1);\n                    }\n                }\n                else if (this.checkedNodes.indexOf(parentIndex) === -1 && childElement === null &&\n                    this.checkedNodes.indexOf(resultId) !== -1) {\n                    this.checkedNodes.splice(this.checkedNodes.indexOf(resultId), 1);\n                    if (isCheck === 'true') {\n                        this.updateField(this.treeData, this.fields, resultId, 'isChecked', null);\n                    }\n                    if (this.checkedNodes.indexOf(parentIndex) === -1 && childElement === null ||\n                        this.parentNodeCheck.indexOf(resultId) !== -1) {\n                        var childNodes = this.getChildNodes(this.treeData, resultId);\n                        this.getChildItems(childNodes, doCheck);\n                        if (this.parentNodeCheck.indexOf(resultId) !== -1) {\n                            this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(resultId), 1);\n                        }\n                    }\n                }\n                else {\n                    var childItems = this.getChildNodes(this.treeData, resultId);\n                    this.getChildItems(childItems, doCheck);\n                }\n            }\n        }\n        else if (this.dataType === 1 && !this.autoCheck) {\n            if (!doCheck) {\n                var checkedData = new DataManager(this.treeData).executeLocal(new Query().where(mapper.isChecked, 'equal', true, false));\n                for (var i = 0; i < checkedData.length; i++) {\n                    var id = checkedData[i][this.fields.id] ? checkedData[i][this.fields.id].toString() : null;\n                    if (this.checkedNodes.indexOf(id) !== -1) {\n                        this.checkedNodes.splice(this.checkedNodes.indexOf(id), 1);\n                    }\n                    this.updateField(this.treeData, this.fields, id, 'isChecked', null);\n                }\n                this.checkedNodes = [];\n            }\n            else {\n                for (var i = 0; i < this.treeData.length; i++) {\n                    var checkedId = this.treeData[i][this.fields.id] ? this.treeData[i][this.fields.id].toString() : null;\n                    if (this.checkedNodes.indexOf(checkedId) === -1) {\n                        this.checkedNodes.push(checkedId);\n                    }\n                }\n            }\n        }\n        else {\n            var childItems = this.getChildNodes(this.treeData, parentIndex);\n            if (childItems) {\n                this.childStateChange(childItems, parentIndex, childElement, doCheck);\n            }\n        }\n    };\n    TreeView.prototype.getChildItems = function (childItems, doCheck) {\n        for (var i = 0; i < childItems.length; i++) {\n            var childId = childItems[i][this.fields.id] ? childItems[i][this.fields.id].toString() : null;\n            var childIsCheck = childItems[i][this.fields.isChecked] ? childItems[i][this.fields.isChecked].toString() :\n                null;\n            if (this.checkedNodes.indexOf(childId) !== -1 && !doCheck) {\n                this.checkedNodes.splice(this.checkedNodes.indexOf(childId), 1);\n            }\n            if (this.checkedNodes.indexOf(childId) === -1 && doCheck) {\n                this.checkedNodes.push(childId);\n            }\n            if (childIsCheck === 'true' && !doCheck) {\n                this.updateField(this.treeData, this.fields, childId, 'isChecked', null);\n            }\n            var subChildItems = this.getChildNodes(this.treeData, childId);\n            if (subChildItems.length > 0) {\n                this.getChildItems(subChildItems, doCheck);\n            }\n        }\n    };\n    /**\n     * Update checkedNodes when UI interaction happens before the child node renders in DOM for hierarchical DS\n     */\n    TreeView.prototype.childStateChange = function (childItems, parent, childElement, doCheck) {\n        for (var i = 0; i < childItems.length; i++) {\n            var checkedChild = childItems[i][this.fields.id] ? childItems[i][this.fields.id].toString() : '';\n            var isCheck = childItems[i][this.fields.isChecked] ? childItems[i][this.fields.isChecked].toString() : null;\n            if (this.autoCheck) {\n                if (this.checkedNodes.indexOf(parent) !== -1 && this.checkedNodes.indexOf(checkedChild) === -1) {\n                    this.checkedNodes.push(checkedChild);\n                    if (this.parentNodeCheck.indexOf(checkedChild) !== -1) {\n                        this.parentNodeCheck.splice(this.parentNodeCheck.indexOf(checkedChild), 1);\n                    }\n                }\n                else if (this.checkedNodes.indexOf(parent) === -1 && this.checkedNodes.indexOf(checkedChild) !== -1 && !doCheck) {\n                    this.checkedNodes.splice(this.checkedNodes.indexOf(checkedChild), 1);\n                    if (isCheck === 'true') {\n                        this.updateField(this.treeData, this.fields, checkedChild, 'isChecked', null);\n                    }\n                }\n            }\n            else if (!this.autoCheck) {\n                if (!doCheck) {\n                    if (this.checkedNodes.indexOf(checkedChild) !== -1) {\n                        this.checkedNodes.splice(this.checkedNodes.indexOf(checkedChild), 1);\n                    }\n                    this.updateField(this.treeData, this.fields, checkedChild, 'isChecked', null);\n                    this.checkedNodes = [];\n                }\n                else {\n                    if (this.checkedNodes.indexOf(checkedChild) === -1) {\n                        this.checkedNodes.push(checkedChild);\n                    }\n                }\n            }\n            var subChild = this.getChildNodes([childItems[i]], checkedChild);\n            if (subChild) {\n                this.childStateChange(subChild, parent, childElement, doCheck);\n            }\n        }\n    };\n    //This method can be used to get all child nodes of a parent by passing the children of a parent along with 'validateCheck' set to false\n    TreeView.prototype.allCheckNode = function (child, newCheck, checked, childCheck, validateCheck) {\n        if (child) {\n            for (var length_1 = 0; length_1 < child.length; length_1++) {\n                var childId = getValue(this.fields.id, child[length_1]);\n                var check = this.element.querySelector('[data-uid=\"' + childId + '\"]');\n                //Validates isChecked case while no UI interaction has been performed on the node or it's parent\n                if (validateCheck !== false && this.checkedElement.indexOf(childId.toString()) === -1) {\n                    if (((check === null && !isNOU(child[length_1][this.fields.isChecked]) && newCheck.indexOf(childId.toString()) === -1)\n                        || childCheck === 0 || checked === 2)) {\n                        (child[length_1][this.fields.isChecked] !== false || checked === 2) ? newCheck.push(childId.toString())\n                            : childCheck = null;\n                        childCheck = (child[length_1][this.fields.isChecked] !== false || checked === 2) ? 0 : null;\n                    }\n                }\n                //Pushes child checked node done thro' UI interaction\n                if (newCheck.indexOf(childId.toString()) === -1 && isNOU(checked)) {\n                    newCheck.push(childId.toString());\n                }\n                var hierChildId = getValue(this.fields.child.toString(), child[length_1]);\n                //Gets if any next level children are available for child nodes\n                if (getValue(this.fields.hasChildren, child[length_1]) === true || hierChildId) {\n                    var id = getValue(this.fields.id, child[length_1]);\n                    var childId_1 = void 0;\n                    if (this.dataType === 1) {\n                        childId_1 = this.getChildNodes(this.treeData, id.toString());\n                    }\n                    else {\n                        childId_1 = hierChildId;\n                    }\n                    if (childId_1) {\n                        (isNOU(validateCheck)) ? this.allCheckNode(childId_1, newCheck, checked, childCheck) :\n                            this.allCheckNode(childId_1, newCheck, checked, childCheck, validateCheck);\n                        childCheck = null;\n                    }\n                }\n                childCheck = null;\n            }\n        }\n    };\n    TreeView.prototype.openNode = function (toBeOpened, e) {\n        var focusedNode = this.getFocusedNode();\n        var icon = select('div.' + ICON, focusedNode);\n        if (toBeOpened) {\n            if (!icon) {\n                return;\n            }\n            else if (icon.classList.contains(EXPANDABLE)) {\n                this.expandAction(focusedNode, icon, e);\n            }\n            else {\n                this.focusNextNode(focusedNode, true);\n            }\n        }\n        else {\n            if (icon && icon.classList.contains(COLLAPSIBLE)) {\n                this.collapseNode(focusedNode, icon, e);\n            }\n            else {\n                var parentLi = closest(closest(focusedNode, '.' + PARENTITEM), '.' + LISTITEM);\n                if (!parentLi) {\n                    return;\n                }\n                else {\n                    if (!parentLi.classList.contains('e-disable')) {\n                        this.setFocus(focusedNode, parentLi);\n                        this.navigateToFocus(true);\n                    }\n                }\n            }\n        }\n    };\n    TreeView.prototype.navigateNode = function (isTowards) {\n        var focusedNode = this.getFocusedNode();\n        this.focusNextNode(focusedNode, isTowards);\n    };\n    TreeView.prototype.navigateRootNode = function (isBackwards) {\n        var focusedNode = this.getFocusedNode();\n        var rootNode = isBackwards ? this.getRootNode() : this.getEndNode();\n        if (!rootNode.classList.contains('e-disable')) {\n            this.setFocus(focusedNode, rootNode);\n            this.navigateToFocus(isBackwards);\n        }\n    };\n    TreeView.prototype.getFocusedNode = function () {\n        var selectedItem;\n        var fNode = select('.' + LISTITEM + '.' + FOCUS, this.element);\n        if (isNOU(fNode)) {\n            selectedItem = select('.' + LISTITEM, this.element);\n        }\n        return isNOU(fNode) ? (isNOU(selectedItem) ? this.element.firstElementChild : selectedItem) : fNode;\n    };\n    TreeView.prototype.focusNextNode = function (li, isTowards) {\n        var nextNode = isTowards ? this.getNextNode(li) : this.getPrevNode(li);\n        this.setFocus(li, nextNode);\n        this.navigateToFocus(!isTowards);\n        if (nextNode.classList.contains('e-disable')) {\n            var lastChild = nextNode.lastChild;\n            if (nextNode.previousSibling == null && nextNode.classList.contains('e-level-1')) {\n                this.focusNextNode(nextNode, true);\n            }\n            else if (nextNode.nextSibling == null && nextNode.classList.contains('e-node-collapsed')) {\n                this.focusNextNode(nextNode, false);\n            }\n            else if (nextNode.nextSibling == null && lastChild.classList.contains(TEXTWRAP)) {\n                this.focusNextNode(nextNode, false);\n            }\n            else {\n                this.focusNextNode(nextNode, isTowards);\n            }\n        }\n    };\n    TreeView.prototype.getNextNode = function (li) {\n        var index = this.liList.indexOf(li);\n        var nextNode;\n        do {\n            index++;\n            nextNode = this.liList[index];\n            if (isNOU(nextNode)) {\n                return li;\n            }\n        } while (!isVisible(nextNode));\n        return nextNode;\n    };\n    TreeView.prototype.getPrevNode = function (li) {\n        var index = this.liList.indexOf(li);\n        var prevNode;\n        do {\n            index--;\n            prevNode = this.liList[index];\n            if (isNOU(prevNode)) {\n                return li;\n            }\n        } while (!isVisible(prevNode));\n        return prevNode;\n    };\n    TreeView.prototype.getRootNode = function () {\n        var index = 0;\n        var rootNode;\n        do {\n            rootNode = this.liList[index];\n            index++;\n        } while (!isVisible(rootNode));\n        return rootNode;\n    };\n    TreeView.prototype.getEndNode = function () {\n        var index = this.liList.length - 1;\n        var endNode;\n        do {\n            endNode = this.liList[index];\n            index--;\n        } while (!isVisible(endNode));\n        return endNode;\n    };\n    TreeView.prototype.setFocus = function (preNode, nextNode) {\n        removeClass([preNode], [HOVER, FOCUS]);\n        if (!nextNode.classList.contains('e-disable')) {\n            addClass([nextNode], [HOVER, FOCUS]);\n            this.updateIdAttr(preNode, nextNode);\n        }\n    };\n    TreeView.prototype.updateIdAttr = function (preNode, nextNode) {\n        this.element.removeAttribute('aria-activedescendant');\n        if (preNode) {\n            preNode.removeAttribute('id');\n        }\n        nextNode.setAttribute('id', this.element.id + '_active');\n        this.element.setAttribute('aria-activedescendant', this.element.id + '_active');\n    };\n    TreeView.prototype.focusIn = function () {\n        if (!this.mouseDownStatus) {\n            addClass([this.getFocusedNode()], HOVER);\n        }\n        this.mouseDownStatus = false;\n    };\n    TreeView.prototype.focusOut = function () {\n        removeClass([this.getFocusedNode()], HOVER);\n    };\n    TreeView.prototype.onMouseOver = function (e) {\n        var target = e.target;\n        var classList = target.classList;\n        var currentLi = closest(target, '.' + LISTITEM);\n        if (!currentLi || classList.contains(PARENTITEM) || classList.contains(LISTITEM)) {\n            this.removeHover();\n            return;\n        }\n        else {\n            if (currentLi && !currentLi.classList.contains('e-disable')) {\n                this.setHover(currentLi);\n            }\n        }\n    };\n    TreeView.prototype.setHover = function (li) {\n        if (!li.classList.contains(HOVER)) {\n            this.removeHover();\n            addClass([li], HOVER);\n        }\n    };\n    ;\n    TreeView.prototype.onMouseLeave = function (e) {\n        this.removeHover();\n    };\n    TreeView.prototype.removeHover = function () {\n        var hoveredNode = selectAll('.' + HOVER, this.element);\n        if (hoveredNode && hoveredNode.length) {\n            removeClass(hoveredNode, HOVER);\n        }\n    };\n    ;\n    TreeView.prototype.getNodeData = function (currLi, fromDS) {\n        if (!isNOU(currLi) && currLi.classList.contains(LISTITEM) &&\n            !isNOU(closest(currLi, '.' + CONTROL)) && closest(currLi, '.' + CONTROL).classList.contains(ROOT)) {\n            var id = currLi.getAttribute('data-uid');\n            var text = this.getText(currLi, fromDS);\n            var pNode = closest(currLi.parentNode, '.' + LISTITEM);\n            var pid = pNode ? pNode.getAttribute('data-uid') : null;\n            var selected = currLi.classList.contains(ACTIVE);\n            var expanded = (currLi.getAttribute('aria-expanded') === 'true') ? true : false;\n            var hasChildren = currLi.getAttribute('aria-expanded') !== null ? true : (select('.' + EXPANDABLE, currLi) || select('.' + COLLAPSIBLE, currLi)) != null ? true : false;\n            var checked = null;\n            if (this.showCheckBox) {\n                checked = select('.' + CHECKBOXWRAP, currLi).getAttribute('aria-checked');\n            }\n            return {\n                id: id, text: text, parentID: pid, selected: selected, expanded: expanded,\n                isChecked: checked, hasChildren: hasChildren\n            };\n        }\n        return { id: '', text: '', parentID: '', selected: false, expanded: false, isChecked: '', hasChildren: false };\n    };\n    TreeView.prototype.getText = function (currLi, fromDS) {\n        if (fromDS) {\n            var nodeData = this.getNodeObject(currLi.getAttribute('data-uid'));\n            var level = parseFloat(currLi.getAttribute('aria-level'));\n            var nodeFields = this.getFields(this.fields, level, 1);\n            return getValue(nodeFields.text, nodeData);\n        }\n        return select('.' + LISTTEXT, currLi).textContent;\n    };\n    TreeView.prototype.getExpandEvent = function (currLi, e) {\n        var nodeData = this.getNodeData(currLi);\n        return { cancel: false, isInteracted: isNOU(e) ? false : true, node: currLi, nodeData: nodeData, event: e };\n    };\n    TreeView.prototype.renderNodeTemplate = function (data, textEle, dataId) {\n        var tempArr = this.nodeTemplateFn(data, this, 'nodeTemplate' + dataId, this.element.id + 'nodeTemplate', this.isStringTemplate, undefined, textEle, this.root);\n        if (tempArr) {\n            tempArr = Array.prototype.slice.call(tempArr);\n            append(tempArr, textEle);\n        }\n    };\n    TreeView.prototype.destroyTemplate = function (liEle) {\n        this.clearTemplate(['nodeTemplate' + liEle.getAttribute('data-uid')]);\n    };\n    TreeView.prototype.reRenderNodes = function () {\n        this.updateListProp(this.fields);\n        if (Browser.isIE) {\n            this.ulElement = this.element.querySelector('.e-list-parent.e-ul');\n            this.ulElement.parentElement.removeChild(this.ulElement);\n        }\n        else {\n            this.element.innerHTML = '';\n        }\n        if (!isNOU(this.nodeTemplateFn)) {\n            this.clearTemplate();\n        }\n        this.setTouchClass();\n        this.setProperties({ selectedNodes: [], checkedNodes: [], expandedNodes: [] }, true);\n        this.checkedElement = [];\n        this.isLoaded = false;\n        this.setDataBinding(true);\n    };\n    TreeView.prototype.setCssClass = function (oldClass, newClass) {\n        if (!isNOU(oldClass) && oldClass !== '') {\n            removeClass([this.element], oldClass.split(' '));\n        }\n        if (!isNOU(newClass) && newClass !== '') {\n            addClass([this.element], newClass.split(' '));\n        }\n    };\n    TreeView.prototype.editingHandler = function (e) {\n        var target = e.target;\n        if (!target || target.classList.contains(ROOT) || target.classList.contains(PARENTITEM) ||\n            target.classList.contains(LISTITEM) || target.classList.contains(ICON) ||\n            target.classList.contains(INPUT) || target.classList.contains(INPUTGROUP)) {\n            return;\n        }\n        else {\n            var liEle = closest(target, '.' + LISTITEM);\n            this.createTextbox(liEle, e);\n        }\n    };\n    TreeView.prototype.createTextbox = function (liEle, e) {\n        var _this = this;\n        var oldInpEle = select('.' + TREEINPUT, this.element);\n        if (oldInpEle) {\n            oldInpEle.blur();\n        }\n        var textEle = select('.' + LISTTEXT, liEle);\n        this.updateOldText(liEle);\n        var innerEle = this.createElement('input', { className: TREEINPUT, attrs: { value: this.oldText } });\n        var eventArgs = this.getEditEvent(liEle, null, innerEle.outerHTML);\n        this.trigger('nodeEditing', eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                var inpWidth = textEle.offsetWidth + 5;\n                var style = 'width:' + inpWidth + 'px';\n                addClass([liEle], EDITING);\n                if (!isNOU(_this.nodeTemplateFn)) {\n                    _this.destroyTemplate(liEle);\n                }\n                textEle.innerHTML = eventArgs.innerHtml;\n                var inpEle = select('.' + TREEINPUT, textEle);\n                _this.inputObj = Input.createInput({\n                    element: inpEle,\n                    properties: {\n                        enableRtl: _this.enableRtl,\n                    }\n                }, _this.createElement);\n                _this.inputObj.container.setAttribute('style', style);\n                inpEle.focus();\n                var inputEle = inpEle;\n                inputEle.setSelectionRange(0, inputEle.value.length);\n                _this.wireInputEvents(inpEle);\n            }\n        });\n    };\n    TreeView.prototype.updateOldText = function (liEle) {\n        var id = liEle.getAttribute('data-uid');\n        this.editData = this.getNodeObject(id);\n        var level = parseFloat(liEle.getAttribute('aria-level'));\n        this.editFields = this.getFields(this.fields, level, 1);\n        this.oldText = getValue(this.editFields.text, this.editData);\n    };\n    TreeView.prototype.inputFocusOut = function (e) {\n        if (!select('.' + TREEINPUT, this.element)) {\n            return;\n        }\n        var target = e.target;\n        var newText = target.value;\n        var txtEle = closest(target, '.' + LISTTEXT);\n        var liEle = closest(target, '.' + LISTITEM);\n        detach(this.inputObj.container);\n        if (this.fields.dataSource instanceof DataManager && !this.isOffline) {\n            this.crudOperation('update', null, liEle, newText, null, null, true);\n        }\n        else {\n            this.appendNewText(liEle, txtEle, newText, true);\n        }\n    };\n    TreeView.prototype.appendNewText = function (liEle, txtEle, newText, isInput) {\n        var _this = this;\n        var eventArgs = this.getEditEvent(liEle, newText, null);\n        this.trigger('nodeEdited', eventArgs, function (observedArgs) {\n            newText = observedArgs.cancel ? observedArgs.oldText : observedArgs.newText;\n            _this.updateText(liEle, txtEle, newText, isInput);\n            if (observedArgs.oldText !== newText) {\n                _this.triggerEvent();\n            }\n        });\n    };\n    TreeView.prototype.updateText = function (liEle, txtEle, newText, isInput) {\n        var newData = setValue(this.editFields.text, newText, this.editData);\n        if (!isNOU(this.nodeTemplateFn)) {\n            txtEle.innerText = '';\n            var dataId = liEle.getAttribute('data-uid');\n            this.renderNodeTemplate(newData, txtEle, dataId);\n            this.renderReactTemplates();\n        }\n        else {\n            txtEle.innerText = newText;\n        }\n        if (isInput) {\n            removeClass([liEle], EDITING);\n            txtEle.focus();\n        }\n        if (this.allowTextWrap) {\n            this.calculateWrap(liEle);\n        }\n    };\n    TreeView.prototype.getElement = function (ele) {\n        if (isNOU(ele)) {\n            return null;\n        }\n        else if (typeof ele === 'string') {\n            return this.element.querySelector('[data-uid=\"' + ele + '\"]');\n        }\n        else if (typeof ele === 'object') {\n            return getElement(ele);\n        }\n        else {\n            return null;\n        }\n    };\n    TreeView.prototype.getId = function (ele) {\n        if (isNOU(ele)) {\n            return null;\n        }\n        else if (typeof ele === 'string') {\n            return ele;\n        }\n        else if (typeof ele === 'object') {\n            return (getElement(ele)).getAttribute('data-uid');\n        }\n        else {\n            return null;\n        }\n    };\n    TreeView.prototype.getEditEvent = function (liEle, newText, inpEle) {\n        var data = this.getNodeData(liEle);\n        return { cancel: false, newText: newText, node: liEle, nodeData: data, oldText: this.oldText, innerHtml: inpEle };\n    };\n    TreeView.prototype.getNodeObject = function (id) {\n        var childNodes;\n        if (isNOU(id)) {\n            return childNodes;\n        }\n        else if (this.dataType === 1) {\n            for (var i = 0, objlen = this.treeData.length; i < objlen; i++) {\n                var dataId = getValue(this.fields.id, this.treeData[i]);\n                if (!isNOU(this.treeData[i]) && !isNOU(dataId) && dataId.toString() === id) {\n                    return this.treeData[i];\n                }\n            }\n        }\n        else {\n            return this.getChildNodeObject(this.treeData, this.fields, id);\n        }\n        return childNodes;\n    };\n    TreeView.prototype.getChildNodeObject = function (obj, mapper, id) {\n        var newList;\n        if (isNOU(obj)) {\n            return newList;\n        }\n        for (var i = 0, objlen = obj.length; i < objlen; i++) {\n            var dataId = getValue(mapper.id, obj[i]);\n            if (obj[i] && dataId && dataId.toString() === id) {\n                return obj[i];\n            }\n            else if (typeof mapper.child === 'string' && !isNOU(getValue(mapper.child, obj[i]))) {\n                var childData = getValue(mapper.child, obj[i]);\n                newList = this.getChildNodeObject(childData, this.getChildMapper(mapper), id);\n                if (newList !== undefined) {\n                    break;\n                }\n            }\n            else if (this.fields.dataSource instanceof DataManager && !isNOU(getValue('child', obj[i]))) {\n                var child = 'child';\n                newList = this.getChildNodeObject(getValue(child, obj[i]), this.getChildMapper(mapper), id);\n                if (newList !== undefined) {\n                    break;\n                }\n            }\n        }\n        return newList;\n    };\n    TreeView.prototype.setDragAndDrop = function (toBind) {\n        if (toBind && !this.disabled) {\n            this.initializeDrag();\n        }\n        else {\n            this.destroyDrag();\n        }\n    };\n    TreeView.prototype.initializeDrag = function () {\n        var _this = this;\n        var virtualEle;\n        var proxy = this;\n        this.dragObj = new Draggable(this.element, {\n            enableTailMode: true, enableAutoScroll: true,\n            dragArea: this.dragArea,\n            dragTarget: '.' + TEXTWRAP,\n            helper: function (e) {\n                _this.dragTarget = e.sender.target;\n                var dragRoot = closest(_this.dragTarget, '.' + ROOT);\n                var dragWrap = closest(_this.dragTarget, '.' + TEXTWRAP);\n                _this.dragLi = closest(_this.dragTarget, '.' + LISTITEM);\n                if (_this.fullRowSelect && !dragWrap && _this.dragTarget.classList.contains(FULLROW)) {\n                    dragWrap = _this.dragTarget.nextElementSibling;\n                }\n                if (!_this.dragTarget || !e.element.isSameNode(dragRoot) || !dragWrap ||\n                    _this.dragTarget.classList.contains(ROOT) || _this.dragTarget.classList.contains(PARENTITEM) ||\n                    _this.dragTarget.classList.contains(LISTITEM) || _this.dragLi.classList.contains('e-disable')) {\n                    return false;\n                }\n                var cloneEle = (dragWrap.cloneNode(true));\n                if (isNOU(select('div.' + ICON, cloneEle))) {\n                    var icon = proxy.createElement('div', { className: ICON + ' ' + EXPANDABLE });\n                    cloneEle.insertBefore(icon, cloneEle.children[0]);\n                }\n                var cssClass = DRAGITEM + ' ' + ROOT + ' ' + _this.cssClass + ' ' + (_this.enableRtl ? RTL : '');\n                virtualEle = proxy.createElement('div', { className: cssClass });\n                virtualEle.appendChild(cloneEle);\n                var nLen = _this.selectedNodes.length;\n                if (nLen > 1 && _this.allowMultiSelection && _this.dragLi.classList.contains(ACTIVE)) {\n                    var cNode = proxy.createElement('span', { className: DROPCOUNT, innerHTML: '' + nLen });\n                    virtualEle.appendChild(cNode);\n                }\n                document.body.appendChild(virtualEle);\n                document.body.style.cursor = '';\n                _this.dragData = _this.getNodeData(_this.dragLi);\n                return virtualEle;\n            },\n            dragStart: function (e) {\n                addClass([_this.element], DRAGGING);\n                var listItem = closest(e.target, '.e-list-item');\n                var level;\n                if (listItem) {\n                    level = parseInt(listItem.getAttribute('aria-level'), 10);\n                }\n                var eventArgs = _this.getDragEvent(e.event, _this, null, e.target, null, virtualEle, level);\n                if (eventArgs.draggedNode.classList.contains(EDITING)) {\n                    _this.dragObj.intDestroy(e.event);\n                    _this.dragCancelAction(virtualEle);\n                }\n                else {\n                    _this.trigger('nodeDragStart', eventArgs, function (observedArgs) {\n                        if (observedArgs.cancel) {\n                            _this.dragObj.intDestroy(e.event);\n                            _this.dragCancelAction(virtualEle);\n                        }\n                        else {\n                            _this.dragStartAction = true;\n                        }\n                    });\n                }\n            },\n            drag: function (e) {\n                _this.dragObj.setProperties({ cursorAt: { top: (!isNOU(e.event.targetTouches) || Browser.isDevice) ? 60 : -20 } });\n                _this.dragAction(e, virtualEle);\n            },\n            dragStop: function (e) {\n                removeClass([_this.element], DRAGGING);\n                _this.removeVirtualEle();\n                var dropTarget = e.target;\n                var preventTargetExpand = false;\n                var dropRoot = (closest(dropTarget, '.' + DROPPABLE));\n                var isHelperElement = true;\n                if (!dropTarget || !dropRoot) {\n                    detach(e.helper);\n                    document.body.style.cursor = '';\n                    isHelperElement = false;\n                }\n                var listItem = closest(dropTarget, '.e-list-item');\n                var level;\n                if (listItem) {\n                    level = parseInt(listItem.getAttribute('aria-level'), 10);\n                }\n                var eventArgs = _this.getDragEvent(e.event, _this, dropTarget, dropTarget, null, e.helper, level);\n                eventArgs.preventTargetExpand = preventTargetExpand;\n                _this.trigger('nodeDragStop', eventArgs, function (observedArgs) {\n                    _this.dragParent = observedArgs.draggedParentNode;\n                    _this.preventExpand = observedArgs.preventTargetExpand;\n                    if (observedArgs.cancel) {\n                        if (e.helper.parentNode) {\n                            detach(e.helper);\n                        }\n                        document.body.style.cursor = '';\n                        isHelperElement = false;\n                    }\n                    _this.dragStartAction = false;\n                });\n            }\n        });\n        this.dropObj = new Droppable(this.element, {\n            out: function (e) {\n                if (!isNOU(e) && !e.target.classList.contains(SIBLING)) {\n                    document.body.style.cursor = 'not-allowed';\n                }\n            },\n            over: function (e) {\n                document.body.style.cursor = '';\n            },\n            drop: function (e) {\n                _this.dropAction(e);\n            }\n        });\n    };\n    TreeView.prototype.dragCancelAction = function (virtualEle) {\n        detach(virtualEle);\n        removeClass([this.element], DRAGGING);\n        this.dragStartAction = false;\n    };\n    TreeView.prototype.dragAction = function (e, virtualEle) {\n        var dropRoot = closest(e.target, '.' + DROPPABLE);\n        var dropWrap = closest(e.target, '.' + TEXTWRAP);\n        var icon = select('div.' + ICON, virtualEle);\n        removeClass([icon], [DROPIN, DROPNEXT, DROPOUT, NODROP]);\n        this.removeVirtualEle();\n        document.body.style.cursor = '';\n        var classList = e.target.classList;\n        if (this.fullRowSelect && !dropWrap && !isNOU(classList) && classList.contains(FULLROW)) {\n            dropWrap = e.target.nextElementSibling;\n        }\n        if (dropRoot) {\n            var dropLi = closest(e.target, '.' + LISTITEM);\n            var checkWrapper = closest(e.target, '.' + CHECKBOXWRAP);\n            var collapse = closest(e.target, '.' + COLLAPSIBLE);\n            var expand = closest(e.target, '.' + EXPANDABLE);\n            if (!dropRoot.classList.contains(ROOT) || (dropWrap &&\n                (!dropLi.isSameNode(this.dragLi) && !this.isDescendant(this.dragLi, dropLi)))) {\n                if (this.hasTemplate && dropLi) {\n                    var templateTarget = select(this.fullRowSelect ? '.' + FULLROW : '.' + TEXTWRAP, dropLi);\n                    if ((e && (!expand && !collapse) && e.event.offsetY < 7 && !checkWrapper) || (((expand && e.event.offsetY < 5) || (collapse && e.event.offsetX < 3)))) {\n                        var index = this.fullRowSelect ? (1) : (0);\n                        this.appendIndicator(dropLi, icon, index);\n                    }\n                    else if ((e && (!expand && !collapse) && !checkWrapper && templateTarget && e.event.offsetY > templateTarget.offsetHeight - 10) || ((expand && e.event.offsetY > 19) || (collapse && e.event.offsetX > 19))) {\n                        var index = this.fullRowSelect ? (2) : (1);\n                        this.appendIndicator(dropLi, icon, index);\n                    }\n                    else {\n                        addClass([icon], DROPIN);\n                    }\n                }\n                else {\n                    if ((dropLi && e && (!expand && !collapse) && (e.event.offsetY < 7) && !checkWrapper) || (((expand && e.event.offsetY < 5) || (collapse && e.event.offsetX < 3)))) {\n                        var index = this.fullRowSelect ? (1) : (0);\n                        this.appendIndicator(dropLi, icon, index);\n                    }\n                    else if ((dropLi && e && (!expand && !collapse) && (e.target.offsetHeight > 0 && e.event.offsetY > (e.target.offsetHeight - 10)) && !checkWrapper) || (((expand && e.event.offsetY > 19) || (collapse && e.event.offsetX > 19)))) {\n                        var index = this.fullRowSelect ? (2) : (1);\n                        this.appendIndicator(dropLi, icon, index);\n                    }\n                    else {\n                        addClass([icon], DROPIN);\n                    }\n                }\n            }\n            else if (e.target.nodeName === 'LI' && (!dropLi.isSameNode(this.dragLi) && !this.isDescendant(this.dragLi, dropLi))) {\n                addClass([icon], DROPNEXT);\n                this.renderVirtualEle(e);\n            }\n            else if (e.target.classList.contains(SIBLING)) {\n                addClass([icon], DROPNEXT);\n            }\n            else {\n                addClass([icon], DROPOUT);\n            }\n        }\n        else {\n            addClass([icon], NODROP);\n            document.body.style.cursor = 'not-allowed';\n        }\n        var listItem = closest(e.target, '.e-list-item');\n        var level;\n        if (listItem) {\n            level = parseInt(listItem.getAttribute('aria-level'), 10);\n        }\n        var eventArgs = this.getDragEvent(e.event, this, e.target, e.target, null, virtualEle, level);\n        if (eventArgs.dropIndicator) {\n            removeClass([icon], eventArgs.dropIndicator);\n        }\n        this.trigger('nodeDragging', eventArgs);\n        if (eventArgs.dropIndicator) {\n            addClass([icon], eventArgs.dropIndicator);\n        }\n    };\n    TreeView.prototype.appendIndicator = function (dropLi, icon, index) {\n        addClass([icon], DROPNEXT);\n        var virEle = this.createElement('div', { className: SIBLING });\n        dropLi.insertBefore(virEle, dropLi.children[index]);\n    };\n    /* eslint-disable */\n    TreeView.prototype.dropAction = function (e) {\n        var offsetY = e.event.offsetY;\n        var dropTarget = e.target;\n        var dragObj;\n        var level;\n        var drop = false;\n        var dragInstance;\n        dragInstance = e.dragData.draggable;\n        for (var i = 0; i < dragInstance.ej2_instances.length; i++) {\n            if (dragInstance.ej2_instances[i] instanceof TreeView_1) {\n                dragObj = dragInstance.ej2_instances[i];\n                break;\n            }\n        }\n        if (dragObj && dragObj.dragTarget) {\n            var dragTarget = dragObj.dragTarget;\n            var dragLi = (closest(dragTarget, '.' + LISTITEM));\n            var dropLi = (closest(dropTarget, '.' + LISTITEM));\n            if (dropLi == null && dropTarget.classList.contains(ROOT)) {\n                dropLi = dropTarget.firstElementChild;\n            }\n            detach(e.droppedElement);\n            document.body.style.cursor = '';\n            if (!dropLi || dropLi.isSameNode(dragLi) || this.isDescendant(dragLi, dropLi)) {\n                if (this.fields.dataSource instanceof DataManager === false) {\n                    this.preventExpand = false;\n                }\n                return;\n            }\n            if (dragObj.allowMultiSelection && dragLi.classList.contains(ACTIVE)) {\n                var sNodes = selectAll('.' + ACTIVE, dragObj.element);\n                if (e.target.offsetHeight <= 33 && offsetY > e.target.offsetHeight - 10 && offsetY > 6) {\n                    for (var i = sNodes.length - 1; i >= 0; i--) {\n                        if (dropLi.isSameNode(sNodes[i]) || this.isDescendant(sNodes[i], dropLi)) {\n                            continue;\n                        }\n                        this.appendNode(dropTarget, sNodes[i], dropLi, e, dragObj, offsetY);\n                    }\n                }\n                else {\n                    for (var i = 0; i < sNodes.length; i++) {\n                        if (dropLi.isSameNode(sNodes[i]) || this.isDescendant(sNodes[i], dropLi)) {\n                            continue;\n                        }\n                        this.appendNode(dropTarget, sNodes[i], dropLi, e, dragObj, offsetY);\n                    }\n                }\n            }\n            else {\n                this.appendNode(dropTarget, dragLi, dropLi, e, dragObj, offsetY);\n            }\n            level = parseInt(dragLi.getAttribute('aria-level'), 10);\n            drop = true;\n        }\n        if (this.fields.dataSource instanceof DataManager === false) {\n            this.preventExpand = false;\n        }\n        this.trigger('nodeDropped', this.getDragEvent(e.event, dragObj, dropTarget, e.target, e.dragData.draggedElement, null, level, drop));\n        if (dragObj.element.id !== this.element.id) {\n            dragObj.triggerEvent();\n        }\n        this.triggerEvent();\n    };\n    TreeView.prototype.appendNode = function (dropTarget, dragLi, dropLi, e, dragObj, offsetY) {\n        var checkWrapper = closest(dropTarget, '.' + CHECKBOXWRAP);\n        var collapse = closest(e.target, '.' + COLLAPSIBLE);\n        var expand = closest(e.target, '.' + EXPANDABLE);\n        if (!dragLi.classList.contains('e-disable') && !checkWrapper && ((expand && e.event.offsetY < 5) || (collapse && e.event.offsetX < 3) || (expand && e.event.offsetY > 19) || (collapse && e.event.offsetX > 19) || (!expand && !collapse))) {\n            if (dropTarget.nodeName === 'LI') {\n                this.dropAsSiblingNode(dragLi, dropLi, e, dragObj);\n            }\n            else if (dropTarget.firstElementChild && dropTarget.classList.contains(ROOT)) {\n                if (dropTarget.firstElementChild.nodeName === 'UL') {\n                    this.dropAsSiblingNode(dragLi, dropLi, e, dragObj);\n                }\n            }\n            else if ((dropTarget.classList.contains('e-icon-collapsible')) || (dropTarget.classList.contains('e-icon-expandable'))) {\n                this.dropAsSiblingNode(dragLi, dropLi, e, dragObj);\n            }\n            else {\n                this.dropAsChildNode(dragLi, dropLi, dragObj, null, e, offsetY);\n            }\n        }\n        else {\n            this.dropAsChildNode(dragLi, dropLi, dragObj, null, e, offsetY, true);\n        }\n    };\n    TreeView.prototype.dropAsSiblingNode = function (dragLi, dropLi, e, dragObj) {\n        var dropUl = closest(dropLi, '.' + PARENTITEM);\n        var dragParentUl = closest(dragLi, '.' + PARENTITEM);\n        var dragParentLi = closest(dragParentUl, '.' + LISTITEM);\n        var pre;\n        if (e.target.offsetHeight > 0 && e.event.offsetY > e.target.offsetHeight - 2) {\n            pre = false;\n        }\n        else if (e.event.offsetY < 2) {\n            pre = true;\n        }\n        else if (e.target.classList.contains('e-icon-expandable') || (e.target.classList.contains('e-icon-collapsible'))) {\n            if ((e.event.offsetY < 5) || (e.event.offsetX < 3)) {\n                pre = true;\n            }\n            else if ((e.event.offsetY > 15) || (e.event.offsetX > 17)) {\n                pre = false;\n            }\n        }\n        if ((e.target.classList.contains('e-icon-expandable')) || (e.target.classList.contains('e-icon-collapsible'))) {\n            var target = e.target.closest('li');\n            dropUl.insertBefore(dragLi, pre ? target : target.nextElementSibling);\n        }\n        else {\n            dropUl.insertBefore(dragLi, pre ? e.target : e.target.nextElementSibling);\n        }\n        this.moveData(dragLi, dropLi, dropUl, pre, dragObj);\n        this.updateElement(dragParentUl, dragParentLi);\n        this.updateAriaLevel(dragLi);\n        if (dragObj.element.id === this.element.id) {\n            this.updateList();\n        }\n        else {\n            dragObj.updateInstance();\n            this.updateInstance();\n        }\n    };\n    TreeView.prototype.dropAsChildNode = function (dragLi, dropLi, dragObj, index, e, pos, isCheck) {\n        var dragParentUl = closest(dragLi, '.' + PARENTITEM);\n        var dragParentLi = closest(dragParentUl, '.' + LISTITEM);\n        var dropParentUl = closest(dropLi, '.' + PARENTITEM);\n        var templateTarget;\n        if (e && e.target) {\n            templateTarget = select(this.fullRowSelect ? '.' + FULLROW : '.' + TEXTWRAP, dropLi);\n        }\n        if (e && (pos < 7) && !isCheck) {\n            dropParentUl.insertBefore(dragLi, dropLi);\n            this.moveData(dragLi, dropLi, dropParentUl, true, dragObj);\n        }\n        else if (e && (e.target.offsetHeight > 0 && pos > (e.target.offsetHeight - 10)) && !isCheck && !this.hasTemplate) {\n            dropParentUl.insertBefore(dragLi, dropLi.nextElementSibling);\n            this.moveData(dragLi, dropLi, dropParentUl, false, dragObj);\n        }\n        else if (this.hasTemplate && templateTarget && pos > templateTarget.offsetHeight - 10 && !isCheck) {\n            dropParentUl.insertBefore(dragLi, dropLi.nextElementSibling);\n            this.moveData(dragLi, dropLi, dropParentUl, false, dragObj);\n        }\n        else {\n            var dropUl = this.expandParent(dropLi);\n            var childLi = dropUl.childNodes[index];\n            dropUl.insertBefore(dragLi, childLi);\n            this.moveData(dragLi, childLi, dropUl, true, dragObj);\n        }\n        this.updateElement(dragParentUl, dragParentLi);\n        this.updateAriaLevel(dragLi);\n        if (dragObj.element.id === this.element.id) {\n            this.updateList();\n        }\n        else {\n            dragObj.updateInstance();\n            this.updateInstance();\n        }\n    };\n    TreeView.prototype.moveData = function (dragLi, dropLi, dropUl, pre, dragObj) {\n        var dropParentLi = closest(dropUl, '.' + LISTITEM);\n        var id = this.getId(dragLi);\n        var removedData = dragObj.updateChildField(dragObj.treeData, dragObj.fields, id, null, null, true);\n        var refId = this.getId(dropLi);\n        var index = this.getDataPos(this.treeData, this.fields, refId);\n        var parentId = this.getId(dropParentLi);\n        if (this.dataType === 1) {\n            this.updateField(this.treeData, this.fields, parentId, 'hasChildren', true);\n            var pos = isNOU(index) ? this.treeData.length : (pre ? index : index + 1);\n            if (isNOU(parentId) && !this.hasPid) {\n                delete removedData[0][this.fields.parentID];\n            }\n            else {\n                var currPid = this.isNumberTypeId ? parseFloat(parentId) : parentId;\n                setValue(this.fields.parentID, currPid, removedData[0]);\n            }\n            this.treeData.splice(pos, 0, removedData[0]);\n            if (dragObj.element.id !== this.element.id) {\n                var childData = dragObj.removeChildNodes(id);\n                pos++;\n                for (var i = 0, len = childData.length; i < len; i++) {\n                    this.treeData.splice(pos, 0, childData[i]);\n                    pos++;\n                }\n                dragObj.groupedData = dragObj.getGroupedData(dragObj.treeData, dragObj.fields.parentID);\n            }\n            this.groupedData = this.getGroupedData(this.treeData, this.fields.parentID);\n        }\n        else {\n            this.addChildData(this.treeData, this.fields, parentId, removedData, pre ? index : index + 1);\n        }\n    };\n    TreeView.prototype.expandParent = function (dropLi) {\n        var dropIcon = select('div.' + ICON, dropLi);\n        if (dropIcon && dropIcon.classList.contains(EXPANDABLE) && this.preventExpand !== true) {\n            this.expandAction(dropLi, dropIcon, null);\n        }\n        var dropUl = select('.' + PARENTITEM, dropLi);\n        if (this.preventExpand === true && !dropUl && dropIcon) {\n            this.renderChildNodes(dropLi);\n        }\n        dropUl = select('.' + PARENTITEM, dropLi);\n        if (!isNOU(dropUl) && this.preventExpand === true) {\n            dropUl.style.display = 'none';\n        }\n        if (!isNOU(dropUl) && this.preventExpand === false) {\n            dropUl.style.display = 'block';\n        }\n        if (isNOU(dropUl) && this.preventExpand === true) {\n            if (isNOU(dropIcon)) {\n                ListBase.generateIcon(this.createElement, dropLi, EXPANDABLE, this.listBaseOption);\n            }\n            var icon = select('div.' + ICON, dropLi);\n            if (icon) {\n                icon.classList.add('e-icon-expandable');\n            }\n            dropUl = ListBase.generateUL(this.createElement, [], null, this.listBaseOption);\n            dropLi.appendChild(dropUl);\n            if (icon) {\n                removeClass([icon], COLLAPSIBLE);\n            }\n            else {\n                ListBase.generateIcon(this.createElement, dropLi, EXPANDABLE, this.listBaseOption);\n            }\n            dropLi.setAttribute('aria-expanded', 'false');\n            dropUl.style.display = 'none';\n        }\n        if (isNOU(dropUl)) {\n            this.trigger('nodeExpanding', this.getExpandEvent(dropLi, null));\n            if (isNOU(dropIcon)) {\n                ListBase.generateIcon(this.createElement, dropLi, COLLAPSIBLE, this.listBaseOption);\n            }\n            var icon = select('div.' + ICON, dropLi);\n            if (icon) {\n                removeClass([icon], EXPANDABLE);\n            }\n            else {\n                ListBase.generateIcon(this.createElement, dropLi, COLLAPSIBLE, this.listBaseOption);\n                icon = select('div.' + ICON, dropLi);\n                removeClass([icon], EXPANDABLE);\n            }\n            dropUl = ListBase.generateUL(this.createElement, [], null, this.listBaseOption);\n            dropLi.appendChild(dropUl);\n            this.addExpand(dropLi);\n            this.trigger('nodeExpanded', this.getExpandEvent(dropLi, null));\n        }\n        return dropUl;\n    };\n    TreeView.prototype.updateElement = function (dragParentUl, dragParentLi) {\n        if (dragParentLi && dragParentUl.childElementCount === 0) {\n            var dragIcon = select('div.' + ICON, dragParentLi);\n            detach(dragParentUl);\n            detach(dragIcon);\n            var parentId = this.getId(dragParentLi);\n            this.updateField(this.treeData, this.fields, parentId, 'hasChildren', false);\n            this.removeExpand(dragParentLi, true);\n        }\n    };\n    TreeView.prototype.updateAriaLevel = function (dragLi) {\n        var level = this.parents(dragLi, '.' + PARENTITEM).length;\n        dragLi.setAttribute('aria-level', '' + level);\n        this.updateChildAriaLevel(select('.' + PARENTITEM, dragLi), level + 1);\n    };\n    TreeView.prototype.updateChildAriaLevel = function (element, level) {\n        if (!isNOU(element)) {\n            var cNodes = element.childNodes;\n            for (var i = 0, len = cNodes.length; i < len; i++) {\n                var liEle = cNodes[i];\n                liEle.setAttribute('aria-level', '' + level);\n                this.updateChildAriaLevel(select('.' + PARENTITEM, liEle), level + 1);\n            }\n        }\n    };\n    TreeView.prototype.renderVirtualEle = function (e) {\n        var pre;\n        if (e.event.offsetY > e.target.offsetHeight - 2) {\n            pre = false;\n        }\n        else if (e.event.offsetY < 2) {\n            pre = true;\n        }\n        var virEle = this.createElement('div', { className: SIBLING });\n        var index = this.fullRowSelect ? (pre ? 1 : 2) : (pre ? 0 : 1);\n        e.target.insertBefore(virEle, e.target.children[index]);\n    };\n    TreeView.prototype.removeVirtualEle = function () {\n        var sibEle = select('.' + SIBLING);\n        if (sibEle) {\n            detach(sibEle);\n        }\n    };\n    TreeView.prototype.destroyDrag = function () {\n        if (this.dragObj && this.dropObj) {\n            this.dragObj.destroy();\n            this.dropObj.destroy();\n        }\n    };\n    TreeView.prototype.getDragEvent = function (event, obj, dropTarget, target, dragNode, cloneEle, level, drop) {\n        var dropLi = dropTarget ? closest(dropTarget, '.' + LISTITEM) : null;\n        var dropData = dropLi ? this.getNodeData(dropLi) : null;\n        var draggedNode = obj ? obj.dragLi : dragNode;\n        var draggedNodeData = obj ? obj.dragData : null;\n        var newParent = dropTarget ? this.parents(dropTarget, '.' + LISTITEM) : null;\n        var dragLiParent = obj.dragLi.parentElement;\n        var dragParent = obj.dragLi ? closest(dragLiParent, '.' + LISTITEM) : null;\n        var targetParent = null;\n        var indexValue = null;\n        var iconCss = [DROPNEXT, DROPIN, DROPOUT, NODROP];\n        var iconClass = null;\n        var node = (drop === true) ? draggedNode : dropLi;\n        var index = node ? closest(node, '.e-list-parent') : null;\n        var i = 0;\n        var position = null;\n        dragParent = (obj.dragLi && dragParent === null) ? closest(dragLiParent, '.' + ROOT) : dragParent;\n        dragParent = (drop === true) ? this.dragParent : dragParent;\n        if (cloneEle) {\n            while (i < 4) {\n                if (select('.' + ICON, cloneEle).classList.contains(iconCss[i])) {\n                    iconClass = iconCss[i];\n                    break;\n                }\n                i++;\n            }\n        }\n        if (index) {\n            var dropTar = 0;\n            for (i = 0; i < index.childElementCount; i++) {\n                dropTar = (drop !== true && index.children[i] === draggedNode && dropLi !== draggedNode) ? ++dropTar : dropTar;\n                if ((drop !== true && index.children[i].classList.contains('e-hover'))) {\n                    indexValue = (event.offsetY >= 23) ? i + 1 : i;\n                    break;\n                }\n                else if (index.children[i] === node) {\n                    indexValue = (event.offsetY >= 23) ? i : i;\n                    break;\n                }\n            }\n            indexValue = (dropTar !== 0) ? --indexValue : indexValue;\n            position = (iconClass == \"e-drop-in\") ? \"Inside\" : ((event.offsetY < 7) ? \"Before\" : \"After\");\n        }\n        if (dropTarget) {\n            if (newParent.length === 0) {\n                targetParent = null;\n            }\n            else if (dropTarget.classList.contains(LISTITEM)) {\n                targetParent = newParent[0];\n            }\n            else {\n                targetParent = newParent[1];\n            }\n        }\n        if (dropLi === draggedNode) {\n            targetParent = dropLi;\n        }\n        if (dropTarget && target.offsetHeight <= 33 && event.offsetY < target.offsetHeight - 10 && event.offsetY > 6) {\n            targetParent = dropLi;\n            if (drop !== true) {\n                level = ++level;\n                var parent_2 = targetParent ? select('.e-list-parent', targetParent) : null;\n                indexValue = (parent_2) ? parent_2.children.length : 0;\n                if (!(this.fields.dataSource instanceof DataManager) && parent_2 === null && targetParent) {\n                    var parent_3 = targetParent.hasAttribute('data-uid') ?\n                        this.getChildNodes(this.fields.dataSource, targetParent.getAttribute('data-uid').toString()) : null;\n                    indexValue = (parent_3) ? parent_3.length : 0;\n                }\n            }\n        }\n        return {\n            cancel: false,\n            clonedNode: cloneEle,\n            event: event,\n            draggedNode: draggedNode,\n            draggedNodeData: draggedNodeData,\n            droppedNode: dropLi,\n            droppedNodeData: dropData,\n            dropIndex: indexValue,\n            dropLevel: level,\n            draggedParentNode: dragParent,\n            dropTarget: targetParent,\n            dropIndicator: iconClass,\n            target: target,\n            position: position,\n        };\n    };\n    TreeView.prototype.addFullRow = function (toAdd) {\n        var len = this.liList.length;\n        if (toAdd) {\n            for (var i = 0; i < len; i++) {\n                this.createFullRow(this.liList[i]);\n            }\n        }\n        else {\n            for (var i = 0; i < len; i++) {\n                var rowDiv = select('.' + FULLROW, this.liList[i]);\n                detach(rowDiv);\n            }\n        }\n    };\n    TreeView.prototype.createFullRow = function (item) {\n        var rowDiv = this.createElement('div', { className: FULLROW });\n        item.insertBefore(rowDiv, item.childNodes[0]);\n    };\n    TreeView.prototype.addMultiSelect = function (toAdd) {\n        if (toAdd) {\n            var liEles = selectAll('.' + LISTITEM + ':not([aria-selected=\"true\"])', this.element);\n            for (var _i = 0, liEles_1 = liEles; _i < liEles_1.length; _i++) {\n                var ele = liEles_1[_i];\n                ele.setAttribute('aria-selected', 'false');\n            }\n        }\n        else {\n            var liEles = selectAll('.' + LISTITEM + '[aria-selected=\"false\"]', this.element);\n            for (var _a = 0, liEles_2 = liEles; _a < liEles_2.length; _a++) {\n                var ele = liEles_2[_a];\n                ele.removeAttribute('aria-selected');\n            }\n        }\n    };\n    TreeView.prototype.collapseByLevel = function (element, level, excludeHiddenNodes) {\n        if (level > 0 && !isNOU(element)) {\n            var cNodes = this.getVisibleNodes(excludeHiddenNodes, element.childNodes);\n            for (var i = 0, len = cNodes.length; i < len; i++) {\n                var liEle = cNodes[i];\n                var icon = select('.' + COLLAPSIBLE, select('.' + TEXTWRAP, liEle));\n                if (!isNOU(icon)) {\n                    this.collapseNode(liEle, icon, null);\n                }\n                this.collapseByLevel(select('.' + PARENTITEM, liEle), level - 1, excludeHiddenNodes);\n            }\n        }\n    };\n    TreeView.prototype.collapseAllNodes = function (excludeHiddenNodes) {\n        var cIcons = this.getVisibleNodes(excludeHiddenNodes, selectAll('.' + COLLAPSIBLE, this.element));\n        for (var i = 0, len = cIcons.length; i < len; i++) {\n            var icon = cIcons[i];\n            var liEle = closest(icon, '.' + LISTITEM);\n            this.collapseNode(liEle, icon, null);\n        }\n    };\n    TreeView.prototype.expandByLevel = function (element, level, excludeHiddenNodes) {\n        if (level > 0 && !isNOU(element)) {\n            var eNodes = this.getVisibleNodes(excludeHiddenNodes, element.childNodes);\n            for (var i = 0, len = eNodes.length; i < len; i++) {\n                var liEle = eNodes[i];\n                var icon = select('.' + EXPANDABLE, select('.' + TEXTWRAP, liEle));\n                if (!isNOU(icon)) {\n                    this.expandAction(liEle, icon, null);\n                }\n                this.expandByLevel(select('.' + PARENTITEM, liEle), level - 1, excludeHiddenNodes);\n            }\n        }\n    };\n    TreeView.prototype.expandAllNodes = function (excludeHiddenNodes) {\n        var eIcons = this.getVisibleNodes(excludeHiddenNodes, selectAll('.' + EXPANDABLE, this.element));\n        for (var i = 0, len = eIcons.length; i < len; i++) {\n            var icon = eIcons[i];\n            var liEle = closest(icon, '.' + LISTITEM);\n            this.expandAction(liEle, icon, null, true);\n        }\n    };\n    TreeView.prototype.getVisibleNodes = function (excludeHiddenNodes, nodes) {\n        var vNodes = Array.prototype.slice.call(nodes);\n        if (excludeHiddenNodes) {\n            for (var i = 0; i < vNodes.length; i++) {\n                if (!isVisible(vNodes[i])) {\n                    vNodes.splice(i, 1);\n                    i--;\n                }\n            }\n        }\n        return vNodes;\n    };\n    TreeView.prototype.removeNode = function (node) {\n        var dragParentUl = closest(node, '.' + PARENTITEM);\n        var dragParentLi = closest(dragParentUl, '.' + LISTITEM);\n        if (!isNOU(this.nodeTemplateFn)) {\n            this.destroyTemplate(node);\n        }\n        detach(node);\n        this.updateElement(dragParentUl, dragParentLi);\n        this.removeData(node);\n    };\n    TreeView.prototype.updateInstance = function () {\n        this.updateList();\n        this.updateSelectedNodes();\n        this.updateExpandedNodes();\n    };\n    TreeView.prototype.updateList = function () {\n        this.liList = Array.prototype.slice.call(selectAll('.' + LISTITEM, this.element));\n    };\n    TreeView.prototype.updateSelectedNodes = function () {\n        this.setProperties({ selectedNodes: [] }, true);\n        var sNodes = selectAll('.' + ACTIVE, this.element);\n        this.selectGivenNodes(sNodes);\n    };\n    TreeView.prototype.updateExpandedNodes = function () {\n        this.setProperties({ expandedNodes: [] }, true);\n        var eNodes = selectAll('[aria-expanded=\"true\"]', this.element);\n        for (var i = 0, len = eNodes.length; i < len; i++) {\n            this.addExpand(eNodes[i]);\n        }\n    };\n    TreeView.prototype.removeData = function (node) {\n        if (this.dataType === 1) {\n            var dm = new DataManager(this.treeData);\n            var id = this.getId(node);\n            var data = {};\n            var newId = this.isNumberTypeId ? parseFloat(id) : id;\n            data[this.fields.id] = newId;\n            dm.remove(this.fields.id, data);\n            this.removeChildNodes(id);\n        }\n        else {\n            var id = this.getId(node);\n            this.updateChildField(this.treeData, this.fields, id, null, null, true);\n        }\n    };\n    TreeView.prototype.removeChildNodes = function (parentId) {\n        var cNodes = this.getChildGroup(this.groupedData, parentId, false);\n        var childData = [];\n        if (cNodes) {\n            for (var i = 0, len = cNodes.length; i < len; i++) {\n                var dm = new DataManager(this.treeData);\n                var id = getValue(this.fields.id, cNodes[i]).toString();\n                var data = {};\n                var currId = this.isNumberTypeId ? parseFloat(id) : id;\n                data[this.fields.id] = currId;\n                var nodeData = dm.remove(this.fields.id, data);\n                childData.push(nodeData[0]);\n                this.removeChildNodes(id);\n            }\n        }\n        return childData;\n    };\n    TreeView.prototype.doGivenAction = function (nodes, selector, toExpand) {\n        for (var i = 0, len = nodes.length; i < len; i++) {\n            var liEle = this.getElement(nodes[i]);\n            if (isNOU(liEle)) {\n                continue;\n            }\n            var icon = select('.' + selector, select('.' + TEXTWRAP, liEle));\n            if (!isNOU(icon)) {\n                toExpand ? this.expandAction(liEle, icon, null) : this.collapseNode(liEle, icon, null);\n            }\n        }\n    };\n    TreeView.prototype.addGivenNodes = function (nodes, dropLi, index, isRemote, dropEle) {\n        if (nodes.length === 0) {\n            return;\n        }\n        var sNodes = this.getSortedData(nodes);\n        var level = dropLi ? parseFloat(dropLi.getAttribute('aria-level')) + 1 : 1;\n        if (isRemote) {\n            this.updateMapper(level);\n        }\n        var li = ListBase.createListItemFromJson(this.createElement, sNodes, this.listBaseOption, level);\n        var dropUl;\n        if (!dropEle) {\n            dropUl = dropLi ? this.expandParent(dropLi) : select('.' + PARENTITEM, this.element);\n        }\n        else {\n            dropUl = dropEle;\n        }\n        var refNode = dropUl.childNodes[index];\n        if (refNode || this.sortOrder === 'None') {\n            for (var i = 0; i < li.length; i++) {\n                dropUl.insertBefore(li[i], refNode);\n            }\n        }\n        if (!refNode && ((this.sortOrder === 'Ascending') || (this.sortOrder === 'Descending'))) {\n            var cNodes = dropUl.childNodes;\n            for (var i = 0; i < li.length; i++) {\n                for (var j = 0; j < cNodes.length; j++) {\n                    var returnValue = (this.sortOrder === 'Ascending') ? cNodes[j].textContent.toUpperCase() > li[i].innerText.toUpperCase() : cNodes[j].textContent.toUpperCase() < li[i].innerText.toUpperCase();\n                    if (returnValue) {\n                        dropUl.insertBefore(li[i], cNodes[j]);\n                        break;\n                    }\n                    dropUl.insertBefore(li[i], cNodes[cNodes.length]);\n                }\n            }\n        }\n        var id = this.getId(dropLi);\n        if (this.dataType === 1) {\n            this.updateField(this.treeData, this.fields, id, 'hasChildren', true);\n            var refId = this.getId(refNode);\n            var pos = isNOU(refId) ? this.treeData.length : this.getDataPos(this.treeData, this.fields, refId);\n            for (var j = 0; j < nodes.length; j++) {\n                if (!isNOU(id)) {\n                    var currId = this.isNumberTypeId ? parseFloat(id) : id;\n                    setValue(this.fields.parentID, currId, nodes[j]);\n                }\n                this.treeData.splice(pos, 0, nodes[j]);\n                pos++;\n            }\n        }\n        else {\n            this.addChildData(this.treeData, this.fields, id, nodes, index);\n        }\n        this.finalizeNode(dropUl);\n    };\n    TreeView.prototype.updateMapper = function (level) {\n        var mapper = (level === 1) ? this.fields : this.getChildFields(this.fields, level - 1, 1);\n        this.updateListProp(mapper);\n    };\n    TreeView.prototype.updateListProp = function (mapper) {\n        var prop = this.getActualProperties(mapper);\n        this.listBaseOption.fields = prop;\n        this.listBaseOption.fields.url = prop.hasOwnProperty('navigateUrl') ? prop.navigateUrl : 'navigateUrl';\n    };\n    TreeView.prototype.getDataPos = function (obj, mapper, id) {\n        var pos = null;\n        for (var i = 0, objlen = obj.length; i < objlen; i++) {\n            var nodeId = getValue(mapper.id, obj[i]);\n            if (obj[i] && nodeId && nodeId.toString() === id) {\n                return i;\n            }\n            else if (typeof mapper.child === 'string' && !isNOU(getValue(mapper.child, obj[i]))) {\n                var data = getValue(mapper.child, obj[i]);\n                pos = this.getDataPos(data, this.getChildMapper(mapper), id);\n                if (pos !== null) {\n                    break;\n                }\n            }\n            else if (this.fields.dataSource instanceof DataManager && !isNOU(getValue('child', obj[i]))) {\n                var items = getValue('child', obj[i]);\n                pos = this.getDataPos(items, this.getChildMapper(mapper), id);\n                if (pos !== null) {\n                    break;\n                }\n            }\n        }\n        return pos;\n    };\n    TreeView.prototype.addChildData = function (obj, mapper, id, data, index) {\n        var updated;\n        if (isNOU(id)) {\n            index = isNOU(index) ? obj.length : index;\n            for (var k = 0, len = data.length; k < len; k++) {\n                obj.splice(index, 0, data[k]);\n                index++;\n            }\n            return updated;\n        }\n        for (var i = 0, objlen = obj.length; i < objlen; i++) {\n            var nodeId = getValue(mapper.id, obj[i]);\n            if (obj[i] && nodeId && nodeId.toString() === id) {\n                if ((typeof mapper.child === 'string' && (obj[i].hasOwnProperty(mapper.child) && obj[i][mapper.child] !== null)) ||\n                    ((this.fields.dataSource instanceof DataManager) && obj[i].hasOwnProperty('child'))) {\n                    var key = (typeof mapper.child === 'string') ? mapper.child : 'child';\n                    var childData = getValue(key, obj[i]);\n                    if (isNOU(childData)) {\n                        childData = [];\n                    }\n                    index = isNOU(index) ? childData.length : index;\n                    for (var k = 0, len = data.length; k < len; k++) {\n                        childData.splice(index, 0, data[k]);\n                        index++;\n                    }\n                }\n                else {\n                    var key = (typeof mapper.child === 'string') ? mapper.child : 'child';\n                    obj[i][key] = data;\n                }\n                return true;\n            }\n            else if (typeof mapper.child === 'string' && !isNOU(getValue(mapper.child, obj[i]))) {\n                var childObj = getValue(mapper.child, obj[i]);\n                updated = this.addChildData(childObj, this.getChildMapper(mapper), id, data, index);\n                if (updated !== undefined) {\n                    break;\n                }\n            }\n            else if ((this.fields.dataSource instanceof DataManager) && !isNOU(getValue('child', obj[i]))) {\n                var childData = getValue('child', obj[i]);\n                updated = this.addChildData(childData, this.getChildMapper(mapper), id, data, index);\n                if (updated !== undefined) {\n                    break;\n                }\n            }\n        }\n        return updated;\n    };\n    TreeView.prototype.doDisableAction = function (nodes) {\n        var validNodes = this.nodeType(nodes);\n        var validID = this.checkValidId(validNodes);\n        this.validArr = [];\n        for (var i = 0, len = validID.length; i < len; i++) {\n            var id = validID[i][this.fields.id].toString();\n            if (id && this.disableNode.indexOf(id) === -1) {\n                this.disableNode.push(id);\n            }\n            var liEle = this.getElement(id);\n            if (liEle) {\n                liEle.setAttribute('aria-disabled', 'true');\n                addClass([liEle], DISABLE);\n            }\n        }\n    };\n    TreeView.prototype.doEnableAction = function (nodes) {\n        var strNodes = this.nodeType(nodes);\n        for (var i = 0, len = strNodes.length; i < len; i++) {\n            var liEle = this.getElement(strNodes[i]);\n            var id = strNodes[i];\n            if (id && this.disableNode.indexOf(id) !== -1) {\n                this.disableNode.splice(this.disableNode.indexOf(id), 1);\n            }\n            if (liEle) {\n                liEle.removeAttribute('aria-disabled');\n                removeClass([liEle], DISABLE);\n            }\n        }\n    };\n    TreeView.prototype.nodeType = function (nodes) {\n        var validID = [];\n        for (var i = 0, len = nodes.length; i < len; i++) {\n            var id = void 0;\n            if (typeof nodes[i] == \"string\") {\n                id = (nodes[i]) ? nodes[i].toString() : null;\n            }\n            else if (typeof nodes[i] === \"object\") {\n                id = nodes[i] ? nodes[i].getAttribute(\"data-uid\").toString() : null;\n            }\n            if (validID.indexOf(id) == -1) {\n                validID.push(id);\n            }\n        }\n        return validID;\n    };\n    TreeView.prototype.checkValidId = function (node) {\n        var _this = this;\n        if (this.dataType === 1) {\n            this.validArr = this.treeData.filter(function (data) {\n                return node.indexOf(data[_this.fields.id] ? data[_this.fields.id].toString() : null) !== -1;\n            });\n        }\n        else if (this.dataType === 2) {\n            for (var k = 0; k < this.treeData.length; k++) {\n                var id = this.treeData[k][this.fields.id] ? this.treeData[k][this.fields.id].toString() : null;\n                if (node.indexOf(id) !== -1) {\n                    this.validArr.push(this.treeData[k]);\n                }\n                var childItems = getValue(this.fields.child.toString(), this.treeData[k]);\n                if (childItems) {\n                    this.filterNestedChild(childItems, node);\n                }\n            }\n        }\n        return this.validArr;\n    };\n    TreeView.prototype.filterNestedChild = function (treeData, nodes) {\n        for (var k = 0; k < treeData.length; k++) {\n            var id = treeData[k][this.fields.id] ? treeData[k][this.fields.id].toString() : null;\n            if (nodes.indexOf(id) !== -1) {\n                this.validArr.push(treeData[k]);\n            }\n            var childItems = getValue(this.fields.child.toString(), treeData[k]);\n            if (childItems) {\n                this.filterNestedChild(childItems, nodes);\n            }\n        }\n    };\n    TreeView.prototype.setTouchClass = function () {\n        var ele = closest(this.element, '.' + BIGGER);\n        this.touchClass = isNOU(ele) ? '' : SMALL;\n    };\n    TreeView.prototype.updatePersistProp = function () {\n        this.removeField(this.treeData, this.fields, ['selected', 'expanded']);\n        var sleNodes = this.selectedNodes;\n        for (var l = 0, slelen = sleNodes.length; l < slelen; l++) {\n            this.updateField(this.treeData, this.fields, sleNodes[l], 'selected', true);\n        }\n        var enodes = this.expandedNodes;\n        for (var k = 0, nodelen = enodes.length; k < nodelen; k++) {\n            this.updateField(this.treeData, this.fields, enodes[k], 'expanded', true);\n        }\n        if (this.showCheckBox) {\n            this.removeField(this.treeData, this.fields, ['isChecked']);\n            var cnodes = this.checkedNodes;\n            for (var m = 0, nodelen = cnodes.length; m < nodelen; m++) {\n                this.updateField(this.treeData, this.fields, cnodes[m], 'isChecked', true);\n            }\n        }\n    };\n    TreeView.prototype.removeField = function (obj, mapper, names) {\n        if (isNOU(obj) || isNOU(mapper)) {\n            return;\n        }\n        for (var i = 0, objlen = obj.length; i < objlen; i++) {\n            for (var j = 0; j < names.length; j++) {\n                var field = this.getMapperProp(mapper, names[j]);\n                if (!isNOU(obj[i][field])) {\n                    delete obj[i][field];\n                }\n            }\n            if (typeof mapper.child === 'string' && !isNOU(getValue(mapper.child, obj[i]))) {\n                this.removeField(getValue(mapper.child, obj[i]), this.getChildMapper(mapper), names);\n            }\n            else if (this.fields.dataSource instanceof DataManager && !isNOU(getValue('child', obj[i]))) {\n                this.removeField(getValue('child', obj[i]), this.getChildMapper(mapper), names);\n            }\n        }\n    };\n    TreeView.prototype.getMapperProp = function (mapper, fieldName) {\n        switch (fieldName) {\n            case 'selected':\n                return !isNOU(mapper.selected) ? mapper.selected : 'selected';\n            case 'expanded':\n                return !isNOU(mapper.expanded) ? mapper.expanded : 'expanded';\n            case 'isChecked':\n                return !isNOU(mapper.isChecked) ? mapper.isChecked : 'isChecked';\n            case 'hasChildren':\n                return !isNOU(mapper.hasChildren) ? mapper.hasChildren : 'hasChildren';\n            default:\n                return fieldName;\n        }\n    };\n    TreeView.prototype.updateField = function (obj, mapper, id, key, value) {\n        var childNodes;\n        if (isNOU(id)) {\n            return;\n        }\n        else if (this.dataType === 1) {\n            var newId = this.isNumberTypeId ? parseFloat(id) : id;\n            var resultData = new DataManager(this.treeData).executeLocal(new Query().where(mapper.id, 'equal', newId, false));\n            setValue(this.getMapperProp(mapper, key), value, resultData[0]);\n        }\n        else {\n            this.updateChildField(obj, mapper, id, key, value);\n        }\n    };\n    TreeView.prototype.updateChildField = function (obj, mapper, id, key, value, remove) {\n        var removedData;\n        if (isNOU(obj)) {\n            return removedData;\n        }\n        for (var i = 0, objlen = obj.length; i < objlen; i++) {\n            var nodeId = getValue(mapper.id, obj[i]);\n            if (obj[i] && nodeId && nodeId.toString() === id) {\n                if (remove) {\n                    removedData = obj.splice(i, 1);\n                }\n                else {\n                    setValue(this.getMapperProp(mapper, key), value, obj[i]);\n                    removedData = [];\n                }\n                return removedData;\n            }\n            else if (typeof mapper.child === 'string' && !isNOU(getValue(mapper.child, obj[i]))) {\n                var childData = getValue(mapper.child, obj[i]);\n                removedData = this.updateChildField(childData, this.getChildMapper(mapper), id, key, value, remove);\n                if (removedData !== undefined) {\n                    break;\n                }\n            }\n            else if (this.fields.dataSource instanceof DataManager && !isNOU(getValue('child', obj[i]))) {\n                var childItems = getValue('child', obj[i]);\n                removedData = this.updateChildField(childItems, this.getChildMapper(mapper), id, key, value, remove);\n                if (removedData !== undefined) {\n                    break;\n                }\n            }\n        }\n        return removedData;\n    };\n    TreeView.prototype.triggerEvent = function () {\n        this.renderReactTemplates();\n        var eventArgs = { data: this.treeData };\n        this.trigger('dataSourceChanged', eventArgs);\n    };\n    TreeView.prototype.wireInputEvents = function (inpEle) {\n        EventHandler.add(inpEle, 'blur', this.inputFocusOut, this);\n    };\n    TreeView.prototype.wireEditingEvents = function (toBind) {\n        var _this = this;\n        if (toBind && !this.disabled) {\n            var proxy_2 = this;\n            this.touchEditObj = new Touch(this.element, {\n                tap: function (e) {\n                    if (_this.isDoubleTapped(e) && e.tapCount === 2) {\n                        e.originalEvent.preventDefault();\n                        proxy_2.editingHandler(e.originalEvent);\n                    }\n                }\n            });\n        }\n        else {\n            if (this.touchEditObj) {\n                this.touchEditObj.destroy();\n            }\n        }\n    };\n    TreeView.prototype.wireClickEvent = function (toBind) {\n        if (toBind) {\n            var proxy_3 = this;\n            this.touchClickObj = new Touch(this.element, {\n                tap: function (e) {\n                    proxy_3.clickHandler(e);\n                }\n            });\n        }\n        else {\n            if (this.touchClickObj) {\n                this.touchClickObj.destroy();\n            }\n        }\n    };\n    TreeView.prototype.wireExpandOnEvent = function (toBind) {\n        var _this = this;\n        if (toBind) {\n            var proxy_4 = this;\n            this.touchExpandObj = new Touch(this.element, {\n                tap: function (e) {\n                    if ((_this.expandOnType === 'Click' || (_this.expandOnType === 'DblClick' && _this.isDoubleTapped(e) && e.tapCount === 2))\n                        && e.originalEvent.which !== 3) {\n                        proxy_4.expandHandler(e);\n                    }\n                }\n            });\n        }\n        else {\n            if (this.touchExpandObj) {\n                this.touchExpandObj.destroy();\n            }\n        }\n    };\n    TreeView.prototype.mouseDownHandler = function (e) {\n        this.mouseDownStatus = true;\n        if (e.shiftKey || e.ctrlKey) {\n            e.preventDefault();\n        }\n        if (e.ctrlKey && this.allowMultiSelection) {\n            EventHandler.add(this.element, 'contextmenu', this.preventContextMenu, this);\n        }\n    };\n    ;\n    TreeView.prototype.preventContextMenu = function (e) {\n        e.preventDefault();\n    };\n    TreeView.prototype.wireEvents = function () {\n        EventHandler.add(this.element, 'mousedown', this.mouseDownHandler, this);\n        this.wireClickEvent(true);\n        if (this.expandOnType !== 'None') {\n            this.wireExpandOnEvent(true);\n        }\n        EventHandler.add(this.element, 'focus', this.focusIn, this);\n        EventHandler.add(this.element, 'blur', this.focusOut, this);\n        EventHandler.add(this.element, 'mouseover', this.onMouseOver, this);\n        EventHandler.add(this.element, 'mouseout', this.onMouseLeave, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.keyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown',\n        });\n    };\n    TreeView.prototype.unWireEvents = function () {\n        EventHandler.remove(this.element, 'mousedown', this.mouseDownHandler);\n        this.wireClickEvent(false);\n        this.wireExpandOnEvent(false);\n        EventHandler.remove(this.element, 'focus', this.focusIn);\n        EventHandler.remove(this.element, 'blur', this.focusOut);\n        EventHandler.remove(this.element, 'mouseover', this.onMouseOver);\n        EventHandler.remove(this.element, 'mouseout', this.onMouseLeave);\n        if (!this.disabled) {\n            this.keyboardModule.destroy();\n        }\n    };\n    TreeView.prototype.parents = function (element, selector) {\n        var matched = [];\n        var el = element.parentNode;\n        while (!isNOU(el)) {\n            if (matches(el, selector)) {\n                matched.push(el);\n            }\n            el = el.parentNode;\n        }\n        return matched;\n    };\n    TreeView.prototype.isDoubleTapped = function (e) {\n        var target = e.originalEvent.target;\n        var secondTap;\n        if (target && e.tapCount) {\n            if (e.tapCount === 1) {\n                this.firstTap = closest(target, '.' + LISTITEM);\n            }\n            else if (e.tapCount === 2) {\n                secondTap = closest(target, '.' + LISTITEM);\n            }\n        }\n        return (this.firstTap === secondTap);\n    };\n    TreeView.prototype.isDescendant = function (parent, child) {\n        var node = child.parentNode;\n        while (!isNOU(node)) {\n            if (node === parent) {\n                return true;\n            }\n            node = node.parentNode;\n        }\n        return false;\n    };\n    TreeView.prototype.showSpinner = function (element) {\n        addClass([element], LOAD);\n        createSpinner({\n            target: element,\n            width: Browser.isDevice ? 16 : 14\n        }, this.createElement);\n        showSpinner(element);\n    };\n    TreeView.prototype.hideSpinner = function (element) {\n        hideSpinner(element);\n        element.innerHTML = '';\n        removeClass([element], LOAD);\n    };\n    TreeView.prototype.setCheckedNodes = function (nodes) {\n        nodes = JSON.parse(JSON.stringify(nodes));\n        this.uncheckAll(this.checkedNodes);\n        this.setIndeterminate(nodes);\n        if (nodes.length > 0) {\n            this.checkAll(nodes);\n        }\n    };\n    /**\n     * Checks whether the checkedNodes entered are valid and sets the valid checkedNodes while changing via setmodel\n     */\n    TreeView.prototype.setValidCheckedNode = function (node) {\n        if (this.dataType === 1) {\n            var mapper = this.fields;\n            var resultData = new DataManager(this.treeData).executeLocal(new Query().where(mapper.id, 'equal', node, true));\n            if (resultData[0]) {\n                this.setChildCheckState(resultData, node, resultData[0]);\n                if (this.autoCheck) {\n                    var parent_4 = resultData[0][this.fields.parentID] ? resultData[0][this.fields.parentID].toString() : null;\n                    var childNodes = this.getChildNodes(this.treeData, parent_4);\n                    var count = 0;\n                    for (var len = 0; len < childNodes.length; len++) {\n                        var childId = childNodes[len][this.fields.id].toString();\n                        if (this.checkedNodes.indexOf(childId) !== -1) {\n                            count++;\n                        }\n                    }\n                    if (count === childNodes.length && this.checkedNodes.indexOf(parent_4) === -1 && parent_4) {\n                        this.checkedNodes.push(parent_4);\n                    }\n                }\n            }\n        }\n        else if (this.dataType === 2) {\n            for (var a = 0; a < this.treeData.length; a++) {\n                var index = this.treeData[a][this.fields.id] ? this.treeData[a][this.fields.id].toString() : '';\n                if (index === node && this.checkedNodes.indexOf(node) === -1) {\n                    this.checkedNodes.push(node);\n                    break;\n                }\n                var childItems = getValue(this.fields.child.toString(), this.treeData[a]);\n                if (childItems) {\n                    this.setChildCheckState(childItems, node, this.treeData[a]);\n                }\n            }\n        }\n    };\n    /**\n     * Checks whether the checkedNodes entered are valid and sets the valid checkedNodes while changing via setmodel(for hierarchical DS)\n     */\n    TreeView.prototype.setChildCheckState = function (childItems, node, treeData) {\n        var checkedParent;\n        var count = 0;\n        if (this.dataType === 1) {\n            if (treeData) {\n                checkedParent = treeData[this.fields.id] ? treeData[this.fields.id].toString() : null;\n            }\n            for (var index = 0; index < childItems.length; index++) {\n                var checkNode = childItems[index][this.fields.id] ? childItems[index][this.fields.id].toString() : null;\n                if (treeData && checkedParent && this.autoCheck) {\n                    if (this.checkedNodes.indexOf(checkedParent) !== -1 && this.checkedNodes.indexOf(checkNode) === -1) {\n                        this.checkedNodes.push(checkNode);\n                    }\n                }\n                if (checkNode === node && this.checkedNodes.indexOf(node) === -1) {\n                    this.checkedNodes.push(node);\n                }\n                var subChildItems = this.getChildNodes(this.treeData, checkNode);\n                if (subChildItems) {\n                    this.setChildCheckState(subChildItems, node, treeData);\n                }\n            }\n        }\n        else {\n            if (treeData) {\n                checkedParent = treeData[this.fields.id] ? treeData[this.fields.id].toString() : '';\n            }\n            for (var index = 0; index < childItems.length; index++) {\n                var checkedChild = childItems[index][this.fields.id] ? childItems[index][this.fields.id].toString() : '';\n                if (treeData && checkedParent && this.autoCheck) {\n                    if (this.checkedNodes.indexOf(checkedParent) !== -1 && this.checkedNodes.indexOf(checkedChild) === -1) {\n                        this.checkedNodes.push(checkedChild);\n                    }\n                }\n                if (checkedChild === node && this.checkedNodes.indexOf(node) === -1) {\n                    this.checkedNodes.push(node);\n                }\n                var subChildItems = getValue(this.fields.child.toString(), childItems[index]);\n                if (subChildItems) {\n                    this.setChildCheckState(subChildItems, node, childItems[index]);\n                }\n                if (this.checkedNodes.indexOf(checkedChild) !== -1 && this.autoCheck) {\n                    count++;\n                }\n                if (count === childItems.length && this.checkedNodes.indexOf(checkedParent) === -1 && this.autoCheck) {\n                    this.checkedNodes.push(checkedParent);\n                }\n            }\n        }\n    };\n    TreeView.prototype.setIndeterminate = function (nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            this.setValidCheckedNode(nodes[i]);\n        }\n    };\n    TreeView.prototype.updatePosition = function (id, newData, isRefreshChild, childValue) {\n        if (this.dataType === 1) {\n            var pos = this.getDataPos(this.treeData, this.fields, id);\n            this.treeData.splice(pos, 1, newData);\n            if (isRefreshChild) {\n                this.removeChildNodes(id);\n                for (var j = 0; j < childValue.length; j++) {\n                    this.treeData.splice(pos, 0, childValue[j]);\n                    pos++;\n                }\n            }\n            this.groupedData = this.getGroupedData(this.treeData, this.fields.parentID);\n        }\n        else {\n            this.updateChildPosition(this.treeData, this.fields, id, [newData], undefined);\n        }\n    };\n    TreeView.prototype.updateChildPosition = function (treeData, mapper, currID, newData, index) {\n        var found;\n        for (var i = 0, objlen = treeData.length; i < objlen; i++) {\n            var nodeId = getValue(mapper.id, treeData[i]);\n            if (treeData[i] && nodeId && nodeId.toString() === currID) {\n                treeData[i] = newData[0];\n                return true;\n            }\n            else if (typeof mapper.child === 'string' && !isNOU(getValue(mapper.child, treeData[i]))) {\n                var childObj = getValue(mapper.child, treeData[i]);\n                found = this.updateChildPosition(childObj, this.getChildMapper(mapper), currID, newData, index);\n                if (found !== undefined) {\n                    break;\n                }\n            }\n            else if (this.fields.dataSource instanceof DataManager && !isNOU(getValue('child', treeData[i]))) {\n                var childData = getValue('child', treeData[i]);\n                found = this.updateChildPosition(childData, this.getChildMapper(mapper), currID, newData, index);\n                if (found !== undefined) {\n                    break;\n                }\n            }\n        }\n        return found;\n    };\n    TreeView.prototype.dynamicState = function () {\n        this.setDragAndDrop(this.allowDragAndDrop);\n        this.wireEditingEvents(this.allowEditing);\n        if (!this.disabled) {\n            this.wireEvents();\n            this.setRipple();\n        }\n        else {\n            this.unWireEvents();\n            this.rippleFn();\n            this.rippleIconFn();\n        }\n    };\n    TreeView.prototype.crudOperation = function (operation, nodes, target, newText, newNode, index, prevent) {\n        var _this = this;\n        var data = this.fields.dataSource;\n        var matchedArr = [];\n        var query = this.getQuery(this.fields);\n        var key = this.fields.id;\n        var crud;\n        var changes = {\n            addedRecords: [],\n            deletedRecords: [],\n            changedRecords: []\n        };\n        var nodesID = [];\n        if (nodes) {\n            nodesID = this.nodeType(nodes);\n        }\n        else if (target) {\n            if (typeof target == \"string\") {\n                nodesID[0] = target.toString();\n            }\n            else if (typeof target === \"object\") {\n                nodesID[0] = target.getAttribute(\"data-uid\").toString();\n            }\n        }\n        for (var i = 0, len = nodesID.length; i < len; i++) {\n            var liEle = this.getElement(nodesID[i]);\n            if (isNullOrUndefined(liEle)) {\n                continue;\n            }\n            var removedData = this.getNodeObject(nodesID[i]);\n            matchedArr.push(removedData);\n        }\n        switch (operation) {\n            case 'delete':\n                if (nodes.length == 1) {\n                    crud = data.remove(key, matchedArr[0], query.fromTable, query);\n                }\n                else {\n                    changes.deletedRecords = matchedArr;\n                    crud = data.saveChanges(changes, key, query.fromTable, query);\n                }\n                crud.then(function (e) { return _this.deleteSuccess(nodesID); })\n                    .catch(function (e) { return _this.dmFailure(e); });\n                break;\n            case 'update':\n                matchedArr[0][this.fields.text] = newText;\n                crud = data.update(key, matchedArr[0], query.fromTable, query);\n                crud.then(function (e) { return _this.editSucess(target, newText, prevent); })\n                    .catch(function (e) { return _this.dmFailure(e, target, prevent); });\n                break;\n            case 'insert':\n                if (newNode.length == 1) {\n                    crud = data.insert(newNode[0], query.fromTable, query);\n                }\n                else {\n                    var arr = [];\n                    for (var i = 0, len = newNode.length; i < len; i++) {\n                        arr.push(newNode[i]);\n                    }\n                    changes.addedRecords = arr;\n                    crud = data.saveChanges(changes, key, query.fromTable, query);\n                }\n                crud.then(function (e) {\n                    var dropLi = _this.getElement(target);\n                    _this.addSuccess(newNode, dropLi, index);\n                    _this.preventExpand = false;\n                }).catch(function (e) { return _this.dmFailure(e); });\n                break;\n        }\n    };\n    TreeView.prototype.deleteSuccess = function (nodes) {\n        for (var i = 0, len = nodes.length; i < len; i++) {\n            var liEle = this.getElement(nodes[i]);\n            if (isNOU(liEle)) {\n                continue;\n            }\n            this.removeNode(liEle);\n        }\n        this.updateInstance();\n        if (this.dataType === 1) {\n            this.groupedData = this.getGroupedData(this.treeData, this.fields.parentID);\n        }\n        this.triggerEvent();\n    };\n    TreeView.prototype.editSucess = function (target, newText, prevent) {\n        var liEle = this.getElement(target);\n        var txtEle = select('.' + LISTTEXT, liEle);\n        this.appendNewText(liEle, txtEle, newText, prevent);\n    };\n    TreeView.prototype.addSuccess = function (nodes, dropLi, index) {\n        var dropUl;\n        var icon = dropLi ? dropLi.querySelector('.' + ICON) : null;\n        var proxy = this;\n        if (dropLi && icon && icon.classList.contains(EXPANDABLE) &&\n            dropLi.querySelector('.' + PARENTITEM) === null) {\n            proxy.renderChildNodes(dropLi, null, function () {\n                dropUl = dropLi.querySelector('.' + PARENTITEM);\n                proxy.addGivenNodes(nodes, dropLi, index, true, dropUl);\n                proxy.triggerEvent();\n            });\n        }\n        else {\n            this.addGivenNodes(nodes, dropLi, index, true);\n            this.triggerEvent();\n        }\n    };\n    TreeView.prototype.dmFailure = function (e, target, prevent) {\n        if (target) {\n            this.updatePreviousText(target, prevent);\n        }\n        this.trigger('actionFailure', { error: e });\n    };\n    TreeView.prototype.updatePreviousText = function (target, prevent) {\n        var liEle = this.getElement(target);\n        var txtEle = select('.' + LISTTEXT, liEle);\n        this.updateText(liEle, txtEle, this.oldText, prevent);\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @param  {TreeView} newProp\n     * @param  {TreeView} oldProp\n     * @returns void\n     * @private\n     */\n    TreeView.prototype.onPropertyChanged = function (newProp, oldProp) {\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'allowDragAndDrop':\n                    this.setDragAndDrop(this.allowDragAndDrop);\n                    break;\n                case 'dragArea':\n                    if (this.allowDragAndDrop) {\n                        this.dragObj.dragArea = this.dragArea;\n                    }\n                    break;\n                case 'allowEditing':\n                    this.wireEditingEvents(this.allowEditing);\n                    break;\n                case 'allowMultiSelection':\n                    if (this.selectedNodes.length > 1) {\n                        var sNode = this.getElement(this.selectedNodes[0]);\n                        this.isLoaded = false;\n                        this.removeSelectAll();\n                        this.selectNode(sNode, null);\n                        this.isLoaded = true;\n                    }\n                    this.setMultiSelect(this.allowMultiSelection);\n                    this.addMultiSelect(this.allowMultiSelection);\n                    break;\n                case 'allowTextWrap':\n                    this.setTextWrap();\n                    this.updateWrap();\n                    break;\n                case 'checkedNodes':\n                    if (this.showCheckBox) {\n                        this.checkedNodes = oldProp.checkedNodes;\n                        this.setCheckedNodes(newProp.checkedNodes);\n                    }\n                    break;\n                case 'autoCheck':\n                    if (this.showCheckBox) {\n                        this.autoCheck = newProp.autoCheck;\n                        this.ensureIndeterminate();\n                    }\n                    break;\n                case 'cssClass':\n                    this.setCssClass(oldProp.cssClass, newProp.cssClass);\n                    break;\n                case 'enableRtl':\n                    this.setEnableRtl();\n                    break;\n                case 'expandedNodes':\n                    this.isAnimate = false;\n                    this.setProperties({ expandedNodes: [] }, true);\n                    this.collapseAll();\n                    this.isInitalExpand = true;\n                    this.setProperties({ expandedNodes: isNOU(newProp.expandedNodes) ? [] : newProp.expandedNodes }, true);\n                    this.doExpandAction();\n                    this.isInitalExpand = false;\n                    this.isAnimate = true;\n                    break;\n                case 'expandOn':\n                    this.wireExpandOnEvent(false);\n                    this.setExpandOnType();\n                    if (this.expandOnType !== 'None' && !this.disabled) {\n                        this.wireExpandOnEvent(true);\n                    }\n                    break;\n                case 'disabled':\n                    this.setDisabledMode();\n                    this.dynamicState();\n                    break;\n                case 'fields':\n                    this.isAnimate = false;\n                    this.isFieldChange = true;\n                    this.initialRender = true;\n                    this.reRenderNodes();\n                    this.initialRender = false;\n                    this.isAnimate = true;\n                    this.isFieldChange = false;\n                    break;\n                case 'fullRowSelect':\n                    this.setFullRow(this.fullRowSelect);\n                    this.addFullRow(this.fullRowSelect);\n                    if (this.allowTextWrap) {\n                        this.setTextWrap();\n                        this.updateWrap();\n                    }\n                    break;\n                case 'loadOnDemand':\n                    if (this.loadOnDemand === false && !this.onLoaded) {\n                        var nodes = this.element.querySelectorAll('li');\n                        var i = 0;\n                        while (i < nodes.length) {\n                            if (nodes[i].getAttribute('aria-expanded') !== 'true') {\n                                this.renderChildNodes(nodes[i], true, null, true);\n                            }\n                            i++;\n                        }\n                        this.onLoaded = true;\n                    }\n                    break;\n                case 'nodeTemplate':\n                    this.hasTemplate = false;\n                    this.nodeTemplateFn = this.templateComplier(this.nodeTemplate);\n                    this.reRenderNodes();\n                    break;\n                case 'selectedNodes':\n                    this.removeSelectAll();\n                    this.setProperties({ selectedNodes: newProp.selectedNodes }, true);\n                    this.doSelectionAction();\n                    break;\n                case 'showCheckBox':\n                    this.reRenderNodes();\n                    break;\n                case 'sortOrder':\n                    this.reRenderNodes();\n                    break;\n                case 'fullRowNavigable':\n                    this.setProperties({ fullRowNavigable: newProp.fullRowNavigable }, true);\n                    this.listBaseOption.itemNavigable = newProp.fullRowNavigable;\n                    this.reRenderNodes();\n                    break;\n            }\n        }\n    };\n    /**\n     * Removes the component from the DOM and detaches all its related event handlers. It also removes the attributes and classes.\n     */\n    TreeView.prototype.destroy = function () {\n        this.clearTemplate();\n        this.element.removeAttribute('aria-activedescendant');\n        this.element.removeAttribute('tabindex');\n        this.unWireEvents();\n        this.wireEditingEvents(false);\n        if (!this.disabled) {\n            this.rippleFn();\n            this.rippleIconFn();\n        }\n        this.setCssClass(this.cssClass, null);\n        this.setDragAndDrop(false);\n        this.setFullRow(false);\n        if (this.ulElement && this.ulElement.parentElement) {\n            this.ulElement.parentElement.removeChild(this.ulElement);\n        }\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Adds the collection of TreeView nodes based on target and index position. If target node is not specified,\n     * then the nodes are added as children of the given parentID or in the root level of TreeView.\n     * @param  { { [key: string]: Object }[] } nodes - Specifies the array of JSON data that has to be added.\n     * @param  { string | Element } target - Specifies ID of TreeView node/TreeView node as target element.\n     * @param  { number } index - Specifies the index to place the newly added nodes in the target element.\n     * @param { boolean } preventTargetExpand - If set to true, the target parent node will be prevented from auto expanding.\n     */\n    TreeView.prototype.addNodes = function (nodes, target, index, preventTargetExpand) {\n        if (isNOU(nodes)) {\n            return;\n        }\n        nodes = JSON.parse(JSON.stringify(nodes));\n        var dropLi = this.getElement(target);\n        this.preventExpand = preventTargetExpand;\n        if (this.fields.dataSource instanceof DataManager) {\n            if (!this.isOffline) {\n                this.crudOperation('insert', null, target, null, nodes, index, this.preventExpand);\n            }\n            else {\n                this.addSuccess(nodes, dropLi, index);\n            }\n        }\n        else if (this.dataType === 2) {\n            this.addGivenNodes(nodes, dropLi, index);\n        }\n        else {\n            if (dropLi) {\n                this.addGivenNodes(nodes, dropLi, index);\n            }\n            else {\n                nodes = this.getSortedData(nodes);\n                for (var i = 0; i < nodes.length; i++) {\n                    var pid = getValue(this.fields.parentID, nodes[i]);\n                    dropLi = pid ? this.getElement(pid.toString()) : pid;\n                    this.addGivenNodes([nodes[i]], dropLi, index);\n                }\n            }\n            this.groupedData = this.getGroupedData(this.treeData, this.fields.parentID);\n        }\n        this.updateCheckedStateFromDS();\n        if (this.showCheckBox && dropLi) {\n            this.ensureParentCheckState(dropLi);\n        }\n        if ((this.fields.dataSource instanceof DataManager === false)) {\n            this.preventExpand = false;\n            this.triggerEvent();\n        }\n    };\n    /**\n     * Instead of clicking on the TreeView node for editing, we can enable it by using\n     * `beginEdit` property. On passing the node ID or element through this property, the edit textBox\n     * will be created for the particular node thus allowing us to edit it.\n     * @param  {string | Element} node - Specifies ID of TreeView node/TreeView node.\n     */\n    TreeView.prototype.beginEdit = function (node) {\n        var ele = this.getElement(node);\n        if (isNOU(ele) || this.disabled) {\n            return;\n        }\n        this.createTextbox(ele, null);\n    };\n    /**\n     * Checks all the unchecked nodes. You can also check specific nodes by passing array of unchecked nodes\n     * as argument to this method.\n     * @param  {string[] | Element[]} nodes - Specifies the array of TreeView nodes ID/array of TreeView node.\n     */\n    TreeView.prototype.checkAll = function (nodes) {\n        if (this.showCheckBox) {\n            this.doCheckBoxAction(nodes, true);\n        }\n    };\n    /**\n     * Collapses all the expanded TreeView nodes. You can collapse specific nodes by passing array of nodes as argument to this method.\n     * You can also collapse all the nodes excluding the hidden nodes by setting **excludeHiddenNodes** to true. If you want to collapse\n     * a specific level of nodes, set **level** as argument to collapseAll method.\n     * @param  {string[] | Element[]} nodes - Specifies the array of TreeView nodes ID/ array of TreeView node.\n     * @param  {number} level - TreeView nodes will collapse up to the given level.\n     * @param  {boolean} excludeHiddenNodes - Whether or not to exclude hidden nodes of TreeView when collapsing all nodes.\n     */\n    TreeView.prototype.collapseAll = function (nodes, level, excludeHiddenNodes) {\n        if (!isNOU(nodes)) {\n            this.doGivenAction(nodes, COLLAPSIBLE, false);\n        }\n        else {\n            if (level > 0) {\n                this.collapseByLevel(select('.' + PARENTITEM, this.element), level, excludeHiddenNodes);\n            }\n            else {\n                this.collapseAllNodes(excludeHiddenNodes);\n            }\n        }\n    };\n    /**\n     * Disables the collection of nodes by passing the ID of nodes or node elements in the array.\n     * @param  {string[] | Element[]} nodes - Specifies the array of TreeView nodes ID/array of TreeView nodes.\n     */\n    TreeView.prototype.disableNodes = function (nodes) {\n        if (!isNOU(nodes)) {\n            this.doDisableAction(nodes);\n        }\n    };\n    /**\n     * Enables the collection of disabled nodes by passing the ID of nodes or node elements in the array.\n     * @param  {string[] | Element[]} nodes - Specifies the array of TreeView nodes ID/array of TreeView nodes.\n     */\n    TreeView.prototype.enableNodes = function (nodes) {\n        if (!isNOU(nodes)) {\n            this.doEnableAction(nodes);\n        }\n    };\n    /**\n     * Ensures visibility of the TreeView node by using node ID or node element.\n     * When many TreeView nodes are present and we need to find a particular node, `ensureVisible` property\n     * helps bring the node to visibility by expanding the TreeView and scrolling to the specific node.\n     * @param  {string | Element} node - Specifies ID of TreeView node/TreeView nodes.\n     */\n    TreeView.prototype.ensureVisible = function (node) {\n        var liEle = this.getElement(node);\n        if (isNOU(liEle)) {\n            return;\n        }\n        var parents = this.parents(liEle, '.' + LISTITEM);\n        this.expandAll(parents);\n        setTimeout(function () { liEle.scrollIntoView(true); }, 450);\n    };\n    /**\n     * Expands all the collapsed TreeView nodes. You can expand the specific nodes by passing the array of collapsed nodes\n     * as argument to this method. You can also expand all the collapsed nodes by excluding the hidden nodes by setting\n     * **excludeHiddenNodes** to true to this method. To expand a specific level of nodes, set **level** as argument to expandAll method.\n     * @param  {string[] | Element[]} nodes - Specifies the array of TreeView nodes ID/array of TreeView nodes.\n     * @param  {number} level - TreeView nodes will expand up to the given level.\n     * @param  {boolean} excludeHiddenNodes - Whether or not to exclude hidden nodes when expanding all nodes.\n     */\n    TreeView.prototype.expandAll = function (nodes, level, excludeHiddenNodes) {\n        if (!isNOU(nodes)) {\n            this.doGivenAction(nodes, EXPANDABLE, true);\n        }\n        else {\n            if (level > 0) {\n                this.expandByLevel(select('.' + PARENTITEM, this.element), level, excludeHiddenNodes);\n            }\n            else {\n                this.expandAllNodes(excludeHiddenNodes);\n            }\n        }\n    };\n    /**\n     * Gets all the checked nodes including child, whether it is loaded or not.\n     */\n    TreeView.prototype.getAllCheckedNodes = function () {\n        var checkNodes = this.checkedNodes;\n        return checkNodes;\n    };\n    /**\n    * Gets all the disabled nodes including child, whether it is loaded or not.\n    */\n    TreeView.prototype.getDisabledNodes = function () {\n        var disabledNodes = this.disableNode;\n        return disabledNodes;\n    };\n    /**\n     * Get the node's data such as id, text, parentID, selected, isChecked, and expanded by passing the node element or it's ID.\n     * @param  {string | Element} node - Specifies ID of TreeView node/TreeView node.\n     */\n    TreeView.prototype.getNode = function (node) {\n        var ele = this.getElement(node);\n        return this.getNodeData(ele, true);\n    };\n    /**\n     * To get the updated data source of TreeView after performing some operation like drag and drop, node editing,\n     * node selecting/unSelecting, node expanding/collapsing, node checking/unChecking, adding and removing node.\n     * * If you pass the ID of TreeView node as arguments for this method then it will return the updated data source\n     * of the corresponding node otherwise it will return the entire updated data source of TreeView.\n     * * The updated data source also contains custom attributes if you specified in data source.\n     * @param  {string | Element} node - Specifies ID of TreeView node/TreeView node.\n     * @isGenericType true\n     */\n    TreeView.prototype.getTreeData = function (node) {\n        var id = this.getId(node);\n        this.updatePersistProp();\n        if (isNOU(id)) {\n            return this.treeData;\n        }\n        else {\n            var data = this.getNodeObject(id);\n            return isNOU(data) ? [] : [data];\n        }\n    };\n    /**\n     * Moves the collection of nodes within the same TreeView based on target or its index position.\n     * @param  {string[] | Element[]} sourceNodes - Specifies the array of TreeView nodes ID/array of TreeView node.\n     * @param  {string | Element} target - Specifies ID of TreeView node/TreeView node as target element.\n     * @param  {number} index - Specifies the index to place the moved nodes in the target element.\n     * @param { boolean } preventTargetExpand - If set to true, the target parent node will be prevented from auto expanding.\n     */\n    TreeView.prototype.moveNodes = function (sourceNodes, target, index, preventTargetExpand) {\n        var dropLi = this.getElement(target);\n        if (isNOU(dropLi)) {\n            return;\n        }\n        for (var i = 0; i < sourceNodes.length; i++) {\n            var dragLi = this.getElement(sourceNodes[i]);\n            if (isNOU(dragLi) || dropLi.isSameNode(dragLi) || this.isDescendant(dragLi, dropLi)) {\n                continue;\n            }\n            this.preventExpand = preventTargetExpand;\n            this.dropAsChildNode(dragLi, dropLi, this, index);\n        }\n        if (this.fields.dataSource instanceof DataManager === false) {\n            this.preventExpand = false;\n        }\n        this.triggerEvent();\n    };\n    /**\n     * Refreshes a particular node of the TreeView.\n     * @param  {string | Element} target - Specifies the ID of TreeView node or TreeView node as target element.\n     * @param  {{ [key: string]: Object }[]} newData - Specifies the new data of TreeView node.\n     */\n    TreeView.prototype.refreshNode = function (target, newData) {\n        if (isNOU(target) || isNOU(newData)) {\n            return;\n        }\n        var id;\n        var isRefreshChild = false;\n        if (this.dataType == 1 && newData.length > 1) {\n            isRefreshChild = true;\n        }\n        else if (this.dataType == 2 && newData.length === 1) {\n            var updatedChildValue = getValue(this.fields.child.toString(), newData[0]);\n            if (!isNOU(updatedChildValue)) {\n                isRefreshChild = true;\n            }\n        }\n        var liEle = this.getElement(target);\n        id = liEle ? liEle.getAttribute('data-uid') : ((target) ? target.toString() : null);\n        this.refreshData = this.getNodeObject(id);\n        newData = JSON.parse(JSON.stringify(newData));\n        /* eslint-disable */\n        var newNodeData;\n        var parentData;\n        if (this.dataType == 1 && isRefreshChild) {\n            for (var k = 0; k < newData.length; k++) {\n                if (isNOU(newData[k][this.fields.parentID])) {\n                    parentData = newData[k];\n                    newData.splice(k, 1);\n                    break;\n                }\n            }\n            newNodeData = extend({}, this.refreshData, parentData);\n        }\n        else {\n            newNodeData = extend({}, this.refreshData, newData[0]);\n        }\n        if (isNOU(liEle)) {\n            this.updatePosition(id, newNodeData, isRefreshChild, newData);\n            return;\n        }\n        this.isRefreshed = true;\n        var level = parseFloat(liEle.getAttribute('aria-level'));\n        var newliEle = ListBase.createListItemFromJson(this.createElement, [newNodeData], this.listBaseOption, level);\n        var ul = select('.' + PARENTITEM, liEle);\n        var childItems = getValue(this.fields.child.toString(), newNodeData);\n        if ((isRefreshChild && ul) || (isRefreshChild && !isNOU(childItems))) {\n            var parentEle = liEle.parentElement;\n            var index = Array.prototype.indexOf.call(parentEle.childNodes, liEle);\n            remove(liEle);\n            parentEle.insertBefore(newliEle[0], parentEle.childNodes[index]);\n            this.updatePosition(id, newNodeData, isRefreshChild, newData);\n            if (isRefreshChild && ul) {\n                this.expandAll([id]);\n            }\n        }\n        else {\n            var txtEle = select('.' + TEXTWRAP, liEle);\n            var newTextEle = select('.' + TEXTWRAP, newliEle[0]);\n            var icon = select('div.' + ICON, txtEle);\n            var newIcon = select('div.' + ICON, newTextEle);\n            if (icon && newIcon) {\n                if (newIcon.classList.contains(EXPANDABLE) && icon.classList.contains(COLLAPSIBLE)) {\n                    removeClass([newIcon], EXPANDABLE);\n                    addClass([newIcon], COLLAPSIBLE);\n                }\n                else if (newIcon.classList.contains(COLLAPSIBLE) && icon.classList.contains(EXPANDABLE)) {\n                    removeClass([newIcon], COLLAPSIBLE);\n                    addClass([newIcon], EXPANDABLE);\n                }\n                else if (icon.classList.contains('interaction')) {\n                    addClass([newIcon], 'interaction');\n                }\n            }\n            remove(txtEle);\n            var fullEle = select('.' + FULLROW, liEle);\n            fullEle.parentNode.insertBefore(newTextEle, fullEle.nextSibling);\n            this.updatePosition(id, newNodeData, isRefreshChild, newData);\n        }\n        liEle = this.getElement(target);\n        if (newNodeData[this.fields.tooltip]) {\n            liEle.setAttribute(\"title\", newNodeData[this.fields.tooltip]);\n        }\n        if (newNodeData.hasOwnProperty(this.fields.htmlAttributes) && newNodeData[this.fields.htmlAttributes]) {\n            var attr = {};\n            merge(attr, newNodeData[this.fields.htmlAttributes]);\n            if (attr.class) {\n                addClass([liEle], attr.class.split(' '));\n                delete attr.class;\n            }\n            else {\n                attributes(liEle, attr);\n            }\n        }\n        if (this.selectedNodes.indexOf(id) !== -1) {\n            liEle.setAttribute('aria-selected', 'true');\n            addClass([liEle], ACTIVE);\n        }\n        this.isRefreshed = false;\n        this.triggerEvent();\n    };\n    /**\n     * Removes the collection of TreeView nodes by passing the array of node details as argument to this method.\n     * @param  {string[] | Element[]} nodes - Specifies the array of TreeView nodes ID/array of TreeView node.\n     */\n    TreeView.prototype.removeNodes = function (nodes) {\n        if (!isNOU(nodes)) {\n            if (this.fields.dataSource instanceof DataManager && !this.isOffline) {\n                this.crudOperation('delete', nodes);\n            }\n            else {\n                this.deleteSuccess(nodes);\n            }\n        }\n    };\n    /**\n     * Replaces the text of the TreeView node with the given text.\n     * @param  {string | Element} target - Specifies ID of TreeView node/TreeView node as target element.\n     * @param  {string} newText - Specifies the new text of TreeView node.\n     */\n    TreeView.prototype.updateNode = function (target, newText) {\n        var _this = this;\n        if (isNOU(target) || isNOU(newText) || !this.allowEditing) {\n            return;\n        }\n        var liEle = this.getElement(target);\n        if (isNOU(liEle)) {\n            return;\n        }\n        var txtEle = select('.' + LISTTEXT, liEle);\n        this.updateOldText(liEle);\n        var eventArgs = this.getEditEvent(liEle, null, null);\n        this.trigger('nodeEditing', eventArgs, function (observedArgs) {\n            if (!observedArgs.cancel) {\n                if (_this.fields.dataSource instanceof DataManager && !_this.isOffline) {\n                    _this.crudOperation('update', null, target, newText, null, null, false);\n                }\n                else {\n                    _this.appendNewText(liEle, txtEle, newText, false);\n                }\n            }\n        });\n    };\n    /**\n     * Unchecks all the checked nodes. You can also uncheck the specific nodes by passing array of checked nodes\n     * as argument to this method.\n     * @param  {string[] | Element[]} nodes - Specifies the array of TreeView nodes ID/array of TreeView node.\n     */\n    TreeView.prototype.uncheckAll = function (nodes) {\n        if (this.showCheckBox) {\n            this.doCheckBoxAction(nodes, false);\n        }\n    };\n    var TreeView_1;\n    __decorate([\n        Property(false)\n    ], TreeView.prototype, \"allowDragAndDrop\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeView.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeView.prototype, \"allowMultiSelection\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeView.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, NodeAnimationSettings)\n    ], TreeView.prototype, \"animation\", void 0);\n    __decorate([\n        Property()\n    ], TreeView.prototype, \"checkedNodes\", void 0);\n    __decorate([\n        Property('')\n    ], TreeView.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeView.prototype, \"disabled\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeView.prototype, \"dragArea\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeView.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeView.prototype, \"enablePersistence\", void 0);\n    __decorate([\n        Property()\n    ], TreeView.prototype, \"expandedNodes\", void 0);\n    __decorate([\n        Property('Auto')\n    ], TreeView.prototype, \"expandOn\", void 0);\n    __decorate([\n        Complex({}, FieldsSettings)\n    ], TreeView.prototype, \"fields\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeView.prototype, \"fullRowSelect\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeView.prototype, \"loadOnDemand\", void 0);\n    __decorate([\n        Property()\n    ], TreeView.prototype, \"locale\", void 0);\n    __decorate([\n        Property()\n    ], TreeView.prototype, \"nodeTemplate\", void 0);\n    __decorate([\n        Property()\n    ], TreeView.prototype, \"selectedNodes\", void 0);\n    __decorate([\n        Property('None')\n    ], TreeView.prototype, \"sortOrder\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeView.prototype, \"showCheckBox\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeView.prototype, \"autoCheck\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeView.prototype, \"fullRowNavigable\", void 0);\n    __decorate([\n        Event()\n    ], TreeView.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeView.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeView.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeView.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeView.prototype, \"drawNode\", void 0);\n    __decorate([\n        Event()\n    ], TreeView.prototype, \"destroyed\", void 0);\n    __decorate([\n        Event()\n    ], TreeView.prototype, \"keyPress\", void 0);\n    __decorate([\n        Event()\n    ], TreeView.prototype, \"nodeChecked\", void 0);\n    __decorate([\n        Event()\n    ], TreeView.prototype, \"nodeChecking\", void 0);\n    __decorate([\n        Event()\n    ], TreeView.prototype, \"nodeClicked\", void 0);\n    __decorate([\n        Event()\n    ], TreeView.prototype, \"nodeCollapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeView.prototype, \"nodeCollapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeView.prototype, \"nodeDragging\", void 0);\n    __decorate([\n        Event()\n    ], TreeView.prototype, \"nodeDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeView.prototype, \"nodeDragStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeView.prototype, \"nodeDropped\", void 0);\n    __decorate([\n        Event()\n    ], TreeView.prototype, \"nodeEdited\", void 0);\n    __decorate([\n        Event()\n    ], TreeView.prototype, \"nodeEditing\", void 0);\n    __decorate([\n        Event()\n    ], TreeView.prototype, \"nodeExpanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeView.prototype, \"nodeExpanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeView.prototype, \"nodeSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeView.prototype, \"nodeSelecting\", void 0);\n    TreeView = TreeView_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeView);\n    return TreeView;\n}(Component));\nexport { TreeView };\n"],"mappings":"AAAA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA6B,YAAY;EACrD,IAAIC,aAAa,GAAG,UAAUC,CAAV,EAAaC,CAAb,EAAgB;IAChCF,aAAa,GAAGG,MAAM,CAACC,cAAP,IACX;MAAEC,SAAS,EAAE;IAAb,aAA6BC,KAA7B,IAAsC,UAAUL,CAAV,EAAaC,CAAb,EAAgB;MAAED,CAAC,CAACI,SAAF,GAAcH,CAAd;IAAkB,CAD/D,IAEZ,UAAUD,CAAV,EAAaC,CAAb,EAAgB;MAAE,KAAK,IAAIK,CAAT,IAAcL,CAAd,EAAiB,IAAIA,CAAC,CAACM,cAAF,CAAiBD,CAAjB,CAAJ,EAAyBN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;IAAc,CAF9E;;IAGA,OAAOP,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAApB;EACH,CALD;;EAMA,OAAO,UAAUD,CAAV,EAAaC,CAAb,EAAgB;IACnBF,aAAa,CAACC,CAAD,EAAIC,CAAJ,CAAb;;IACA,SAASO,EAAT,GAAc;MAAE,KAAKC,WAAL,GAAmBT,CAAnB;IAAuB;;IACvCA,CAAC,CAACU,SAAF,GAAcT,CAAC,KAAK,IAAN,GAAaC,MAAM,CAACS,MAAP,CAAcV,CAAd,CAAb,IAAiCO,EAAE,CAACE,SAAH,GAAeT,CAAC,CAACS,SAAjB,EAA4B,IAAIF,EAAJ,EAA7D,CAAd;EACH,CAJD;AAKH,CAZ2C,EAA5C;;AAaA,IAAII,UAAU,GAAI,QAAQ,KAAKA,UAAd,IAA6B,UAAUC,UAAV,EAAsBC,MAAtB,EAA8BC,GAA9B,EAAmCC,IAAnC,EAAyC;EACnF,IAAIC,CAAC,GAAGC,SAAS,CAACC,MAAlB;EAAA,IAA0BC,CAAC,GAAGH,CAAC,GAAG,CAAJ,GAAQH,MAAR,GAAiBE,IAAI,KAAK,IAAT,GAAgBA,IAAI,GAAGd,MAAM,CAACmB,wBAAP,CAAgCP,MAAhC,EAAwCC,GAAxC,CAAvB,GAAsEC,IAArH;EAAA,IAA2HhB,CAA3H;EACA,IAAI,OAAOsB,OAAP,KAAmB,QAAnB,IAA+B,OAAOA,OAAO,CAACC,QAAf,KAA4B,UAA/D,EAA2EH,CAAC,GAAGE,OAAO,CAACC,QAAR,CAAiBV,UAAjB,EAA6BC,MAA7B,EAAqCC,GAArC,EAA0CC,IAA1C,CAAJ,CAA3E,KACK,KAAK,IAAIQ,CAAC,GAAGX,UAAU,CAACM,MAAX,GAAoB,CAAjC,EAAoCK,CAAC,IAAI,CAAzC,EAA4CA,CAAC,EAA7C,EAAiD,IAAIxB,CAAC,GAAGa,UAAU,CAACW,CAAD,CAAlB,EAAuBJ,CAAC,GAAG,CAACH,CAAC,GAAG,CAAJ,GAAQjB,CAAC,CAACoB,CAAD,CAAT,GAAeH,CAAC,GAAG,CAAJ,GAAQjB,CAAC,CAACc,MAAD,EAASC,GAAT,EAAcK,CAAd,CAAT,GAA4BpB,CAAC,CAACc,MAAD,EAASC,GAAT,CAA7C,KAA+DK,CAAnE;EAC7E,OAAOH,CAAC,GAAG,CAAJ,IAASG,CAAT,IAAclB,MAAM,CAACuB,cAAP,CAAsBX,MAAtB,EAA8BC,GAA9B,EAAmCK,CAAnC,CAAd,EAAqDA,CAA5D;AACH,CALD;;AAMA,SAASM,SAAT,EAAoBC,WAApB,EAAiCC,OAAjC,EAA0CC,OAA1C,EAAmDC,iBAAnD,QAA4E,sBAA5E;AACA,SAASC,QAAT,EAAmBC,qBAAnB,EAA0CC,aAA1C,EAAyDC,OAAzD,QAAwE,sBAAxE;AACA,SAASC,KAAT,EAAgBC,YAAhB,EAA8BC,cAA9B,QAAoD,sBAApD;AACA,SAASC,YAAT,EAAuBC,SAAvB,EAAkCC,MAAlC,QAAgD,sBAAhD;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,sBAArC;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,OAAhC,EAAyCC,OAAzC,EAAkDC,MAAlD,EAA0DC,MAA1D,EAAkEC,SAAlE,EAA6EC,SAA7E,EAAwFC,MAAxF,QAAsG,sBAAtG;AACA,SAASC,WAAT,EAAsBC,KAAtB,QAAmC,sBAAnC;AACA,SAASxB,iBAAiB,IAAIyB,KAA9B,EAAqCC,KAArC,EAA4CC,QAA5C,EAAsDC,QAAtD,EAAgEC,MAAhE,EAAwEC,KAAxE,EAA+EC,UAA/E,QAAiG,sBAAjG;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,cAAT,EAAyBC,kBAAzB,QAAmD,yBAAnD;AACA,SAASC,KAAT,QAAsB,wBAAtB;AACA,SAASC,aAAT,EAAwBC,WAAxB,EAAqCC,WAArC,QAAwD,wBAAxD;AACA,IAAIC,IAAI,GAAG,YAAX;AACA,IAAIC,OAAO,GAAG,WAAd;AACA,IAAIC,WAAW,GAAG,oBAAlB;AACA,IAAIC,UAAU,GAAG,mBAAjB;AACA,IAAIC,QAAQ,GAAG,aAAf;AACA,IAAIC,QAAQ,GAAG,aAAf;AACA,IAAIC,QAAQ,GAAG,aAAf;AACA,IAAIC,UAAU,GAAG,WAAjB;AACA,IAAIC,UAAU,GAAG,eAAjB;AACA,IAAIC,KAAK,GAAG,SAAZ;AACA,IAAIC,MAAM,GAAG,UAAb;AACA,IAAIC,IAAI,GAAG,iBAAX;AACA,IAAIC,OAAO,GAAG,WAAd;AACA,IAAIC,IAAI,GAAG,SAAX;AACA,IAAIC,QAAQ,GAAG,gBAAf;AACA,IAAIC,KAAK,GAAG,SAAZ;AACA,IAAIC,UAAU,GAAG,eAAjB;AACA,IAAIC,SAAS,GAAG,cAAhB;AACA,IAAIC,OAAO,GAAG,WAAd;AACA,IAAIC,GAAG,GAAG,OAAV;AACA,IAAIC,WAAW,GAAG,eAAlB;AACA,IAAIC,QAAQ,GAAG,aAAf;AACA,IAAIC,SAAS,GAAG,aAAhB;AACA,IAAIC,QAAQ,GAAG,YAAf;AACA,IAAIC,OAAO,GAAG,WAAd;AACA,IAAIC,MAAM,GAAG,WAAb;AACA,IAAIC,QAAQ,GAAG,aAAf;AACA,IAAIC,OAAO,GAAG,YAAd;AACA,IAAIC,MAAM,GAAG,WAAb;AACA,IAAIC,WAAW,GAAG,gBAAlB;AACA,IAAIC,OAAO,GAAG,WAAd;AACA,IAAIC,QAAQ,GAAG,YAAf;AACA,IAAIC,QAAQ,GAAG,YAAf;AACA,IAAIC,aAAa,GAAG,kBAApB;AACA,IAAIC,OAAO,GAAG,WAAd;AACA,IAAIC,SAAS,GAAG,cAAhB;AACA,IAAIC,KAAK,GAAG,SAAZ;AACA,IAAIC,aAAa,GAAG,QAApB;AACA,IAAIC,YAAY,GAAG,oBAAnB;AACA,IAAIC,aAAa,GAAG,SAApB;AACA,IAAIC,cAAc,GAAG,oBAArB;AACA,IAAIC,MAAM,GAAG,UAAb;AACA,IAAIC,YAAY,GAAG,kBAAnB;AACA,IAAIC,KAAK,GAAG,cAAZ;AACA,IAAIC,KAAK,GAAG,YAAZ;AACA,IAAIC,MAAM,GAAG,UAAb;AACA,IAAIC,KAAK,GAAG,SAAZ;AACA,IAAIC,KAAK,GAAG,aAAZ;AACA,IAAIC,qBAAqB,GAAG,oBAA5B;AACA,IAAIC,QAAQ,GAAG,YAAf;AACA,IAAIC,YAAY,GAAG;EACfC,QAAQ,EAAE,MADK;EAEfC,QAAQ,EAAE,UAFK;EAGfC,QAAQ,EAAE,OAHK;EAIfC,QAAQ,EAAE,EAJK;EAKfC,WAAW,EAAE;AALE,CAAnB;AAOA;AACA;AACA;;AACA,IAAIC,cAAc;AAAG;AAAe,UAAUC,MAAV,EAAkB;EAClDhI,SAAS,CAAC+H,cAAD,EAAiBC,MAAjB,CAAT;;EACA,SAASD,cAAT,GAA0B;IACtB,OAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmB7G,SAAnB,CAAnB,IAAoD,IAA3D;EACH;;EACDN,UAAU,CAAC,CACPmB,QAAQ,CAAC,OAAD,CADD,CAAD,EAEP8F,cAAc,CAACnH,SAFR,EAEmB,OAFnB,EAE4B,KAAK,CAFjC,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,CAAC,EAAD,CADD,CAAD,EAEP8F,cAAc,CAACnH,SAFR,EAEmB,YAFnB,EAEiC,KAAK,CAFtC,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,CAAC,UAAD,CADD,CAAD,EAEP8F,cAAc,CAACnH,SAFR,EAEmB,UAFnB,EAE+B,KAAK,CAFpC,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,CAAC,aAAD,CADD,CAAD,EAEP8F,cAAc,CAACnH,SAFR,EAEmB,aAFnB,EAEkC,KAAK,CAFvC,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,CAAC,gBAAD,CADD,CAAD,EAEP8F,cAAc,CAACnH,SAFR,EAEmB,gBAFnB,EAEqC,KAAK,CAF1C,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,CAAC,SAAD,CADD,CAAD,EAEP8F,cAAc,CAACnH,SAFR,EAEmB,SAFnB,EAE8B,KAAK,CAFnC,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,CAAC,IAAD,CADD,CAAD,EAEP8F,cAAc,CAACnH,SAFR,EAEmB,IAFnB,EAEyB,KAAK,CAF9B,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,CAAC,UAAD,CADD,CAAD,EAEP8F,cAAc,CAACnH,SAFR,EAEmB,UAFnB,EAE+B,KAAK,CAFpC,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,CAAC,WAAD,CADD,CAAD,EAEP8F,cAAc,CAACnH,SAFR,EAEmB,WAFnB,EAEgC,KAAK,CAFrC,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,CAAC,UAAD,CADD,CAAD,EAEP8F,cAAc,CAACnH,SAFR,EAEmB,UAFnB,EAE+B,KAAK,CAFpC,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,CAAC,IAAD,CADD,CAAD,EAEP8F,cAAc,CAACnH,SAFR,EAEmB,OAFnB,EAE4B,KAAK,CAFjC,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,CAAC,UAAD,CADD,CAAD,EAEP8F,cAAc,CAACnH,SAFR,EAEmB,UAFnB,EAE+B,KAAK,CAFpC,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,CAAC,IAAD,CADD,CAAD,EAEP8F,cAAc,CAACnH,SAFR,EAEmB,WAFnB,EAEgC,KAAK,CAFrC,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,CAAC,MAAD,CADD,CAAD,EAEP8F,cAAc,CAACnH,SAFR,EAEmB,MAFnB,EAE2B,KAAK,CAFhC,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,CAAC,SAAD,CADD,CAAD,EAEP8F,cAAc,CAACnH,SAFR,EAEmB,SAFnB,EAE8B,KAAK,CAFnC,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,CAAC,aAAD,CADD,CAAD,EAEP8F,cAAc,CAACnH,SAFR,EAEmB,aAFnB,EAEkC,KAAK,CAFvC,CAAV;;EAGA,OAAOmH,cAAP;AACH,CAtDmC,CAsDlC5F,aAtDkC,CAApC;;AAuDA,SAAS4F,cAAT;AACA;AACA;AACA;;AACA,IAAIG,cAAc;AAAG;AAAe,UAAUF,MAAV,EAAkB;EAClDhI,SAAS,CAACkI,cAAD,EAAiBF,MAAjB,CAAT;;EACA,SAASE,cAAT,GAA0B;IACtB,OAAOF,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmB7G,SAAnB,CAAnB,IAAoD,IAA3D;EACH;;EACDN,UAAU,CAAC,CACPmB,QAAQ,CAAC,WAAD,CADD,CAAD,EAEPiG,cAAc,CAACtH,SAFR,EAEmB,QAFnB,EAE6B,KAAK,CAFlC,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,CAAC,GAAD,CADD,CAAD,EAEPiG,cAAc,CAACtH,SAFR,EAEmB,UAFnB,EAE+B,KAAK,CAFpC,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,CAAC,QAAD,CADD,CAAD,EAEPiG,cAAc,CAACtH,SAFR,EAEmB,QAFnB,EAE6B,KAAK,CAFlC,CAAV;;EAGA,OAAOsH,cAAP;AACH,CAfmC,CAelC/F,aAfkC,CAApC;;AAgBA,SAAS+F,cAAT;AACA;AACA;AACA;;AACA,IAAIC,qBAAqB;AAAG;AAAe,UAAUH,MAAV,EAAkB;EACzDhI,SAAS,CAACmI,qBAAD,EAAwBH,MAAxB,CAAT;;EACA,SAASG,qBAAT,GAAiC;IAC7B,OAAOH,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmB7G,SAAnB,CAAnB,IAAoD,IAA3D;EACH;;EACDN,UAAU,CAAC,CACPsB,OAAO,CAAC;IAAEgG,MAAM,EAAE,SAAV;IAAqBC,QAAQ,EAAE,GAA/B;IAAoCC,MAAM,EAAE;EAA5C,CAAD,EAAyDJ,cAAzD,CADA,CAAD,EAEPC,qBAAqB,CAACvH,SAFf,EAE0B,UAF1B,EAEsC,KAAK,CAF3C,CAAV;;EAGAE,UAAU,CAAC,CACPsB,OAAO,CAAC;IAAEgG,MAAM,EAAE,WAAV;IAAuBC,QAAQ,EAAE,GAAjC;IAAsCC,MAAM,EAAE;EAA9C,CAAD,EAA2DJ,cAA3D,CADA,CAAD,EAEPC,qBAAqB,CAACvH,SAFf,EAE0B,QAF1B,EAEoC,KAAK,CAFzC,CAAV;;EAGA,OAAOuH,qBAAP;AACH,CAZ0C,CAYzChG,aAZyC,CAA3C;;AAaA,SAASgG,qBAAT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAII,QAAQ;AAAG;AAAe,UAAUP,MAAV,EAAkB;EAC5ChI,SAAS,CAACuI,QAAD,EAAWP,MAAX,CAAT;;EACA,SAASO,QAAT,CAAkBC,OAAlB,EAA2BC,OAA3B,EAAoC;IAChC,IAAIC,KAAK,GAAGV,MAAM,CAACW,IAAP,CAAY,IAAZ,EAAkBH,OAAlB,EAA2BC,OAA3B,KAAuC,IAAnD;;IACAC,KAAK,CAACE,WAAN,GAAoB,KAApB;IACAF,KAAK,CAACG,aAAN,GAAsB,KAAtB;IACAH,KAAK,CAACI,cAAN,GAAuB,EAAvB;IACAJ,KAAK,CAACK,WAAN,GAAoB,EAApB,CALgC,CAMhC;;IACAL,KAAK,CAACM,QAAN,GAAiB,EAAjB;IACAN,KAAK,CAACO,UAAN,GAAmB,EAAnB;IACAP,KAAK,CAACQ,cAAN,GAAuB,EAAvB;IACAR,KAAK,CAACS,aAAN,GAAsB,KAAtB;IACAT,KAAK,CAACU,gBAAN,GAAyB,KAAzB;IACAV,KAAK,CAACW,WAAN,GAAoB,KAApB;IACAX,KAAK,CAACY,aAAN,GAAsB,KAAtB;IACAZ,KAAK,CAACa,eAAN,GAAwB,KAAxB;IACA,OAAOb,KAAP;EACH;;EACDc,UAAU,GAAGjB,QAAb;EACA;AACJ;AACA;AACA;AACA;AACA;;EACIA,QAAQ,CAAC3H,SAAT,CAAmB6I,aAAnB,GAAmC,YAAY;IAC3C,OAAO,UAAP;EACH,CAFD;EAGA;AACJ;AACA;AACA;AACA;;;EACIlB,QAAQ,CAAC3H,SAAT,CAAmB8I,SAAnB,GAA+B,YAAY;IACvC,IAAIhB,KAAK,GAAG,IAAZ;;IACA,KAAKiB,gBAAL,GAAwB,EAAxB;IACA,KAAKC,eAAL,GAAuB,EAAvB;IACA,KAAKC,eAAL,GAAuB,KAAvB;IACA,KAAKC,SAAL,GAAiB,KAAjB;IACA,KAAKC,UAAL,GAAkB;MACdC,MAAM,EAAE,QADM;MAEdC,GAAG,EAAE,KAFS;MAGdC,KAAK,EAAE,OAHO;MAIdC,EAAE,EAAE,IAJU;MAKdC,IAAI,EAAE,MALQ;MAMdC,QAAQ,EAAE,WANI;MAOdC,QAAQ,EAAE,WAPI;MAQdC,SAAS,EAAE,YARG;MASdC,MAAM,EAAE,SATM;MAUdC,QAAQ,EAAE,gBAVI;MAWdC,MAAM,EAAE,cAXM;MAYdC,SAAS,EAAE,YAZG;MAadC,QAAQ,EAAE,WAbI;MAcdC,OAAO,EAAE,UAdK;MAedC,KAAK,EAAE,QAfO;MAgBdC,SAAS,EAAE,iBAhBG;MAiBdC,OAAO,EAAE,eAjBK;MAkBdC,UAAU,EAAE,aAlBE;MAmBdC,SAAS,EAAE,YAnBG;MAoBdC,QAAQ,EAAE,WApBI;MAqBdC,MAAM,EAAE,sBArBM;MAsBdC,IAAI,EAAE,oBAtBQ;MAuBdC,OAAO,EAAE,kBAvBK;MAwBdC,MAAM,EAAE,iBAxBM;MAyBdC,KAAK,EAAE,gBAzBO;MA0BdC,KAAK,EAAE;IA1BO,CAAlB;IA4BA,KAAKC,cAAL,GAAsB;MAClBC,cAAc,EAAE,IADE;MAElBC,QAAQ,EAAE,IAFQ;MAGlBC,eAAe,EAAEnH,UAHC;MAIlBoH,cAAc,EAAErE,YAJE;MAKlBsE,kBAAkB,EAAE,MALF;MAMlBC,WAAW,EAAE,UAAUC,CAAV,EAAa;QACtBvD,KAAK,CAACwD,gBAAN,CAAuBD,CAAvB;MACH,CARiB;MASlBE,mBAAmB,EAAE,KAAKA,mBATR;MAUlBC,aAAa,EAAE,KAAKC;IAVF,CAAtB;IAYA,KAAKC,cAAL,CAAoB,KAAKC,MAAzB;IACA,KAAKC,MAAL,GAAc,IAAI/J,SAAJ,CAAc,EAAd,CAAd;IACA,KAAKgK,QAAL,GAAgB,EAAhB;IACA,KAAKC,QAAL,GAAgB,KAAhB;IACA,KAAKC,cAAL,GAAsB,KAAtB;IACA,KAAKzD,cAAL,GAAsB,EAAtB;IACA,KAAK0D,KAAL,GAAa,CAAb;IACA,KAAKC,aAAL;;IACA,IAAIpJ,KAAK,CAAC,KAAKqJ,aAAN,CAAT,EAA+B;MAC3B,KAAKC,aAAL,CAAmB;QAAED,aAAa,EAAE;MAAjB,CAAnB,EAA0C,IAA1C;IACH;;IACD,IAAIrJ,KAAK,CAAC,KAAKuJ,YAAN,CAAT,EAA8B;MAC1B,KAAKD,aAAL,CAAmB;QAAEC,YAAY,EAAE;MAAhB,CAAnB,EAAyC,IAAzC;IACH;;IACD,IAAIvJ,KAAK,CAAC,KAAKwJ,aAAN,CAAT,EAA+B;MAC3B,KAAKF,aAAL,CAAmB;QAAEE,aAAa,EAAE;MAAjB,CAAnB,EAA0C,IAA1C;IACH,CAFD,MAGK;MACD,KAAKN,cAAL,GAAsB,IAAtB;IACH;EACJ,CAlED;EAmEA;AACJ;AACA;AACA;AACA;AACA;;;EACIpE,QAAQ,CAAC3H,SAAT,CAAmBsM,cAAnB,GAAoC,YAAY;IAC5C,IAAIC,SAAS,GAAG,CAAC,eAAD,EAAkB,cAAlB,EAAkC,eAAlC,CAAhB;IACA,OAAO,KAAKC,YAAL,CAAkBD,SAAlB,CAAP;EACH,CAHD;EAIA;AACJ;AACA;AACA;AACA;AACA;;;EACI5E,QAAQ,CAAC3H,SAAT,CAAmByM,MAAnB,GAA4B,YAAY;IACpC,KAAKC,aAAL,GAAqB,IAArB;IACA,KAAKC,UAAL;IACA,KAAKC,cAAL,CAAoB,KAApB;IACA,KAAKC,eAAL;IACA,KAAKC,eAAL;;IACA,IAAI,CAAC,KAAKC,QAAV,EAAoB;MAChB,KAAKC,SAAL;IACH;;IACD,KAAKC,iBAAL,CAAuB,KAAKC,YAA5B;IACA,KAAKC,cAAL,CAAoB,KAAKC,gBAAzB;;IACA,IAAI,CAAC,KAAKL,QAAV,EAAoB;MAChB,KAAKM,UAAL;IACH;;IACD,KAAKX,aAAL,GAAqB,KAArB;IACA,KAAKY,cAAL;EACH,CAhBD;;EAiBA3F,QAAQ,CAAC3H,SAAT,CAAmB2M,UAAnB,GAAgC,YAAY;IACxC,KAAK9E,OAAL,CAAa0F,YAAb,CAA0B,MAA1B,EAAkC,MAAlC;IACA,KAAK1F,OAAL,CAAa0F,YAAb,CAA0B,UAA1B,EAAsC,GAAtC;IACA,KAAK1F,OAAL,CAAa0F,YAAb,CAA0B,uBAA1B,EAAmD,KAAK1F,OAAL,CAAa2F,EAAb,GAAkB,SAArE;IACA,KAAKC,WAAL,CAAiB,IAAjB,EAAuB,KAAKC,QAA5B;IACA,KAAKC,YAAL;IACA,KAAKC,UAAL,CAAgB,KAAKC,aAArB;IACA,KAAKC,WAAL;IACA,KAAKC,cAAL,GAAsB,KAAKC,gBAAL,CAAsB,KAAKC,YAA3B,CAAtB;EACH,CATD;;EAUAtG,QAAQ,CAAC3H,SAAT,CAAmB6M,eAAnB,GAAqC,YAAY;IAC7C,IAAI,KAAKE,QAAT,EAAmB;MACf,KAAKlF,OAAL,CAAaqG,SAAb,CAAuBC,GAAvB,CAA2BvH,QAA3B;IACH,CAFD,MAGK;MACD,KAAKiB,OAAL,CAAaqG,SAAb,CAAuBpM,MAAvB,CAA8B8E,QAA9B;IACH;EACJ,CAPD;;EAQAe,QAAQ,CAAC3H,SAAT,CAAmB2N,YAAnB,GAAkC,YAAY;IAC1C,CAAC,KAAKS,SAAL,GAAiBlM,QAAjB,GAA4BC,WAA7B,EAA0C,CAAC,KAAK0F,OAAN,CAA1C,EAA0D/C,GAA1D;EACH,CAFD;;EAGA6C,QAAQ,CAAC3H,SAAT,CAAmBgN,SAAnB,GAA+B,YAAY;IACvC,IAAIqB,OAAO,GAAG,MAAM5I,OAAN,GAAgB,IAAhB,GAAuBhB,QAArC;IACA,IAAI6J,WAAW,GAAG;MACdC,QAAQ,EAAEF,OADI;MAEdG,MAAM,EAAE,MAAM/J,QAAN,GAAiB,MAAjB,GAA0BD,IAA1B,GAAiC,IAAjC,GAAwCG,UAAxC,GAAqD,IAArD,GAA4DD,KAA5D,GAAoE,KAApE,GAA4EuB;IAFtE,CAAlB;IAIA,KAAKwI,QAAL,GAAgB7M,YAAY,CAAC,KAAKiG,OAAN,EAAeyG,WAAf,CAA5B;IACA,IAAII,SAAS,GAAG;MACZH,QAAQ,EAAE,MAAM9J,QAAN,GAAiB,MAAjB,GAA0BD,IADxB;MAEZmK,cAAc,EAAE;IAFJ,CAAhB;IAIA,KAAKC,YAAL,GAAoBhN,YAAY,CAAC,KAAKiG,OAAN,EAAe6G,SAAf,CAAhC;EACH,CAZD;;EAaA/G,QAAQ,CAAC3H,SAAT,CAAmB4N,UAAnB,GAAgC,UAAUiB,SAAV,EAAqB;IACjD,CAACA,SAAS,GAAG3M,QAAH,GAAcC,WAAxB,EAAqC,CAAC,KAAK0F,OAAN,CAArC,EAAqDrC,WAArD;EACH,CAFD;;EAGAmC,QAAQ,CAAC3H,SAAT,CAAmB8O,cAAnB,GAAoC,UAAUD,SAAV,EAAqB;IACrD,IAAIE,OAAO,GAAGxM,MAAM,CAAC,MAAM4B,UAAP,EAAmB,KAAK0D,OAAxB,CAApB;;IACA,IAAIgH,SAAJ,EAAe;MACXE,OAAO,CAACxB,YAAR,CAAqB,sBAArB,EAA6C,MAA7C;IACH,CAFD,MAGK;MACDwB,OAAO,CAACC,eAAR,CAAwB,sBAAxB;IACH;EACJ,CARD,CA3K4C,CAoL5C;;;EACArH,QAAQ,CAAC3H,SAAT,CAAmBgO,gBAAnB,GAAsC,UAAUiB,QAAV,EAAoB;IACtD,IAAIA,QAAJ,EAAc;MACV,KAAKxG,WAAL,GAAmB,IAAnB,CADU,CAEV;;MACA,IAAI4C,CAAC,GAAG,KAAK,CAAb;MACA,KAAKxD,OAAL,CAAaqG,SAAb,CAAuBC,GAAvB,CAA2BpJ,WAA3B;;MACA,IAAI;QACA,IAAImK,QAAQ,CAACC,gBAAT,CAA0BF,QAA1B,EAAoCxO,MAAxC,EAAgD;UAC5C,OAAOU,OAAO,CAAC+N,QAAQ,CAACE,aAAT,CAAuBH,QAAvB,EAAiCI,SAAjC,CAA2CC,IAA3C,EAAD,CAAd;QACH,CAFD,MAGK;UACD,OAAOnO,OAAO,CAAC8N,QAAD,CAAd;QACH;MACJ,CAPD,CAQA,OAAO5D,CAAP,EAAU;QACN,OAAOlK,OAAO,CAAC8N,QAAD,CAAd;MACH;IACJ;;IACD,KAAKpH,OAAL,CAAaqG,SAAb,CAAuBpM,MAAvB,CAA8BiD,WAA9B;IACA,OAAOwK,SAAP;EACH,CApBD;;EAqBA5H,QAAQ,CAAC3H,SAAT,CAAmB4M,cAAnB,GAAoC,UAAUpE,gBAAV,EAA4B;IAC5D,IAAIV,KAAK,GAAG,IAAZ;;IACA,KAAK+D,QAAL,CAAc2D,IAAd,CAAmB,OAAnB;;IACA,IAAI,KAAK7D,MAAL,CAAY8D,UAAZ,YAAkC9M,WAAtC,EAAmD;MAC/C;MACA,KAAK+M,SAAL,GAAiB,KAAK/D,MAAL,CAAY8D,UAAZ,CAAuBA,UAAvB,CAAkCE,OAAnD;;MACA,IAAI,KAAKhE,MAAL,CAAY8D,UAAZ,CAAuBG,KAA3B,EAAkC;QAC9B,KAAKjE,MAAL,CAAY8D,UAAZ,CAAuBG,KAAvB,CAA6BC,IAA7B,CAAkC,UAAUxE,CAAV,EAAa;UAC3C;UACAvD,KAAK,CAAC4H,SAAN,GAAkB5H,KAAK,CAAC6D,MAAN,CAAa8D,UAAb,CAAwBA,UAAxB,CAAmCE,OAArD;;UACA,IAAI7H,KAAK,CAAC6D,MAAN,CAAa8D,UAAb,YAAmC9M,WAAnC,IAAkDmF,KAAK,CAAC4H,SAA5D,EAAuE;YACnE5H,KAAK,CAAC+D,QAAN,CAAeiE,GAAf;;YACAhI,KAAK,CAACiI,QAAN,GAAiB1E,CAAC,CAAC2E,MAAnB;YACAlI,KAAK,CAACmI,cAAN,GAAuBnI,KAAK,CAACoI,OAAN,EAAvB;;YACApI,KAAK,CAACqI,WAAN;;YACArI,KAAK,CAACsI,WAAN,CAAkB,IAAlB;;YACA,IAAItI,KAAK,CAAC+D,QAAN,CAAepL,MAAf,KAA0B,CAA1B,IAA+B,CAACqH,KAAK,CAACgE,QAA1C,EAAoD;cAChDhE,KAAK,CAACuI,QAAN;YACH;UACJ;QACJ,CAbD,EAaGC,KAbH,CAaS,UAAUjF,CAAV,EAAa;UAClBvD,KAAK,CAACyI,OAAN,CAAc,eAAd,EAA+B;YAAEC,KAAK,EAAEnF;UAAT,CAA/B;QACH,CAfD;MAgBH,CAjBD,MAkBK;QACD,KAAKM,MAAL,CAAY8D,UAAZ,CAAuBgB,YAAvB,CAAoC,KAAKC,QAAL,CAAc,KAAK/E,MAAnB,CAApC,EAAgEkE,IAAhE,CAAqE,UAAUxE,CAAV,EAAa;UAC9EvD,KAAK,CAAC+D,QAAN,CAAeiE,GAAf;;UACAhI,KAAK,CAACiI,QAAN,GAAiB1E,CAAC,CAAC2E,MAAnB;UACAlI,KAAK,CAACmI,cAAN,GAAuBnI,KAAK,CAACoI,OAAN,EAAvB;;UACApI,KAAK,CAACqI,WAAN;;UACA,IAAI3H,gBAAJ,EAAsB;YAClBV,KAAK,CAACU,gBAAN,GAAyB,IAAzB;UACH;;UACDV,KAAK,CAACsI,WAAN,CAAkB,IAAlB;;UACAtI,KAAK,CAACU,gBAAN,GAAyB,KAAzB;;UACA,IAAIV,KAAK,CAAC+D,QAAN,CAAepL,MAAf,KAA0B,CAA1B,IAA+B,CAACqH,KAAK,CAACgE,QAA1C,EAAoD;YAChDhE,KAAK,CAACuI,QAAN;UACH;QACJ,CAbD,EAaGC,KAbH,CAaS,UAAUjF,CAAV,EAAa;UAClBvD,KAAK,CAACyI,OAAN,CAAc,eAAd,EAA+B;YAAEC,KAAK,EAAEnF;UAAT,CAA/B;QACH,CAfD;MAgBH;IACJ,CAvCD,MAwCK;MACD,KAAKQ,QAAL,CAAciE,GAAd;;MACA,IAAIjN,KAAK,CAAC,KAAK8I,MAAL,CAAY8D,UAAb,CAAT,EAAmC;QAC/B,KAAKkB,QAAL,GAAgB,KAAKZ,QAAL,GAAgB,EAAhC;MACH,CAFD,MAGK;QACD,KAAKA,QAAL,GAAgBa,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe,KAAKnF,MAAL,CAAY8D,UAA3B,CAAX,CAAhB;QACA,KAAKU,WAAL;MACH;;MACD,KAAKF,cAAL,GAAsB,KAAKC,OAAL,EAAtB;MACA,KAAKE,WAAL,CAAiB,KAAjB;IACH;;IACD,IAAI,KAAKvE,QAAL,CAAcpL,MAAd,KAAyB,CAAzB,IAA8B,CAAC,KAAKqL,QAAxC,EAAkD;MAC9C,KAAKuE,QAAL;IACH;EACJ,CA1DD;;EA2DA1I,QAAQ,CAAC3H,SAAT,CAAmB0Q,QAAnB,GAA8B,UAAUK,MAAV,EAAkBC,KAAlB,EAAyB;IACnD,IAAIA,KAAK,KAAK,KAAK,CAAnB,EAAsB;MAAEA,KAAK,GAAG,IAAR;IAAe;;IACvC,IAAIC,OAAO,GAAG,EAAd;IACA,IAAIC,KAAJ;;IACA,IAAI,CAACH,MAAM,CAACG,KAAZ,EAAmB;MACfA,KAAK,GAAG,IAAItO,KAAJ,EAAR;MACA,IAAIuO,IAAI,GAAG,KAAKC,mBAAL,CAAyBL,MAAzB,CAAX;;MACA,KAAK,IAAIM,EAAE,GAAG,CAAT,EAAYC,EAAE,GAAG9R,MAAM,CAAC+R,IAAP,CAAYJ,IAAZ,CAAtB,EAAyCE,EAAE,GAAGC,EAAE,CAAC7Q,MAAjD,EAAyD4Q,EAAE,EAA3D,EAA+D;QAC3D,IAAIG,GAAG,GAAGF,EAAE,CAACD,EAAD,CAAZ;;QACA,IAAIG,GAAG,KAAK,YAAR,IAAwBA,GAAG,KAAK,WAAhC,IAA+CA,GAAG,KAAK,OAAvD,IAAkE,CAAC,CAACT,MAAM,CAACS,GAAD,CAA1E,IACGA,GAAG,KAAK,KADX,IACoBP,OAAO,CAACQ,OAAR,CAAgBV,MAAM,CAACS,GAAD,CAAtB,MAAiC,CAAC,CAD1D,EAC6D;UACzDP,OAAO,CAACzB,IAAR,CAAauB,MAAM,CAACS,GAAD,CAAnB;QACH;MACJ;;MACDN,KAAK,CAAC3O,MAAN,CAAa0O,OAAb;;MACA,IAAIE,IAAI,CAACtR,cAAL,CAAoB,WAApB,CAAJ,EAAsC;QAClCqR,KAAK,CAACQ,IAAN,CAAWX,MAAM,CAACY,SAAlB;MACH;IACJ,CAdD,MAeK;MACDT,KAAK,GAAGH,MAAM,CAACG,KAAP,CAAaU,KAAb,EAAR;IACH;;IACDxO,QAAQ,CAACyO,UAAT,CAAoB,KAAKC,SAAzB,EAAoCf,MAAM,CAACgB,IAA3C,EAAiDb,KAAjD;;IACA,IAAI,CAACrO,KAAK,CAACmO,KAAD,CAAN,IAAiB,CAACnO,KAAK,CAACkO,MAAM,CAACiB,QAAR,CAA3B,EAA8C;MAC1Cd,KAAK,CAACe,KAAN,CAAYlB,MAAM,CAACiB,QAAnB,EAA6B,OAA7B,EAAuC,KAAK/B,cAAL,GAAsBiC,UAAU,CAAClB,KAAD,CAAhC,GAA0CA,KAAjF;IACH;;IACD,OAAOE,KAAP;EACH,CA3BD;;EA4BAvJ,QAAQ,CAAC3H,SAAT,CAAmBkQ,OAAnB,GAA6B,YAAY;IACrC,OAAO,KAAKH,QAAL,CAAc,CAAd,IAAqB,OAAOhN,QAAQ,CAAC,KAAK4I,MAAL,CAAY6B,EAAb,EAAiB,KAAKuC,QAAL,CAAc,CAAd,CAAjB,CAAf,KAAsD,QAAvD,GAAmE,IAAnE,GAA0E,KAA9F,GAAuG,KAA9G;EACH,CAFD;;EAGApI,QAAQ,CAAC3H,SAAT,CAAmBmQ,WAAnB,GAAiC,YAAY;IACzC,KAAKgC,QAAL,GAAgB,KAAKC,WAAL,CAAiB,KAAKrC,QAAtB,EAAgC,KAAKpE,MAArC,CAAhB;;IACA,IAAI,KAAKwG,QAAL,KAAkB,CAAtB,EAAyB;MACrB,KAAKE,WAAL,GAAmB,KAAKC,cAAL,CAAoB,KAAKvC,QAAzB,EAAmC,KAAKpE,MAAL,CAAYqG,QAA/C,CAAnB;MACA,IAAIO,SAAS,GAAG,KAAKC,aAAL,CAAmB,KAAKzC,QAAxB,EAAkCR,SAAlC,EAA6C,IAA7C,CAAhB;;MACA,IAAI1M,KAAK,CAAC0P,SAAD,CAAT,EAAsB;QAClB,KAAK5B,QAAL,GAAgB,EAAhB;MACH,CAFD,MAGK;QACD,KAAKA,QAAL,GAAgB4B,SAAhB;MACH;IACJ,CATD,MAUK;MACD,KAAK5B,QAAL,GAAgB,KAAKZ,QAArB;IACH;EACJ,CAfD;;EAgBApI,QAAQ,CAAC3H,SAAT,CAAmBoQ,WAAnB,GAAiC,UAAUqC,QAAV,EAAoB;IACjD;IACA,KAAK3H,cAAL,CAAoBI,cAApB,CAAmCwH,KAAnC,GAA2C,CAA3C;IACA,IAAIC,UAAU,GAAG,KAAKC,aAAL,CAAmB,KAAKjC,QAAxB,CAAjB;IACA,KAAKkC,SAAL,GAAiBzP,QAAQ,CAAC0P,UAAT,CAAoB,KAAKC,aAAzB,EAAwCN,QAAQ,GAAG,KAAK9B,QAAR,GAAmBgC,UAAnE,EAA+E,KAAK7H,cAApF,CAAjB;IACA,KAAKjD,OAAL,CAAamL,WAAb,CAAyB,KAAKH,SAA9B;IACA,IAAII,SAAS,GAAG,KAAKJ,SAAL,CAAe1D,gBAAf,CAAgC,cAAhC,CAAhB;;IACA,IAAI,KAAK+D,YAAL,KAAsB,KAA1B,EAAiC;MAC7B,IAAIpS,CAAC,GAAG,CAAR;;MACA,OAAOA,CAAC,GAAGmS,SAAS,CAACxS,MAArB,EAA6B;QACzB,KAAK0S,gBAAL,CAAsBF,SAAS,CAACnS,CAAD,CAA/B,EAAoC,IAApC,EAA0C,IAA1C,EAAgD,IAAhD;QACAA,CAAC;MACJ;IACJ;;IACD,IAAIsS,SAAS,GAAG5Q,SAAS,CAAC,MAAM2B,UAAP,EAAmB,KAAK0D,OAAxB,CAAzB;;IACA,IAAKuL,SAAS,CAAC3S,MAAV,KAAqB,CAArB,IAA2BwS,SAAS,IAAIA,SAAS,CAACxS,MAAV,KAAqB,CAA9D,IAAqE,KAAKyS,YAA9E,EAA4F;MACxF,KAAKG,YAAL,CAAkB,KAAKxL,OAAvB;IACH;;IACD,KAAKmB,eAAL,GAAuB,EAAvB;IACA,KAAKsK,eAAL,GAAuB,EAAvB;IACA,KAAKC,wBAAL;;IACA,IAAI,KAAKC,SAAL,IAAkB,KAAKC,YAAvB,IAAuC,CAAC,KAAK3H,QAAjD,EAA2D;MACvD,KAAK4H,sBAAL;IACH;EACJ,CAxBD;EAyBA;AACJ;AACA;;;EACI/L,QAAQ,CAAC3H,SAAT,CAAmBuT,wBAAnB,GAA8C,UAAU/F,EAAV,EAAc;IACxD,KAAKnF,UAAL,GAAkB,EAAlB;;IACA,IAAI,KAAK0H,QAAL,IAAiB,KAAK0D,YAA1B,EAAwC;MACpC,IAAI,KAAKtB,QAAL,KAAkB,CAAtB,EAAyB;QACrB,IAAIpB,MAAM,GAAG,KAAKpF,MAAlB;QACA,IAAIgI,UAAU,GAAG,IAAIhR,WAAJ,CAAgB,KAAKoN,QAArB,EAA+B6D,YAA/B,CAA4C,IAAIhR,KAAJ,GAAYqP,KAAZ,CAAkBlB,MAAM,CAAC8C,SAAzB,EAAoC,OAApC,EAA6C,IAA7C,EAAmD,KAAnD,CAA5C,CAAjB;;QACA,KAAK,IAAI/S,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6S,UAAU,CAAClT,MAA/B,EAAuCK,CAAC,EAAxC,EAA4C;UACxC,IAAIgT,QAAQ,GAAGH,UAAU,CAAC7S,CAAD,CAAV,CAAc,KAAK6K,MAAL,CAAY6B,EAA1B,IAAgCmG,UAAU,CAAC7S,CAAD,CAAV,CAAc,KAAK6K,MAAL,CAAY6B,EAA1B,EAA8BuG,QAA9B,EAAhC,GAA2E,IAA1F;UACA,IAAIC,SAAS,GAAGL,UAAU,CAAC7S,CAAD,CAAV,CAAc,KAAK6K,MAAL,CAAYqG,QAA1B,IAAsC2B,UAAU,CAAC7S,CAAD,CAAV,CAAc,KAAK6K,MAAL,CAAYqG,QAA1B,EAAoC+B,QAApC,EAAtC,GAAuF,IAAvG;;UACA,IAAI,KAAK3H,YAAL,CAAkBqF,OAAlB,CAA0BqC,QAA1B,MAAwC,CAAC,CAAzC,IAA8C,CAAE,KAAKhI,QAAzD,EAAoE;YAChE,KAAKM,YAAL,CAAkBoD,IAAlB,CAAuBsE,QAAvB;UACH;;UACD,IAAIH,UAAU,CAAC7S,CAAD,CAAV,CAAc,KAAK6K,MAAL,CAAYsI,WAA1B,CAAJ,EAA4C;YACxC,IAAIC,IAAI,GAAGP,UAAU,CAAC7S,CAAD,CAAV,CAAc,KAAK6K,MAAL,CAAY6B,EAA1B,CAAX;YACA,IAAI2G,SAAS,GAAG,IAAIxR,WAAJ,CAAgB,KAAKoN,QAArB,EACZ6D,YADY,CACC,IAAIhR,KAAJ,GAAYqP,KAAZ,CAAkBlB,MAAM,CAACiB,QAAzB,EAAmC,OAAnC,EAA4CkC,IAA5C,EAAkD,KAAlD,CADD,CAAhB;;YAEA,KAAK,IAAIE,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGD,SAAS,CAAC1T,MAAtC,EAA8C2T,KAAK,EAAnD,EAAuD;cACnD,IAAIC,OAAO,GAAGF,SAAS,CAACC,KAAD,CAAT,CAAiB,KAAKzI,MAAL,CAAY6B,EAA7B,IAAmC2G,SAAS,CAACC,KAAD,CAAT,CAAiB,KAAKzI,MAAL,CAAY6B,EAA7B,EAAiCuG,QAAjC,EAAnC,GAAiF,IAA/F;;cACA,IAAI,KAAK3H,YAAL,CAAkBqF,OAAlB,CAA0B4C,OAA1B,MAAuC,CAAC,CAAxC,IAA6C,KAAKb,SAAtD,EAAiE;gBAC7D,KAAKpH,YAAL,CAAkBoD,IAAlB,CAAuB6E,OAAvB;cACH;YACJ;UACJ;QACJ;;QACD,KAAK,IAAIvT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKsL,YAAL,CAAkB3L,MAAtC,EAA8CK,CAAC,EAA/C,EAAmD;UAC/C,IAAIwT,QAAQ,GAAG,KAAK3I,MAApB;UACA,IAAI4I,UAAU,GAAG,IAAI5R,WAAJ,CAAgB,KAAKoN,QAArB,EACb6D,YADa,CACA,IAAIhR,KAAJ,GAAYqP,KAAZ,CAAkBqC,QAAQ,CAAC9G,EAA3B,EAA+B,OAA/B,EAAwC,KAAKpB,YAAL,CAAkBtL,CAAlB,CAAxC,EAA8D,IAA9D,CADA,CAAjB;;UAEA,IAAIyT,UAAU,CAAC,CAAD,CAAV,IAAiB,KAAKf,SAA1B,EAAqC;YACjC,KAAKgB,qBAAL,CAA2BF,QAA3B,EAAqCC,UAArC;YACA,KAAKE,uBAAL,CAA6BF,UAAU,CAAC,CAAD,CAAvC;UACH;;UACD,IAAIA,UAAU,CAAC9T,MAAX,GAAoB,CAAxB,EAA2B;YACvB,IAAIiU,SAAS,GAAGH,UAAU,CAAC,CAAD,CAAV,CAAc,KAAK5I,MAAL,CAAY6B,EAA1B,IAAgC+G,UAAU,CAAC,CAAD,CAAV,CAAc,KAAK5I,MAAL,CAAY6B,EAA1B,EAA8BuG,QAA9B,EAAhC,GAA2E,IAA3F;;YACA,IAAI,KAAK3H,YAAL,CAAkBqF,OAAlB,CAA0BiD,SAA1B,IAAuC,CAAC,CAAxC,IAA6C,KAAKrM,UAAL,CAAgBoJ,OAAhB,CAAwBiD,SAAxB,MAAuC,CAAC,CAAzF,EAA4F;cACxF,KAAKrM,UAAL,CAAgBmH,IAAhB,CAAqBkF,SAArB;YACH;UACJ;;UACD,IAAIC,WAAW,GAAG,IAAIhS,WAAJ,CAAgB,KAAKoN,QAArB,EACd6D,YADc,CACD,IAAIhR,KAAJ,GAAYqP,KAAZ,CAAkBqC,QAAQ,CAACtC,QAA3B,EAAqC,OAArC,EAA8C,KAAK5F,YAAL,CAAkBtL,CAAlB,CAA9C,EAAoE,IAApE,CADC,CAAlB;;UAEA,KAAK,IAAIkL,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG2I,WAAW,CAAClU,MAAxC,EAAgDuL,KAAK,EAArD,EAAyD;YACrD,IAAI0I,SAAS,GAAGC,WAAW,CAAC3I,KAAD,CAAX,CAAmB,KAAKL,MAAL,CAAY6B,EAA/B,IAAqCmH,WAAW,CAAC3I,KAAD,CAAX,CAAmB,KAAKL,MAAL,CAAY6B,EAA/B,EAAmCuG,QAAnC,EAArC,GAAqF,IAArG;;YACA,IAAI,KAAK3H,YAAL,CAAkBqF,OAAlB,CAA0BiD,SAA1B,MAAyC,CAAC,CAA1C,IAA+C,KAAKlB,SAAxD,EAAmE;cAC/D,KAAKpH,YAAL,CAAkBoD,IAAlB,CAAuBkF,SAAvB;YACH;;YACD,IAAI,KAAKtI,YAAL,CAAkBqF,OAAlB,CAA0BiD,SAA1B,IAAuC,CAAC,CAAxC,IAA6C,KAAKrM,UAAL,CAAgBoJ,OAAhB,CAAwBiD,SAAxB,MAAuC,CAAC,CAAzF,EAA4F;cACxF,KAAKrM,UAAL,CAAgBmH,IAAhB,CAAqBkF,SAArB;YACH;UACJ;QACJ;MACJ,CA/CD,MAgDK,IAAI,KAAKvC,QAAL,KAAkB,CAAlB,IAAwB,KAAKxG,MAAL,CAAY8D,UAAZ,YAAkC9M,WAAlC,IAC7B,KAAK+M,SADJ,EACgB;QACjB,KAAK,IAAI1D,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAK+D,QAAL,CAActP,MAA1C,EAAkDuL,KAAK,EAAvD,EAA2D;UACvD,IAAI4I,OAAO,GAAG,KAAK7E,QAAL,CAAc/D,KAAd,EAAqB,KAAKL,MAAL,CAAY6B,EAAjC,IAAuC,KAAKuC,QAAL,CAAc/D,KAAd,EAAqB,KAAKL,MAAL,CAAY6B,EAAjC,EAAqCuG,QAArC,EAAvC,GAAyF,EAAvG;;UACA,IAAI,KAAKhE,QAAL,CAAc/D,KAAd,EAAqB,KAAKL,MAAL,CAAYkI,SAAjC,KAA+C,CAAE,KAAK/H,QAAtD,IAAmE,KAAKM,YAAL,CAAkBqF,OAAlB,CAA0BmD,OAA1B,MAAuC,CAAC,CAA/G,EAAkH;YAC9G,KAAKxI,YAAL,CAAkBoD,IAAlB,CAAuBoF,OAAvB;UACH;;UACD,IAAI,KAAKxI,YAAL,CAAkBqF,OAAlB,CAA0BmD,OAA1B,IAAqC,CAAC,CAAtC,IAA2C,KAAKvM,UAAL,CAAgBoJ,OAAhB,CAAwBmD,OAAxB,MAAqC,CAAC,CAArF,EAAwF;YACpF,KAAKvM,UAAL,CAAgBmH,IAAhB,CAAqBoF,OAArB;UACH;;UACD,IAAIC,UAAU,GAAG9R,QAAQ,CAAC,KAAK4I,MAAL,CAAYyI,KAAZ,CAAkBL,QAAlB,EAAD,EAA+B,KAAKhE,QAAL,CAAc/D,KAAd,CAA/B,CAAzB;;UACA,IAAI6I,UAAJ,EAAgB;YACZ,KAAKC,qBAAL,CAA2BD,UAA3B,EAAuC,KAAK9E,QAAL,CAAc/D,KAAd,CAAvC;UACH;QACJ;;QACD,KAAK3D,UAAL,GAAmB,KAAK0M,iBAAN,GAA2B,KAAK3I,YAAhC,GAA+C,KAAK/D,UAAtE;MACH;;MACD,KAAK8D,aAAL,CAAmB;QAAEC,YAAY,EAAE,KAAK/D;MAArB,CAAnB,EAAsD,IAAtD;IACH;EACJ,CAtED;EAuEA;AACJ;AACA;;;EACIV,QAAQ,CAAC3H,SAAT,CAAmBwU,qBAAnB,GAA2C,UAAUzD,MAAV,EAAkBiE,UAAlB,EAA8B;IACrE,IAAIxH,EAAE,GAAGwH,UAAU,CAAC,CAAD,CAAV,CAAc,KAAKrJ,MAAL,CAAYqG,QAA1B,IAAsCgD,UAAU,CAAC,CAAD,CAAV,CAAc,KAAKrJ,MAAL,CAAYqG,QAA1B,EAAoC+B,QAApC,EAAtC,GAAuF,IAAhG;IACA,IAAIkB,KAAK,GAAG,CAAZ;IACA,IAAIpN,OAAO,GAAG,KAAKA,OAAL,CAAauH,aAAb,CAA2B,gBAAgB4F,UAAU,CAAC,CAAD,CAAV,CAAc,KAAKrJ,MAAL,CAAY6B,EAA1B,CAAhB,GAAgD,IAA3E,CAAd;IACA,IAAI4F,SAAS,GAAG,KAAKvL,OAAL,CAAauH,aAAb,CAA2B,gBAAgB4F,UAAU,CAAC,CAAD,CAAV,CAAc,KAAKrJ,MAAL,CAAYqG,QAA1B,CAAhB,GAAsD,IAAjF,CAAhB;;IACA,IAAI,CAACnK,OAAD,IAAY,CAACuL,SAAjB,EAA4B;MACxB,IAAI8B,GAAG,GAAG,KAAKlM,eAAL,CAAqBvI,MAA/B;;MACA,IAAI,KAAKuI,eAAL,CAAqByI,OAArB,CAA6BjE,EAA7B,MAAqC,CAAC,CAA1C,EAA6C;QACzC,KAAKxE,eAAL,CAAqBwG,IAArB,CAA0BhC,EAA1B;MACH;;MACD,IAAI2H,UAAU,GAAG,KAAK3C,aAAL,CAAmB,KAAKzC,QAAxB,EAAkCvC,EAAlC,CAAjB;;MACA,KAAK,IAAI1M,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqU,UAAU,CAAC1U,MAA/B,EAAuCK,CAAC,EAAxC,EAA4C;QACxC,IAAIuT,OAAO,GAAGc,UAAU,CAACrU,CAAD,CAAV,CAAc,KAAK6K,MAAL,CAAY6B,EAA1B,IAAgC2H,UAAU,CAACrU,CAAD,CAAV,CAAc,KAAK6K,MAAL,CAAY6B,EAA1B,EAA8BuG,QAA9B,EAAhC,GAA2E,IAAzF;;QACA,IAAI,KAAK3H,YAAL,CAAkBqF,OAAlB,CAA0B4C,OAA1B,MAAuC,CAAC,CAA5C,EAA+C;UAC3CY,KAAK;QACR;;QACD,IAAIA,KAAK,KAAKE,UAAU,CAAC1U,MAArB,IAA+B,KAAK2L,YAAL,CAAkBqF,OAAlB,CAA0BjE,EAA1B,MAAkC,CAAC,CAAtE,EAAyE;UACrE,KAAKpB,YAAL,CAAkBoD,IAAlB,CAAuBhC,EAAvB;QACH;MACJ;;MACD,IAAI4H,UAAU,GAAG,IAAIzS,WAAJ,CAAgB,KAAKoN,QAArB,EACb6D,YADa,CACA,IAAIhR,KAAJ,GAAYqP,KAAZ,CAAkBlB,MAAM,CAACvD,EAAzB,EAA6B,OAA7B,EAAsCA,EAAtC,EAA0C,IAA1C,CADA,CAAjB;MAEA,KAAKgH,qBAAL,CAA2BzD,MAA3B,EAAmCqE,UAAnC;IACH,CAlBD,MAmBK,IAAIhC,SAAJ,EAAe;MAChB,IAAIiC,KAAK,GAAG9S,MAAM,CAAC,MAAMwD,KAAP,EAAcqN,SAAd,CAAlB;;MACA,IAAI,CAACiC,KAAL,EAAY;QACR,KAAKC,WAAL,CAAiBlC,SAAjB,EAA4B,eAA5B,EAA6C,IAA7C,EAAmD,IAAnD,EAAyD,IAAzD;MACH;IACJ;EACJ,CA9BD;EA+BA;AACJ;AACA;;;EACIzL,QAAQ,CAAC3H,SAAT,CAAmB0T,sBAAnB,GAA4C,YAAY;IACpD,IAAI6B,aAAa,GAAG/S,SAAS,CAAC,MAAMwD,aAAP,EAAsB,KAAK6B,OAA3B,CAA7B;IACA,IAAI2N,mBAAJ;;IACA,KAAK,IAAI1U,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyU,aAAa,CAAC9U,MAAlC,EAA0CK,CAAC,EAA3C,EAA+C;MAC3C,IAAI2U,IAAI,GAAGrT,OAAO,CAACmT,aAAa,CAACzU,CAAD,CAAd,EAAmB,MAAMiD,QAAzB,CAAlB;MACA,IAAI2R,MAAM,GAAGD,IAAI,CAACE,YAAL,CAAkB,UAAlB,EAA8B5B,QAA9B,EAAb;;MACA,IAAI,KAAK5B,QAAL,KAAkB,CAAtB,EAAyB;QACrBqD,mBAAmB,GAAG,IAAI7S,WAAJ,CAAgB,KAAKoN,QAArB,EAClB6D,YADkB,CACL,IAAIhR,KAAJ,GAAYqP,KAAZ,CAAkB,KAAKtG,MAAL,CAAYqG,QAA9B,EAAwC,OAAxC,EAAiD0D,MAAjD,EAAyD,IAAzD,CADK,CAAtB;MAEH,CAHD,MAIK;QACDF,mBAAmB,GAAG,KAAKhD,aAAL,CAAmB,KAAKzC,QAAxB,EAAkC2F,MAAlC,CAAtB;MACH;;MACD,IAAIT,KAAK,GAAG,CAAZ;;MACA,IAAIO,mBAAJ,EAAyB;QACrB,KAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,mBAAmB,CAAC/U,MAAxC,EAAgDmV,CAAC,EAAjD,EAAqD;UACjD,IAAIvB,OAAO,GAAGmB,mBAAmB,CAACI,CAAD,CAAnB,CAAuB,KAAKjK,MAAL,CAAY6B,EAAnC,EAAuCuG,QAAvC,EAAd;;UACA,IAAI,KAAK3H,YAAL,CAAkBqF,OAAlB,CAA0B4C,OAA1B,MAAuC,CAAC,CAA5C,EAA+C;YAC3CY,KAAK;UACR;QACJ;;QACD,IAAIA,KAAK,KAAKO,mBAAmB,CAAC/U,MAAlC,EAA0C;UACtC,IAAIoV,SAAS,GAAGJ,IAAI,CAACE,YAAL,CAAkB,UAAlB,CAAhB;;UACA,IAAI,KAAKvJ,YAAL,CAAkBqF,OAAlB,CAA0BoE,SAA1B,MAAyC,CAAC,CAA9C,EAAiD;YAC7C,KAAKzJ,YAAL,CAAkBoD,IAAlB,CAAuBqG,SAAvB;UACH;;UACD,KAAKP,WAAL,CAAiBG,IAAjB,EAAuB,OAAvB,EAAgC,IAAhC,EAAsC,IAAtC,EAA4C,IAA5C;QACH,CAND,MAOK,IAAIR,KAAK,KAAK,CAAV,IAAe,KAAK7I,YAAL,CAAkB3L,MAAlB,KAA6B,CAAhD,EAAmD;UACpD,KAAK6U,WAAL,CAAiBG,IAAjB,EAAuB,SAAvB,EAAkC,IAAlC,EAAwC,IAAxC,EAA8C,IAA9C;QACH;MACJ;IACJ;EACJ,CAjCD;EAkCA;AACJ;AACA;;;EACI9N,QAAQ,CAAC3H,SAAT,CAAmByU,uBAAnB,GAA6C,UAAUqB,IAAV,EAAgB;IACzD,IAAIjO,OAAJ;;IACA,IAAI,KAAKsK,QAAL,KAAkB,CAAtB,EAAyB;MACrBtK,OAAO,GAAG,KAAKA,OAAL,CAAauH,aAAb,CAA2B,gBAAgB0G,IAAI,CAAC,KAAKnK,MAAL,CAAYqG,QAAb,CAApB,GAA6C,IAAxE,CAAV;IACH,CAFD,MAGK;MACDnK,OAAO,GAAG,KAAKA,OAAL,CAAauH,aAAb,CAA2B,gBAAgB0G,IAAI,CAAC,KAAKnK,MAAL,CAAY6B,EAAb,CAApB,GAAuC,IAAlE,CAAV;IACH;;IACD,IAAI3F,OAAJ,EAAa;MACT,IAAIkO,WAAW,GAAGlO,OAAO,CAACuH,aAAR,CAAsB,MAAMnJ,YAA5B,EAA0C0P,YAA1C,CAAuD,cAAvD,CAAlB;;MACA,IAAII,WAAW,KAAK,MAApB,EAA4B;QACxB,KAAKT,WAAL,CAAiBzN,OAAjB,EAA0B,eAA1B,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,IAAvD;MACH;IACJ,CALD,MAMK,IAAI,KAAKsK,QAAL,KAAkB,CAAtB,EAAyB;MAC1B,IAAI+C,GAAG,GAAG,KAAKlM,eAAL,CAAqBvI,MAA/B;;MACA,IAAI,KAAKuI,eAAL,CAAqByI,OAArB,CAA6BqE,IAAI,CAAC,KAAKnK,MAAL,CAAY6B,EAAb,CAAJ,CAAqBuG,QAArB,EAA7B,MAAkE,CAAC,CAAvE,EAA0E;QACtE,KAAK/K,eAAL,CAAqBwG,IAArB,CAA0BsG,IAAI,CAAC,KAAKnK,MAAL,CAAY6B,EAAb,CAAJ,CAAqBuG,QAArB,EAA1B;MACH;IACJ;EACJ,CApBD;EAqBA;AACJ;AACA;;;EACIpM,QAAQ,CAAC3H,SAAT,CAAmB8U,qBAAnB,GAA2C,UAAUD,UAAV,EAAsB9E,QAAtB,EAAgC;IACvE,IAAIkF,KAAK,GAAG,CAAZ;IACA,IAAIe,aAAa,GAAGjG,QAAQ,CAAC,KAAKpE,MAAL,CAAY6B,EAAb,CAAR,GAA2BuC,QAAQ,CAAC,KAAKpE,MAAL,CAAY6B,EAAb,CAAR,CAAyBuG,QAAzB,EAA3B,GAAiE,EAArF;;IACA,KAAK,IAAI/H,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG6I,UAAU,CAACpU,MAAvC,EAA+CuL,KAAK,EAApD,EAAwD;MACpD,IAAIiK,YAAY,GAAGpB,UAAU,CAAC7I,KAAD,CAAV,CAAkB,KAAKL,MAAL,CAAY6B,EAA9B,IAAoCqH,UAAU,CAAC7I,KAAD,CAAV,CAAkB,KAAKL,MAAL,CAAY6B,EAA9B,EAAkCuG,QAAlC,EAApC,GAAmF,EAAtG;;MACA,IAAIc,UAAU,CAAC7I,KAAD,CAAV,CAAkB,KAAKL,MAAL,CAAYkI,SAA9B,KAA4C,CAAE,KAAK/H,QAAnD,IAAgE,KAAKM,YAAL,CAAkBqF,OAAlB,CAA0BwE,YAA1B,MAA4C,CAAC,CAAjH,EAAoH;QAChH,KAAK7J,YAAL,CAAkBoD,IAAlB,CAAuByG,YAAvB;MACH;;MACD,IAAI,KAAK7J,YAAL,CAAkBqF,OAAlB,CAA0BuE,aAA1B,MAA6C,CAAC,CAA9C,IAAmD,KAAK5J,YAAL,CAAkBqF,OAAlB,CAA0BwE,YAA1B,MAA4C,CAAC,CAAhG,IAAqG,KAAKzC,SAA9G,EAAyH;QACrH,KAAKpH,YAAL,CAAkBoD,IAAlB,CAAuByG,YAAvB;MACH;;MACD,IAAI,KAAK7J,YAAL,CAAkBqF,OAAlB,CAA0BwE,YAA1B,MAA4C,CAAC,CAA7C,IAAkD,KAAKzC,SAA3D,EAAsE;QAClEyB,KAAK;MACR;;MACD,IAAI,KAAK7I,YAAL,CAAkBqF,OAAlB,CAA0BwE,YAA1B,IAA0C,CAAC,CAA3C,IAAgD,KAAK5N,UAAL,CAAgBoJ,OAAhB,CAAwBwE,YAAxB,MAA0C,CAAC,CAA/F,EAAkG;QAC9F,KAAK5N,UAAL,CAAgBmH,IAAhB,CAAqByG,YAArB;MACH;;MACD,IAAIC,aAAa,GAAGnT,QAAQ,CAAC,KAAK4I,MAAL,CAAYyI,KAAZ,CAAkBL,QAAlB,EAAD,EAA+Bc,UAAU,CAAC7I,KAAD,CAAzC,CAA5B;;MACA,IAAIkK,aAAa,IAAIA,aAAa,CAACzV,MAAnC,EAA2C;QACvC,IAAI,KAAK6S,eAAL,CAAqB7B,OAArB,CAA6B1B,QAA7B,MAA2C,CAAC,CAAhD,EACI,KAAKuD,eAAL,CAAqB9D,IAArB,CAA0BO,QAA1B;QACJ,KAAK+E,qBAAL,CAA2BoB,aAA3B,EAA0CrB,UAAU,CAAC7I,KAAD,CAApD;MACH;;MACD,IAAIiJ,KAAK,KAAKJ,UAAU,CAACpU,MAArB,IAA+B,KAAK+S,SAApC,IAAiD,KAAKpH,YAAL,CAAkBqF,OAAlB,CAA0BuE,aAA1B,MAA6C,CAAC,CAAnG,EAAsG;QAClG,KAAK5J,YAAL,CAAkBoD,IAAlB,CAAuBwG,aAAvB;MACH;IACJ;;IACD,IAAIf,KAAK,KAAK,CAAV,IAAe,KAAKzB,SAAxB,EAAmC;MAC/B,KAAKiB,uBAAL,CAA6B1E,QAA7B;;MACA,KAAK,IAAImF,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,KAAK5B,eAAL,CAAqB7S,MAA7C,EAAqDyU,GAAG,EAAxD,EAA4D;QACxD,IAAKnF,QAAQ,KAAK,KAAKuD,eAAL,CAAqB4B,GAArB,CAAd,IAA6C,KAAK5B,eAAL,CAAqB4B,GAArB,CAAjD,EAA6E;UACzE,KAAKT,uBAAL,CAA6B,KAAKnB,eAAL,CAAqB4B,GAArB,CAA7B;QACH;MACJ;IACJ;EACJ,CAnCD;;EAoCAvN,QAAQ,CAAC3H,SAAT,CAAmBsL,gBAAnB,GAAsC,UAAUD,CAAV,EAAa;IAC/C,IAAI,KAAKoI,YAAT,EAAuB;MACnB,IAAI0C,WAAW,GAAG9S,cAAc,CAAC,KAAK0P,aAAN,EAAqB,IAArB,EAA2B;QAAErF,QAAQ,EAAE,KAAK0I;MAAjB,CAA3B,CAAhC;MACAD,WAAW,CAAC5I,YAAZ,CAAyB,MAAzB,EAAiC,UAAjC;MACA,IAAI8I,IAAI,GAAG9T,MAAM,CAAC,SAASiC,IAAV,EAAgB6G,CAAC,CAACiL,IAAlB,CAAjB;MACA,IAAI9I,EAAE,GAAGnC,CAAC,CAACiL,IAAF,CAAOX,YAAP,CAAoB,UAApB,CAAT;MACAtK,CAAC,CAACiL,IAAF,CAAOnB,UAAP,CAAkB,CAAlB,EAAqBoB,YAArB,CAAkCJ,WAAlC,EAA+C9K,CAAC,CAACiL,IAAF,CAAOnB,UAAP,CAAkB,CAAlB,EAAqBA,UAArB,CAAgCtS,KAAK,CAACwT,IAAD,CAAL,GAAc,CAAd,GAAkB,CAAlD,CAA/C;MACA,IAAIG,UAAU,GAAGzT,QAAQ,CAACsI,CAAC,CAACM,MAAF,CAASkI,SAAV,EAAqBxI,CAAC,CAACoL,OAAvB,CAAzB;;MACA,IAAI,KAAKrK,YAAL,CAAkBqF,OAAlB,CAA0BjE,EAA1B,IAAgC,CAAC,CAArC,EAAwC;QACpCjL,MAAM,CAAC,MAAM2D,aAAP,EAAsBiQ,WAAtB,CAAN,CAAyCjI,SAAzC,CAAmDC,GAAnD,CAAuDpI,KAAvD;QACAoQ,WAAW,CAAC5I,YAAZ,CAAyB,cAAzB,EAAyC,MAAzC;QACA,KAAKmJ,QAAL,CAAcrL,CAAC,CAACiL,IAAhB;MACH,CAJD,MAKK,IAAI,CAACzT,KAAK,CAAC2T,UAAD,CAAN,IAAsBA,UAAU,CAACzC,QAAX,OAA0B,MAApD,EAA4D;QAC7DxR,MAAM,CAAC,MAAM2D,aAAP,EAAsBiQ,WAAtB,CAAN,CAAyCjI,SAAzC,CAAmDC,GAAnD,CAAuDpI,KAAvD;QACAoQ,WAAW,CAAC5I,YAAZ,CAAyB,cAAzB,EAAyC,MAAzC;QACA,KAAKmJ,QAAL,CAAcrL,CAAC,CAACiL,IAAhB;MACH,CAJI,MAKA;QACDH,WAAW,CAAC5I,YAAZ,CAAyB,cAAzB,EAAyC,OAAzC;MACH;;MACD,IAAIoJ,KAAK,GAAGpU,MAAM,CAAC,MAAM2D,aAAP,EAAsBiQ,WAAtB,CAAlB;MACAzU,YAAY,CAACyM,GAAb,CAAiBwI,KAAjB,EAAwB,WAAxB,EAAqC,KAAKC,iBAA1C,EAA6D,IAA7D;MACAlV,YAAY,CAACyM,GAAb,CAAiBwI,KAAjB,EAAwB,SAAxB,EAAmC,KAAKC,iBAAxC,EAA2D,IAA3D;IACH;;IACD,IAAI,KAAK/I,aAAT,EAAwB;MACpB,KAAKgJ,aAAL,CAAmBxL,CAAC,CAACiL,IAArB;IACH;;IACD,IAAI,KAAKQ,mBAAL,IAA4B,CAACzL,CAAC,CAACiL,IAAF,CAAOpI,SAAP,CAAiB6I,QAAjB,CAA0BrR,QAA1B,CAAjC,EAAsE;MAClE2F,CAAC,CAACiL,IAAF,CAAO/I,YAAP,CAAoB,eAApB,EAAqC,OAArC;IACH;;IACD,IAAI5B,MAAM,GAAGN,CAAC,CAACM,MAAf;IACA,KAAKqL,cAAL,CAAoB3L,CAApB,EAAuBM,MAAM,CAACsL,QAA9B,EAAwCvR,QAAxC;IACA,KAAKsR,cAAL,CAAoB3L,CAApB,EAAuBM,MAAM,CAACuL,QAA9B,EAAwCvR,QAAxC;;IACA,IAAI,CAAC9C,KAAK,CAAC,KAAKkL,cAAN,CAAV,EAAiC;MAC7B,IAAIoJ,OAAO,GAAG9L,CAAC,CAACiL,IAAF,CAAOlH,aAAP,CAAqB,MAAMpL,QAA3B,CAAd;MACA,IAAIoT,MAAM,GAAG/L,CAAC,CAACiL,IAAF,CAAOX,YAAP,CAAoB,UAApB,CAAb;MACAwB,OAAO,CAAC9H,SAAR,GAAoB,EAApB;MACA,KAAKgI,kBAAL,CAAwBhM,CAAC,CAACoL,OAA1B,EAAmCU,OAAnC,EAA4CC,MAA5C;IACH;;IACD,IAAIE,SAAS,GAAG;MACZ7B,IAAI,EAAEpK,CAAC,CAACiL,IADI;MAEZiB,QAAQ,EAAElM,CAAC,CAACoL,OAFA;MAGZ1E,IAAI,EAAE1G,CAAC,CAAC0G;IAHI,CAAhB;;IAKA,IAAI,CAAC,KAAK/J,WAAV,EAAuB;MACnB,KAAKuI,OAAL,CAAa,UAAb,EAAyB+G,SAAzB;IACH;EACJ,CAhDD;;EAiDA3P,QAAQ,CAAC3H,SAAT,CAAmB4W,iBAAnB,GAAuC,UAAUvL,CAAV,EAAa;IAChD,IAAImM,UAAU,GAAGjV,MAAM,CAAC,MAAM4D,cAAP,EAAuBkF,CAAC,CAACjL,MAAF,CAASqX,aAAhC,CAAvB;IACAnU,kBAAkB,CAAC+H,CAAD,EAAImM,UAAJ,CAAlB;EACH,CAHD;;EAIA7P,QAAQ,CAAC3H,SAAT,CAAmBgX,cAAnB,GAAoC,UAAU3L,CAAV,EAAaqM,MAAb,EAAqBhK,QAArB,EAA+B;IAC/D,IAAIoI,IAAI,GAAGzK,CAAC,CAACoL,OAAb;IACA,IAAIkB,WAAW,GAAG5U,QAAQ,CAAC2U,MAAD,EAAS5B,IAAT,CAA1B;;IACA,IAAI,CAACjT,KAAK,CAAC8U,WAAD,CAAN,IAAuBA,WAAW,CAAC5D,QAAZ,OAA2B,OAAtD,EAA+D;MAC3D1I,CAAC,CAACiL,IAAF,CAAOpI,SAAP,CAAiBC,GAAjB,CAAqBT,QAArB;IACH;EACJ,CAND;;EAOA/F,QAAQ,CAAC3H,SAAT,CAAmBoS,WAAnB,GAAiC,UAAUwF,EAAV,EAAc7G,MAAd,EAAsB;IACnD,IAAI,KAAKpF,MAAL,CAAY8D,UAAZ,YAAkC9M,WAAtC,EAAmD;MAC/C,KAAK,IAAI7B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8W,EAAE,CAACnX,MAAvB,EAA+BK,CAAC,EAAhC,EAAoC;QAChC,IAAI,KAAK4O,SAAT,EAAoB;UAChB,IAAK,OAAOqB,MAAM,CAACqD,KAAd,KAAwB,QAAzB,IAAsCvR,KAAK,CAACE,QAAQ,CAACgO,MAAM,CAACqD,KAAR,EAAewD,EAAE,CAAC9W,CAAD,CAAjB,CAAT,CAA3C,IAA8E,CAAC+B,KAAK,CAACE,QAAQ,CAACgO,MAAM,CAACiB,QAAR,EAAkB4F,EAAE,CAAC9W,CAAD,CAApB,CAAT,CAAxF,EAA4H;YACxH,OAAO,CAAP;UACH;QACJ,CAJD,MAKK,IAAK,OAAOiQ,MAAM,CAACqD,KAAd,KAAwB,QAAzB,IAAsCvR,KAAK,CAACE,QAAQ,CAACgO,MAAM,CAACqD,KAAR,EAAewD,EAAE,CAAC9W,CAAD,CAAjB,CAAT,CAA/C,EAAgF;UACjF,OAAO,CAAP;QACH;MACJ;;MACD,OAAO,CAAP;IACH;;IACD,KAAK,IAAIA,CAAC,GAAG,CAAR,EAAWoU,GAAG,GAAG0C,EAAE,CAACnX,MAAzB,EAAiCK,CAAC,GAAGoU,GAArC,EAA0CpU,CAAC,EAA3C,EAA+C;MAC3C,IAAK,OAAOiQ,MAAM,CAACqD,KAAd,KAAwB,QAAzB,IAAsC,CAACvR,KAAK,CAACE,QAAQ,CAACgO,MAAM,CAACqD,KAAR,EAAewD,EAAE,CAAC9W,CAAD,CAAjB,CAAT,CAAhD,EAAiF;QAC7E,OAAO,CAAP;MACH;;MACD,IAAI,CAAC+B,KAAK,CAACE,QAAQ,CAACgO,MAAM,CAACiB,QAAR,EAAkB4F,EAAE,CAAC9W,CAAD,CAApB,CAAT,CAAN,IAA4C,CAAC+B,KAAK,CAACE,QAAQ,CAACgO,MAAM,CAACkD,WAAR,EAAqB2D,EAAE,CAAC9W,CAAD,CAAvB,CAAT,CAAtD,EAA6F;QACzF,OAAO,CAAP;MACH;IACJ;;IACD,OAAO,CAAP;EACH,CAvBD;;EAwBA6G,QAAQ,CAAC3H,SAAT,CAAmBsS,cAAnB,GAAoC,UAAU7C,UAAV,EAAsBoI,OAAtB,EAA+B;IAC/D,IAAIC,QAAQ,GAAG,IAAIlV,KAAJ,GAAYmV,KAAZ,CAAkBF,OAAlB,CAAf;IACA,IAAID,EAAE,GAAGxU,QAAQ,CAAC4U,aAAT,CAAuBvI,UAAvB,EAAmCqI,QAAnC,CAAT;IACA,IAAIG,OAAO,GAAG,EAAd;;IACA,KAAK,IAAIrC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgC,EAAE,CAACnX,MAAvB,EAA+BmV,CAAC,EAAhC,EAAoC;MAChC,IAAIsC,OAAO,GAAGN,EAAE,CAAChC,CAAD,CAAF,CAAMuC,KAApB;MACAF,OAAO,CAACzI,IAAR,CAAa0I,OAAb;IACH;;IACD,OAAOD,OAAP;EACH,CATD;;EAUAtQ,QAAQ,CAAC3H,SAAT,CAAmB4S,aAAnB,GAAmC,UAAUwF,IAAV,EAAgB;IAC/C,IAAIA,IAAI,IAAI,KAAKtG,SAAL,KAAmB,MAA/B,EAAuC;MACnCsG,IAAI,GAAGhV,QAAQ,CAAC4U,aAAT,CAAuBI,IAAvB,EAA6BhV,QAAQ,CAACyO,UAAT,CAAoB,KAAKC,SAAzB,EAAoC,KAAKnG,MAAL,CAAYoG,IAAhD,CAA7B,CAAP;IACH;;IACD,OAAOqG,IAAP;EACH,CALD;;EAMAzQ,QAAQ,CAAC3H,SAAT,CAAmBqT,YAAnB,GAAkC,UAAUxL,OAAV,EAAmB;IACjD,IAAIwQ,MAAM,GAAG7V,SAAS,CAAC,MAAM+D,KAAP,EAAcsB,OAAd,CAAtB;;IACA,KAAK,IAAIyQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAAM,CAAC5X,MAA3B,EAAmC6X,CAAC,EAApC,EAAwC;MACpCD,MAAM,CAACC,CAAD,CAAN,CAAU/K,YAAV,CAAuB,KAAvB,EAA8BhH,KAA9B;IACH;;IACD,IAAI,KAAKuF,QAAT,EAAmB;MACf,IAAIyM,MAAM,GAAG/V,SAAS,CAAC,MAAMkD,QAAP,EAAiBmC,OAAjB,CAAtB;;MACA,KAAK,IAAI/G,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyX,MAAM,CAAC9X,MAA3B,EAAmCK,CAAC,EAApC,EAAwC;QACpC,KAAK0X,UAAL,CAAgBD,MAAM,CAACzX,CAAD,CAAtB,EAA2B,IAA3B;QACA;MACH;;MACDqB,WAAW,CAACoW,MAAD,EAAS7S,QAAT,CAAX;IACH;;IACD,IAAI+S,MAAM,GAAGjW,SAAS,CAAC,MAAMuB,QAAN,GAAiB,QAAjB,GAA4B4B,QAA5B,GAAuC,GAAxC,EAA6CkC,OAA7C,CAAtB;;IACA,KAAK,IAAI+N,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6C,MAAM,CAAChY,MAA3B,EAAmCmV,CAAC,EAApC,EAAwC;MACpC,IAAIS,IAAI,GAAG9T,MAAM,CAAC,SAASiC,IAAV,EAAgBiU,MAAM,CAAC7C,CAAD,CAAtB,CAAjB;;MACA,IAAIS,IAAI,IAAIA,IAAI,CAACnI,SAAL,CAAe6I,QAAf,CAAwBjT,UAAxB,CAAZ,EAAiD;QAC7C,KAAK4U,iBAAL,CAAuBD,MAAM,CAAC7C,CAAD,CAA7B;MACH;IACJ;;IACD,IAAI+C,MAAM,GAAGnW,SAAS,CAAC,MAAMmD,QAAP,EAAiBkC,OAAjB,CAAtB;;IACA,IAAI,CAAC,KAAKkE,cAAV,EAA0B;MACtB,KAAK,IAAIjL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6X,MAAM,CAAClY,MAA3B,EAAmCK,CAAC,EAApC,EAAwC;QACpC,KAAKqS,gBAAL,CAAsBwF,MAAM,CAAC7X,CAAD,CAA5B;MACH;IACJ;;IACDqB,WAAW,CAACwW,MAAD,EAAShT,QAAT,CAAX;IACA,KAAKiT,UAAL;;IACA,IAAI,KAAK9M,QAAT,EAAmB;MACf,KAAK+M,iBAAL;IACH;EACJ,CA/BD;;EAgCAlR,QAAQ,CAAC3H,SAAT,CAAmB6Y,iBAAnB,GAAuC,YAAY;IAC/C,IAAI,KAAKpF,YAAT,EAAuB;MACnB,IAAIqF,KAAK,GAAG,GAAGC,MAAH,CAAU,EAAV,EAAc,KAAK3M,YAAnB,CAAZ;MACA,KAAKD,aAAL,CAAmB;QAAEC,YAAY,EAAE0M;MAAhB,CAAnB,EAA4C,IAA5C;IACH;EACJ,CALD;;EAMAnR,QAAQ,CAAC3H,SAAT,CAAmBgZ,mBAAnB,GAAyC,YAAY;IACjD,IAAI,KAAKxF,SAAT,EAAoB;MAChB,IAAIyF,SAAS,GAAGzW,SAAS,CAAC,IAAD,EAAO,KAAKqF,OAAZ,CAAzB;MACA,IAAIgL,SAAS,GAAG,KAAK,CAArB;;MACA,KAAK,IAAI/R,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmY,SAAS,CAACxY,MAA9B,EAAsCK,CAAC,EAAvC,EAA2C;QACvC,IAAImY,SAAS,CAACnY,CAAD,CAAT,CAAaoN,SAAb,CAAuB6I,QAAvB,CAAgChT,QAAhC,CAAJ,EAA+C;UAC3C8O,SAAS,GAAGtQ,MAAM,CAAC,MAAM4B,UAAP,EAAmB8U,SAAS,CAACnY,CAAD,CAA5B,CAAlB;;UACA,IAAI+R,SAAJ,EAAe;YACX,KAAKqG,sBAAL,CAA4BD,SAAS,CAACnY,CAAD,CAArC;UACH,CAFD,MAGK;YACD,KAAKqY,qBAAL,CAA2BF,SAAS,CAACnY,CAAD,CAApC;UACH;QACJ;MACJ;IACJ,CAdD,MAeK;MACD,IAAIyU,aAAa,GAAG/S,SAAS,CAAC,MAAMwD,aAAP,EAAsB,KAAK6B,OAA3B,CAA7B;;MACA,KAAK,IAAI/G,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyU,aAAa,CAAC9U,MAAlC,EAA0CK,CAAC,EAA3C,EAA+C;QAC3CyU,aAAa,CAACzU,CAAD,CAAb,CAAiBoN,SAAjB,CAA2BpM,MAA3B,CAAkCkE,aAAlC;MACH;IACJ;EACJ,CAtBD;;EAuBA2B,QAAQ,CAAC3H,SAAT,CAAmBkZ,sBAAnB,GAA4C,UAAUrR,OAAV,EAAmB;IAC3D,IAAI,CAAChF,KAAK,CAACgF,OAAD,CAAV,EAAqB;MACjB,IAAIA,OAAO,CAACqG,SAAR,CAAkB6I,QAAlB,CAA2BpT,IAA3B,CAAJ,EAAsC;QAClC;MACH;;MACD,IAAIkP,SAAS,GAAGhL,OAAhB;;MACA,IAAIA,OAAO,CAACqG,SAAR,CAAkB6I,QAAlB,CAA2BhT,QAA3B,CAAJ,EAA0C;QACtC8O,SAAS,GAAGtQ,MAAM,CAAC,MAAM4B,UAAP,EAAmB0D,OAAnB,CAAlB;MACH;;MACD,IAAIuE,YAAY,GAAG5J,SAAS,CAAC,MAAMuD,KAAP,EAAc8M,SAAd,CAA5B;MACA,IAAIuG,kBAAkB,GAAG5W,SAAS,CAAC,MAAMwD,aAAP,EAAsB6M,SAAtB,CAAlC;MACA,IAAIiG,KAAK,GAAGtW,SAAS,CAAC,MAAMuB,QAAP,EAAiB8O,SAAjB,CAArB;MACA,IAAIwG,WAAW,GAAGxR,OAAO,CAACyR,sBAAR,CAA+BrT,YAA/B,EAA6C,CAA7C,CAAlB;;MACA,IAAI6S,KAAK,CAACrY,MAAN,KAAiB2L,YAAY,CAAC3L,MAAlC,EAA0C;QACtC,KAAK6U,WAAL,CAAiB+D,WAAjB,EAA8B,OAA9B,EAAuC,IAAvC,EAA6C,IAA7C,EAAmD,IAAnD;MACH,CAFD,MAGK,IAAIjN,YAAY,CAAC3L,MAAb,GAAsB,CAAtB,IAA2B2Y,kBAAkB,CAAC3Y,MAAnB,GAA4B,CAA3D,EAA8D;QAC/D,KAAK6U,WAAL,CAAiB+D,WAAjB,EAA8B,eAA9B,EAA+C,IAA/C,EAAqD,IAArD,EAA2D,IAA3D;MACH,CAFI,MAGA,IAAIjN,YAAY,CAAC3L,MAAb,KAAwB,CAA5B,EAA+B;QAChC,KAAK6U,WAAL,CAAiB+D,WAAjB,EAA8B,SAA9B,EAAyC,IAAzC,EAA+C,IAA/C,EAAqD,IAArD;MACH;;MACD,IAAIE,QAAQ,GAAGnX,OAAO,CAACyF,OAAD,EAAU,MAAM1D,UAAhB,CAAtB;;MACA,IAAI,CAACtB,KAAK,CAAC0W,QAAD,CAAV,EAAsB;QAClB,IAAIC,aAAa,GAAGpX,OAAO,CAACmX,QAAD,EAAW,MAAMxV,QAAjB,CAA3B;QACA,KAAKmV,sBAAL,CAA4BM,aAA5B;MACH;IACJ;EACJ,CA5BD;;EA6BA7R,QAAQ,CAAC3H,SAAT,CAAmBmZ,qBAAnB,GAA2C,UAAUtR,OAAV,EAAmBwD,CAAnB,EAAsB;IAC7D,IAAI,CAACxI,KAAK,CAACgF,OAAD,CAAV,EAAqB;MACjB,IAAI4R,YAAY,GAAGlX,MAAM,CAAC,MAAM4B,UAAP,EAAmB0D,OAAnB,CAAzB;MACA,IAAI6R,UAAU,GAAG,KAAK,CAAtB;;MACA,IAAI,CAAC7W,KAAK,CAAC4W,YAAD,CAAV,EAA0B;QACtBC,UAAU,GAAGlX,SAAS,CAAC,MAAMyD,YAAP,EAAqBwT,YAArB,CAAtB;QACA,IAAI5F,SAAS,GAAGhM,OAAO,CAACyR,sBAAR,CAA+BpT,aAA/B,EAA8C,CAA9C,EAAiDgI,SAAjD,CAA2D6I,QAA3D,CAAoEhR,KAApE,CAAhB;QACA,IAAI4T,WAAW,GAAG9R,OAAO,CAACyR,sBAAR,CAA+BpT,aAA/B,EAA8C,CAA9C,EAAiDgI,SAAjD,CAA2D6I,QAA3D,CAAoE/Q,aAApE,CAAlB;QACA,IAAI4T,UAAU,GAAGH,YAAY,CAACtK,gBAAb,CAA8B,IAA9B,CAAjB;QACA,IAAI0K,WAAW,GAAGJ,YAAY,CAAChC,aAAb,CAA2B9B,YAA3B,CAAwC,eAAxC,CAAlB;QACA,IAAImE,YAAY,GAAG,KAAK,CAAxB;;QACA,KAAK,IAAI9N,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG0N,UAAU,CAACjZ,MAAvC,EAA+CuL,KAAK,EAApD,EAAwD;UACpD,IAAIqI,OAAO,GAAGuF,UAAU,CAAC5N,KAAD,CAAV,CAAkB2J,YAAlB,CAA+B,UAA/B,CAAd;;UACA,IAAI,CAAC9S,KAAK,CAAC,KAAKkX,eAAN,CAAN,IAAgC,CAAClX,KAAK,CAACE,QAAQ,CAAC,KAAK4I,MAAL,CAAYkI,SAAb,EAAwB,KAAKkG,eAAL,CAAqB/N,KAArB,CAAxB,CAAT,CAA1C,EAA0G;YACtG8N,YAAY,GAAG/W,QAAQ,CAAC,KAAK4I,MAAL,CAAYkI,SAAb,EAAwB,KAAKkG,eAAL,CAAqB/N,KAArB,CAAxB,CAAR,GAA+D,OAA/D,GAAyE,SAAxF;;YACA,IAAI,KAAKgO,GAAL,KAAa,CAAC,CAAlB,EAAqB;cACjBF,YAAY,GAAGjG,SAAS,GAAG,OAAH,GAAa,SAArC;YACH;;YACD,IAAKiG,YAAY,KAAK,SAAlB,IAAiC,CAAC7Y,WAAW,CAAC,KAAK+H,eAAN,CAAZ,IAAsC,KAAKwK,SAA3C,IAC9B,KAAKxK,eAAL,CAAqByI,OAArB,CAA6B4C,OAA7B,MAA0C,CAAC,CADlD,EACsD;cAClD,KAAKrL,eAAL,CAAqBiR,MAArB,CAA4B,KAAKjR,eAAL,CAAqByI,OAArB,CAA6B4C,OAA7B,CAA5B,EAAmE,CAAnE;cACAyF,YAAY,GAAG,eAAf;YACH;UACJ,CAVD,MAWK;YACD,IAAII,aAAa,GAAGR,UAAU,CAAC1N,KAAD,CAAV,CAAkBsN,sBAAlB,CAAyCpT,aAAzC,EAAwD,CAAxD,EAA2DgI,SAA3D,CAAqE6I,QAArE,CAA8EhR,KAA9E,CAApB;;YACA,IAAI8N,SAAJ,EAAe;cACXiG,YAAY,GAAG,OAAf;YACH,CAFD,MAGK,IAAII,aAAa,IAAI,CAAC,KAAKpO,QAA3B,EAAqC;cACtCgO,YAAY,GAAG,OAAf;YACH,CAFI,MAGA,IAAI,KAAK1N,YAAL,CAAkBqF,OAAlB,CAA0B4C,OAA1B,MAAuC,CAAC,CAAxC,IAA6C,KAAKvI,QAAlD,KAA+D6N,WAAW,IAAI9F,SAA9E,CAAJ,EAA8F;cAC/FiG,YAAY,GAAG,OAAf;YACH,CAFI,MAGA,IAAIF,UAAU,CAAC5N,KAAD,CAAV,CAAkBkC,SAAlB,CAA4B6I,QAA5B,CAAqCrQ,KAArC,KAAgD,CAACzF,WAAW,CAAC,KAAK+H,eAAN,CAAZ,IAAsC,KAAKwK,SAA3C,KACjDK,SAAS,IAAI8F,WADoC,KACpB,KAAK3Q,eAAL,CAAqByI,OAArB,CAA6B4C,OAA7B,MAA0C,CAAC,CAD3E,EAC+E;cAChFyF,YAAY,GAAG,eAAf;cACA,KAAK9Q,eAAL,CAAqBiR,MAArB,CAA4B,KAAKjR,eAAL,CAAqByI,OAArB,CAA6B4C,OAA7B,CAA5B,EAAmE,CAAnE;YACH,CAJI,MAKA,IAAI,KAAKlC,QAAL,KAAkB,CAAlB,IAAwB,CAAClR,WAAW,CAAC,KAAK+H,eAAN,CAAZ,IAAsC,KAAKwK,SAA3C,KAC5BK,SAAS,IAAI8F,WADe,KACC,KAAK3Q,eAAL,CAAqByI,OAArB,CAA6B4C,OAA7B,MAA0C,CAAC,CADxE,EAC4E;cAC7EyF,YAAY,GAAG,eAAf;cACA,KAAK9Q,eAAL,CAAqBiR,MAArB,CAA4B,KAAKjR,eAAL,CAAqByI,OAArB,CAA6B4C,OAA7B,CAA5B,EAAmE,CAAnE;YACH,CAJI,MAKA;cACDyF,YAAY,GAAG,SAAf;YACH;UACJ;;UACD,KAAKxE,WAAL,CAAiBoE,UAAU,CAAC1N,KAAD,CAA3B,EAAoC8N,YAApC,EAAkDzO,CAAlD,EAAqD,IAArD,EAA2D,IAA3D;QACH;MACJ;;MACD,IAAI,KAAKmI,SAAL,IAAkB,KAAK1H,QAA3B,EAAqC;QACjC,KAAK4H,sBAAL;MACH;IACJ;EACJ,CAxDD;;EAyDA/L,QAAQ,CAAC3H,SAAT,CAAmBma,gBAAnB,GAAsC,UAAUrB,KAAV,EAAiBsB,OAAjB,EAA0B;IAC5D,IAAIC,EAAE,GAAG7X,SAAS,CAAC,MAAMuB,QAAP,EAAiB,KAAK8D,OAAtB,CAAlB;;IACA,IAAI,CAAChF,KAAK,CAACiW,KAAD,CAAV,EAAmB;MACf,KAAK,IAAI5D,GAAG,GAAG4D,KAAK,CAACrY,MAArB,EAA6ByU,GAAG,IAAI,CAApC,EAAuCA,GAAG,EAA1C,EAA8C;QAC1C,IAAIoF,KAAK,GAAG,KAAK,CAAjB;;QACA,IAAIxB,KAAK,CAACrY,MAAN,KAAiB,CAArB,EAAwB;UACpB6Z,KAAK,GAAG,KAAKrY,UAAL,CAAgB6W,KAAK,CAAC5D,GAAG,GAAG,CAAP,CAArB,CAAR;QACH,CAFD,MAGK;UACDoF,KAAK,GAAG,KAAKrY,UAAL,CAAgB6W,KAAK,CAAC5D,GAAD,CAArB,CAAR;QACH;;QACD,IAAIrS,KAAK,CAACyX,KAAD,CAAT,EAAkB;UACd,IAAI7E,IAAI,GAAG,KAAK,CAAhB;UACAA,IAAI,GAAGqD,KAAK,CAAC5D,GAAG,GAAG4D,KAAK,CAACrY,MAAb,CAAL,GAA4BqY,KAAK,CAAC5D,GAAG,GAAG4D,KAAK,CAACrY,MAAb,CAAL,CAA0BsT,QAA1B,EAA5B,GAAmE+E,KAAK,CAAC5D,GAAD,CAAL,GAAa4D,KAAK,CAAC5D,GAAD,CAAL,CAAWnB,QAAX,EAAb,GAAqC,IAA/G;;UACA,IAAI0B,IAAI,KAAK,EAAT,IAAe2E,OAAf,IAA0B3E,IAA9B,EAAoC;YAChC,KAAK8E,mBAAL,CAAyB9E,IAAzB;YACA,KAAK+E,iBAAL,CAAuB/E,IAAvB,EAA6B2E,OAA7B;UACH,CAHD,MAIK,IAAI,KAAKhO,YAAL,CAAkBqF,OAAlB,CAA0BgE,IAA1B,MAAoC,CAAC,CAArC,IAA0CA,IAAI,KAAK,EAAnD,IAAyD,CAAC2E,OAA9D,EAAuE;YACxE,KAAKhO,YAAL,CAAkB6N,MAAlB,CAAyB,KAAK7N,YAAL,CAAkBqF,OAAlB,CAA0BgE,IAA1B,CAAzB,EAA0D,CAA1D;YACA,IAAIZ,UAAU,GAAG,KAAKrC,aAAL,CAAmB,KAAKzC,QAAxB,EAAkC0F,IAAlC,CAAjB;;YACA,IAAIZ,UAAJ,EAAgB;cACZ,KAAK,IAAI/T,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+T,UAAU,CAACpU,MAA/B,EAAuCK,CAAC,EAAxC,EAA4C;gBACxC,IAAI0M,EAAE,GAAGqH,UAAU,CAAC/T,CAAD,CAAV,CAAc,KAAK6K,MAAL,CAAY6B,EAA1B,IAAgCqH,UAAU,CAAC/T,CAAD,CAAV,CAAc,KAAK6K,MAAL,CAAY6B,EAA1B,EAA8BuG,QAA9B,EAAhC,GAA2E,IAApF;;gBACA,IAAI,KAAK3H,YAAL,CAAkBqF,OAAlB,CAA0BjE,EAA1B,MAAkC,CAAC,CAAvC,EAA0C;kBACtC,KAAKpB,YAAL,CAAkB6N,MAAlB,CAAyB,KAAK7N,YAAL,CAAkBqF,OAAlB,CAA0BjE,EAA1B,CAAzB,EAAwD,CAAxD;kBACA,IAAIwM,GAAG,GAAG,KAAKnS,OAAL,CAAauH,aAAb,CAA2B,gBAAgB5B,EAAhB,GAAqB,IAAhD,CAAV;;kBACA,IAAIwM,GAAJ,EAAS;oBACL,KAAK1E,WAAL,CAAiB0E,GAAjB,EAAsB,SAAtB,EAAiC,IAAjC;kBACH;gBACJ;cACJ;;cACD,IAAI,KAAKhR,eAAL,CAAqByI,OAArB,CAA6BgE,IAA7B,MAAuC,CAAC,CAA5C,EAA+C;gBAC3C,KAAKzM,eAAL,CAAqBiR,MAArB,CAA4B,KAAKjR,eAAL,CAAqByI,OAArB,CAA6BgE,IAA7B,CAA5B,EAAgE,CAAhE;cACH;YACJ;;YACD,IAAIA,IAAJ,EAAU;cACN,KAAK+E,iBAAL,CAAuB/E,IAAvB,EAA6B2E,OAA7B;YACH;;YACD,KAAKK,WAAL,CAAiB,KAAK1K,QAAtB,EAAgC,KAAKpE,MAArC,EAA6C8J,IAA7C,EAAmD,WAAnD,EAAgE,IAAhE;UACH;;UACD;QACH;;QACD,IAAIiF,QAAQ,GAAGnY,MAAM,CAAC,MAAM4B,UAAN,GAAmB,IAAnB,GAA0B8B,YAA3B,EAAyCqU,KAAzC,CAArB;QACA,KAAKK,iBAAL,CAAuBD,QAAvB,EAAiC,CAACN,OAAlC,EAA2CE,KAA3C,EAAkD,IAAlD;MACH;IACJ,CA5CD,MA6CK;MACD,IAAIZ,UAAU,GAAGlX,SAAS,CAAC,MAAMyD,YAAP,EAAqB,KAAK4B,OAA1B,CAA1B;;MACA,IAAI,KAAKqL,YAAT,EAAuB;QACnB,KAAK,IAAIlH,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG0N,UAAU,CAACjZ,MAAvC,EAA+CuL,KAAK,EAApD,EAAwD;UACpD,KAAK4O,kBAAL,CAAwBlB,UAAU,CAAC1N,KAAD,CAAlC,EAA2CoO,OAA3C;UACA,KAAK9E,WAAL,CAAiBoE,UAAU,CAAC1N,KAAD,CAA3B,EAAoCoO,OAAO,GAAG,OAAH,GAAa,SAAxD,EAAmE,IAAnE,EAAyE,IAAzE,EAA+E,IAA/E,EAAqFA,OAArF;QACH;MACJ,CALD,MAMK;QACD,KAAK,IAAIpO,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG0N,UAAU,CAACjZ,MAAvC,EAA+CuL,KAAK,EAApD,EAAwD;UACpD,KAAK4O,kBAAL,CAAwBlB,UAAU,CAAC1N,KAAD,CAAlC,EAA2CoO,OAA3C;UACA,KAAK9E,WAAL,CAAiBoE,UAAU,CAAC1N,KAAD,CAA3B,EAAoCoO,OAAO,GAAG,OAAH,GAAa,SAAxD;QACH;MACJ;IACJ;;IACD,IAAItB,KAAJ,EAAW;MACP,KAAK,IAAIlD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkD,KAAK,CAACrY,MAA1B,EAAkCmV,CAAC,EAAnC,EAAuC;QACnC,IAAIH,IAAI,GAAGqD,KAAK,CAAClD,CAAD,CAAL,GAAWkD,KAAK,CAAClD,CAAD,CAAL,CAAS7B,QAAT,EAAX,GAAiC,EAA5C;;QACA,IAAI,CAACqG,OAAL,EAAc;UACV,KAAKK,WAAL,CAAiB,KAAK1K,QAAtB,EAAgC,KAAKpE,MAArC,EAA6C8J,IAA7C,EAAmD,WAAnD,EAAgE,IAAhE;QACH;MACJ;IACJ;;IACD,IAAI,KAAKjC,SAAT,EAAoB;MAChB,KAAKE,sBAAL;IACH;EACJ,CAzED;;EA0EA/L,QAAQ,CAAC3H,SAAT,CAAmB4a,kBAAnB,GAAwC,UAAUC,QAAV,EAAoBT,OAApB,EAA6B;IACjE,IAAIU,MAAM,GAAG1Y,OAAO,CAACyY,QAAD,EAAW,MAAM9W,QAAjB,CAApB;IACA,IAAIyJ,EAAE,GAAGsN,MAAM,CAACnF,YAAP,CAAoB,UAApB,CAAT;IACA,IAAIoF,WAAW,GAAG,KAAKC,WAAL,CAAiBF,MAAjB,CAAlB;;IACA,IAAIC,WAAW,CAAClH,SAAZ,KAA0B,MAA1B,IAAoC,CAACuG,OAAzC,EAAkD;MAC9C,KAAKK,WAAL,CAAiB,KAAK1K,QAAtB,EAAgC,KAAKpE,MAArC,EAA6C6B,EAA7C,EAAiD,WAAjD,EAA8D,IAA9D;IACH;EACJ,CAPD;EAQA;AACJ;AACA;;;EACI7F,QAAQ,CAAC3H,SAAT,CAAmBwa,iBAAnB,GAAuC,UAAU/E,IAAV,EAAgB2E,OAAhB,EAAyB;IAC5D,IAAI,KAAKjI,QAAL,KAAkB,CAAtB,EAAyB;MACrB,IAAI8C,KAAK,GAAG,CAAZ;MACA,IAAInB,QAAQ,GAAG,IAAInR,WAAJ,CAAgB,KAAKoN,QAArB,EAA+B6D,YAA/B,CAA4C,IAAIhR,KAAJ,GAAYqP,KAAZ,CAAkB,KAAKtG,MAAL,CAAY6B,EAA9B,EAAkC,OAAlC,EAA2CiI,IAA3C,EAAiD,IAAjD,CAA5C,CAAf;;MACA,IAAI3B,QAAQ,CAAC,CAAD,CAAZ,EAAiB;QACb,IAAItG,EAAE,GAAGsG,QAAQ,CAAC,CAAD,CAAR,CAAY,KAAKnI,MAAL,CAAY6B,EAAxB,IAA8BsG,QAAQ,CAAC,CAAD,CAAR,CAAY,KAAKnI,MAAL,CAAY6B,EAAxB,EAA4BuG,QAA5B,EAA9B,GAAuE,IAAhF;QACA,IAAIkH,QAAQ,GAAGnH,QAAQ,CAAC,CAAD,CAAR,CAAY,KAAKnI,MAAL,CAAYqG,QAAxB,IAAoC8B,QAAQ,CAAC,CAAD,CAAR,CAAY,KAAKnI,MAAL,CAAYqG,QAAxB,EAAkC+B,QAAlC,EAApC,GAAmF,IAAlG;QACA,IAAI0D,aAAa,GAAG,KAAK5P,OAAL,CAAauH,aAAb,CAA2B,gBAAgB6L,QAAhB,GAA2B,IAAtD,CAApB;QACA,IAAI1F,aAAa,GAAGkC,aAAa,GAAGlV,MAAM,CAAC,MAAMyD,aAAP,EAAsByR,aAAtB,CAAT,GAAgD,IAAjF;QACA,IAAIpC,KAAK,GAAGoC,aAAa,GAAGlV,MAAM,CAAC,MAAMwD,KAAP,EAAc0R,aAAd,CAAT,GAAwC,IAAjE;QACA,IAAI5P,OAAO,GAAG,KAAKA,OAAL,CAAauH,aAAb,CAA2B,gBAAgB5B,EAAhB,GAAqB,IAAhD,CAAd;QACA,IAAI2H,UAAU,GAAG,KAAK3C,aAAL,CAAmB,KAAKzC,QAAxB,EAAkCkL,QAAlC,CAAjB;;QACA,IAAI9F,UAAJ,EAAgB;UACZ,KAAK,IAAIrU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqU,UAAU,CAAC1U,MAA/B,EAAuCK,CAAC,EAAxC,EAA4C;YACxC,IAAIuT,OAAO,GAAGc,UAAU,CAACrU,CAAD,CAAV,CAAc,KAAK6K,MAAL,CAAY6B,EAA1B,IAAgC2H,UAAU,CAACrU,CAAD,CAAV,CAAc,KAAK6K,MAAL,CAAY6B,EAA1B,EAA8BuG,QAA9B,EAAhC,GAA2E,IAAzF;;YACA,IAAI,KAAK3H,YAAL,CAAkBqF,OAAlB,CAA0B4C,OAA1B,MAAuC,CAAC,CAA5C,EAA+C;cAC3CY,KAAK;YACR;UACJ;QACJ;;QACD,IAAI,KAAK7I,YAAL,CAAkBqF,OAAlB,CAA0BgE,IAA1B,MAAoC,CAAC,CAArC,IAA0CgC,aAA1C,IAA4DjK,EAAE,KAAKiI,IAAnE,IAA4E,KAAKjC,SAArF,EAAgG;UAC5F,KAAK8B,WAAL,CAAiBmC,aAAjB,EAAgC,eAAhC,EAAiD,IAAjD;QACH,CAFD,MAGK,IAAI,KAAKrL,YAAL,CAAkBqF,OAAlB,CAA0BgE,IAA1B,MAAoC,CAAC,CAArC,IAA0C5N,OAA1C,IAAsD2F,EAAE,KAAKiI,IAA7D,IAAsE,CAAC2E,OAA3E,EAAoF;UACrF,KAAK9E,WAAL,CAAiBzN,OAAjB,EAA0B,SAA1B,EAAqC,IAArC;QACH,CAFI,MAGA,IAAI,KAAKuE,YAAL,CAAkBqF,OAAlB,CAA0BgE,IAA1B,MAAoC,CAAC,CAArC,IAA0C5N,OAA1C,IAAsD2F,EAAE,KAAKiI,IAA7D,IAAsE2E,OAA1E,EAAmF;UACpF,KAAK9E,WAAL,CAAiBzN,OAAjB,EAA0B,OAA1B,EAAmC,IAAnC;QACH,CAFI,MAGA,IAAI,KAAKuE,YAAL,CAAkBqF,OAAlB,CAA0BgE,IAA1B,MAAoC,CAAC,CAArC,IAA0C,CAAC5N,OAA3C,IAAsD4P,aAAtD,IAAwEjK,EAAE,KAAKiI,IAA/E,IAAwF,KAAKjC,SAA7F,IACFyB,KAAK,KAAK,CADZ,EACe;UAChB,KAAKK,WAAL,CAAiBmC,aAAjB,EAAgC,eAAhC,EAAiD,IAAjD;QACH,CAHI,MAIA,IAAI,KAAKrL,YAAL,CAAkBqF,OAAlB,CAA0BgE,IAA1B,MAAoC,CAAC,CAArC,IAA0C,CAAC5N,OAA3C,IAAsD4P,aAAtD,IAAwEjK,EAAE,KAAKiI,IAA/E,IAAwF,KAAKjC,SAA7F,IACFyB,KAAK,KAAK,CADZ,EACe;UAChB,KAAKK,WAAL,CAAiBmC,aAAjB,EAAgC,SAAhC,EAA2C,IAA3C;QACH,CAHI,MAIA,IAAI,CAAC5P,OAAD,IAAY,CAAC4P,aAAb,IAA+BjK,EAAE,KAAKiI,IAAtC,IAA+C,KAAKjC,SAAxD,EAAmE;UACpE,KAAK0H,mBAAL,CAAyBzF,IAAzB,EAA+B2E,OAA/B;QACH;MACJ;IACJ,CAxCD,MAyCK,IAAI,KAAKjI,QAAL,KAAkB,CAAlB,IAAwB,KAAKxG,MAAL,CAAY8D,UAAZ,YAAkC9M,WAAlC,IAC7B,KAAK+M,SADJ,EACgB;MACjB,IAAIlC,EAAE,GAAG,KAAK,CAAd;MACA,IAAIiK,aAAa,GAAG,KAAK,CAAzB;MACA,IAAIpC,KAAK,GAAG,KAAK,CAAjB;;MACA,KAAK,IAAIvU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKiP,QAAL,CAActP,MAAlC,EAA0CK,CAAC,EAA3C,EAA+C;QAC3C0M,EAAE,GAAG,KAAKuC,QAAL,CAAcjP,CAAd,EAAiB,KAAK6K,MAAL,CAAY6B,EAA7B,IAAmC,KAAKuC,QAAL,CAAcjP,CAAd,EAAiB,KAAK6K,MAAL,CAAY6B,EAA7B,EAAiCuG,QAAjC,EAAnC,GAAiF,EAAtF;QACA0D,aAAa,GAAG,KAAK5P,OAAL,CAAauH,aAAb,CAA2B,gBAAgB5B,EAAhB,GAAqB,IAAhD,CAAhB;QACA6H,KAAK,GAAGoC,aAAa,GAAGlV,MAAM,CAAC,MAAMwD,KAAP,EAAc0R,aAAd,CAAT,GAAwC,IAA7D;;QACA,IAAI,KAAKrL,YAAL,CAAkBqF,OAAlB,CAA0BjE,EAA1B,MAAkC,CAAC,CAAnC,IAAwCiK,aAAxC,IAAyDpC,KAAzD,IAAkE,CAAC+E,OAAvE,EAAgF;UAC5E,KAAK9E,WAAL,CAAiBmC,aAAjB,EAAgC,SAAhC,EAA2C,IAA3C;QACH;;QACD,IAAI0D,QAAQ,GAAGpY,QAAQ,CAAC,KAAK4I,MAAL,CAAYyI,KAAZ,CAAkBL,QAAlB,EAAD,EAA+B,KAAKhE,QAAL,CAAcjP,CAAd,CAA/B,CAAvB;;QACA,IAAIqa,QAAJ,EAAc;UACV,KAAKC,wBAAL,CAA8BD,QAA9B,EAAwC3N,EAAxC,EAA4CiI,IAA5C,EAAkD2E,OAAlD,EAA2D5M,EAA3D;QACH;MACJ;IACJ;EACJ,CA5DD;EA6DA;AACJ;AACA;;;EACI7F,QAAQ,CAAC3H,SAAT,CAAmBkb,mBAAnB,GAAyC,UAAUzF,IAAV,EAAgB2E,OAAhB,EAAyB;IAC9D,IAAIiB,iBAAiB,GAAG,KAAKC,WAAL,CAAiB7F,IAAjB,CAAxB;IACA,IAAIR,KAAK,GAAG,CAAZ;IACA,IAAIsG,MAAJ;;IACA,IAAI,KAAKpJ,QAAL,KAAkB,CAAtB,EAAyB;MACrBoJ,MAAM,GAAGF,iBAAiB,CAAC,CAAD,CAAjB,CAAqB,KAAK1P,MAAL,CAAYqG,QAAjC,IAA6CqJ,iBAAiB,CAAC,CAAD,CAAjB,CAAqB,KAAK1P,MAAL,CAAYqG,QAAjC,EAA2C+B,QAA3C,EAA7C,GAAqG,IAA9G;IACH;;IACD,IAAIoB,UAAU,GAAG,KAAK3C,aAAL,CAAmB,KAAKzC,QAAxB,EAAkCwL,MAAlC,CAAjB;;IACA,IAAIpG,UAAJ,EAAgB;MACZ,KAAK,IAAIrU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqU,UAAU,CAAC1U,MAA/B,EAAuCK,CAAC,EAAxC,EAA4C;QACxC,IAAIuT,OAAO,GAAGc,UAAU,CAACrU,CAAD,CAAV,CAAc,KAAK6K,MAAL,CAAY6B,EAA1B,IAAgC2H,UAAU,CAACrU,CAAD,CAAV,CAAc,KAAK6K,MAAL,CAAY6B,EAA1B,EAA8BuG,QAA9B,EAAhC,GAA2E,IAAzF;;QACA,IAAI,KAAK3H,YAAL,CAAkBqF,OAAlB,CAA0B4C,OAA1B,MAAuC,CAAC,CAA5C,EAA+C;UAC3CY,KAAK;QACR;MACJ;IACJ;;IACD,IAAIwC,aAAa,GAAG,KAAK5P,OAAL,CAAauH,aAAb,CAA2B,gBAAgBmM,MAAhB,GAAyB,IAApD,CAApB;;IACA,IAAI9D,aAAa,IAAI2C,OAArB,EAA8B;MAC1B,KAAK9E,WAAL,CAAiBmC,aAAjB,EAAgC,eAAhC,EAAiD,IAAjD;IACH,CAFD,MAGK,IAAI,CAAC2C,OAAD,IAAY3C,aAAZ,IAA6B,KAAKzO,eAAL,CAAqByI,OAArB,CAA6B8J,MAA7B,MAAyC,CAAC,CAAvE,IAA4EtG,KAAK,KAAK,CAA1F,EAA6F;MAC9F,KAAKK,WAAL,CAAiBmC,aAAjB,EAAgC,eAAhC,EAAiD,IAAjD;IACH,CAFI,MAGA,IAAI,CAAC2C,OAAD,IAAY3C,aAAZ,IAA6B,KAAKzO,eAAL,CAAqByI,OAArB,CAA6B8J,MAA7B,MAAyC,CAAC,CAAvE,IAA4EtG,KAAK,KAAK,CAA1F,EAA6F;MAC9F,KAAKK,WAAL,CAAiBmC,aAAjB,EAAgC,SAAhC,EAA2C,IAA3C;IACH,CAFI,MAGA,IAAI,CAACA,aAAL,EAAoB;MACrB,IAAI,CAAC2C,OAAD,IAAY,KAAKhO,YAAL,CAAkBqF,OAAlB,CAA0B8J,MAA1B,MAAsC,CAAC,CAAnD,IAAwD,KAAKvS,eAAL,CAAqByI,OAArB,CAA6B8J,MAA7B,MAAyC,CAAC,CAAtG,EAAyG;QACrG,KAAKvS,eAAL,CAAqBiR,MAArB,CAA4B,KAAKjR,eAAL,CAAqByI,OAArB,CAA6B8J,MAA7B,CAA5B,EAAkE,CAAlE;MACH,CAFD,MAGK,IAAInB,OAAO,IAAI,KAAKhO,YAAL,CAAkBqF,OAAlB,CAA0B8J,MAA1B,MAAsC,CAAC,CAAlD,IAAuD,KAAKvS,eAAL,CAAqByI,OAArB,CAA6B8J,MAA7B,MAAyC,CAAC,CAArG,EAAwG;QACzG,KAAKvS,eAAL,CAAqBwG,IAArB,CAA0B+L,MAA1B;MACH,CAFI,MAGA,IAAI,CAACnB,OAAD,IAAY,KAAKhO,YAAL,CAAkBqF,OAAlB,CAA0B8J,MAA1B,MAAsC,CAAC,CAAnD,IAAwD,KAAKvS,eAAL,CAAqByI,OAArB,CAA6B8J,MAA7B,MAAyC,CAAC,CAAlG,IACFtG,KAAK,KAAK,CADZ,EACe;QAChB,KAAKjM,eAAL,CAAqBwG,IAArB,CAA0B+L,MAA1B;MACH;;MACD,KAAKL,mBAAL,CAAyBK,MAAzB,EAAiCnB,OAAjC;;MACA,IAAI,KAAKhO,YAAL,CAAkBqF,OAAlB,CAA0B8J,MAA1B,MAAsC,CAAC,CAAvC,IAA4C,CAACnB,OAAjD,EAA0D;QACtD,KAAKhO,YAAL,CAAkB6N,MAAlB,CAAyB,KAAK7N,YAAL,CAAkBqF,OAAlB,CAA0B8J,MAA1B,CAAzB,EAA4D,CAA5D;MACH;IACJ;EACJ,CA1CD;EA2CA;AACJ;AACA;;;EACI5T,QAAQ,CAAC3H,SAAT,CAAmBob,wBAAnB,GAA8C,UAAUD,QAAV,EAAoBI,MAApB,EAA4B9F,IAA5B,EAAkC2E,OAAlC,EAA2ChG,KAA3C,EAAkD;IAC5F,IAAIa,KAAK,GAAG,CAAZ;;IACA,KAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuF,QAAQ,CAAC1a,MAA7B,EAAqCmV,CAAC,EAAtC,EAA0C;MACtC,IAAI4F,KAAK,GAAGL,QAAQ,CAACvF,CAAD,CAAR,CAAY,KAAKjK,MAAL,CAAY6B,EAAxB,IAA8B2N,QAAQ,CAACvF,CAAD,CAAR,CAAY,KAAKjK,MAAL,CAAY6B,EAAxB,EAA4BuG,QAA5B,EAA9B,GAAuE,EAAnF;;MACA,IAAI,KAAK3H,YAAL,CAAkBqF,OAAlB,CAA0B+J,KAA1B,MAAqC,CAAC,CAA1C,EAA6C;QACzCvG,KAAK;MACR;;MACD,IAAIwC,aAAa,GAAG,KAAK5P,OAAL,CAAauH,aAAb,CAA2B,gBAAgBmM,MAAhB,GAAyB,IAApD,CAApB;MACA,IAAIhG,aAAa,GAAGkC,aAAa,GAAGlV,MAAM,CAAC,MAAMyD,aAAP,EAAsByR,aAAtB,CAAT,GAAgD,IAAjF;MACA,IAAIpC,KAAK,GAAGoC,aAAa,GAAGlV,MAAM,CAAC,MAAMwD,KAAP,EAAc0R,aAAd,CAAT,GAAwC,IAAjE;MACA,IAAI5P,OAAO,GAAG,KAAKA,OAAL,CAAauH,aAAb,CAA2B,gBAAgBoM,KAAhB,GAAwB,IAAnD,CAAd;MACA,IAAIC,iBAAiB,GAAG5T,OAAO,GAAGtF,MAAM,CAAC,MAAMwD,KAAP,EAAc8B,OAAd,CAAT,GAAkC,IAAjE;;MACA,IAAI,KAAKuE,YAAL,CAAkBqF,OAAlB,CAA0BgE,IAA1B,MAAoC,CAAC,CAArC,IAA0CgC,aAA1C,IAA4D+D,KAAK,KAAK/F,IAAtE,IAA+E,KAAKjC,SAAxF,EAAmG;QAC/F,KAAK8B,WAAL,CAAiBmC,aAAjB,EAAgC,eAAhC,EAAiD,IAAjD;MACH,CAFD,MAGK,IAAI,KAAKrL,YAAL,CAAkBqF,OAAlB,CAA0BgE,IAA1B,MAAoC,CAAC,CAArC,IAA0CgC,aAA1C,IAA2D,CAAC5P,OAA5D,IAAwE2T,KAAK,KAAK/F,IAAlF,IAA2F,CAAC2E,OAAhG,EAAyG;QAC1G,IAAI,KAAK5G,SAAT,EAAoB;UAChB,KAAK8B,WAAL,CAAiBmC,aAAjB,EAAgC,SAAhC,EAA2C,IAA3C;QACH,CAFD,MAGK;UACD,IAAIxC,KAAK,KAAK,CAAd,EAAiB;YACb,KAAKK,WAAL,CAAiBmC,aAAjB,EAAgC,eAAhC,EAAiD,IAAjD;UACH,CAFD,MAGK;YACD,KAAKnC,WAAL,CAAiBmC,aAAjB,EAAgC,SAAhC,EAA2C,IAA3C;UACH;QACJ;MACJ,CAZI,MAaA,IAAI,KAAKrL,YAAL,CAAkBqF,OAAlB,CAA0BgE,IAA1B,MAAoC,CAAC,CAArC,IAA0C5N,OAA1C,IAAsD2T,KAAK,KAAK/F,IAAhE,IAAyE,CAAC2E,OAA9E,EAAuF;QACxF,KAAK9E,WAAL,CAAiBzN,OAAjB,EAA0B,SAA1B,EAAqC,IAArC;MACH,CAFI,MAGA,IAAI,KAAKuE,YAAL,CAAkBqF,OAAlB,CAA0BgE,IAA1B,MAAoC,CAAC,CAArC,IAA0CF,aAA1C,IAA4DiG,KAAK,KAAK/F,IAAtE,IAA+E,KAAKjC,SAApF,IAAiGyB,KAAK,KAAK,CAA3G,IACF,CAACmF,OADH,EACY;QACb7E,aAAa,CAACrH,SAAd,CAAwBpM,MAAxB,CAA+BkE,aAA/B;MACH,CAHI,MAIA,IAAI,KAAKoG,YAAL,CAAkBqF,OAAlB,CAA0BgE,IAA1B,MAAoC,CAAC,CAArC,IAA0C,CAAC5N,OAA3C,IAAsDwN,KAAtD,IAAgEmG,KAAK,KAAK/F,IAA1E,IAAmFR,KAAK,KAAK,CAAjG,EAAoG;QACrG,KAAKK,WAAL,CAAiBmC,aAAjB,EAAgC,SAAhC,EAA2C,IAA3C;MACH,CAFI,MAGA,IAAI,KAAKrL,YAAL,CAAkBqF,OAAlB,CAA0B+J,KAA1B,MAAqC,CAAC,CAAtC,IAA2C3T,OAA3C,IAAsD4T,iBAAtD,IAA2ExG,KAAK,KAAK,CAAzF,EAA4F;QAC7F,KAAKK,WAAL,CAAiBzN,OAAjB,EAA0B,SAA1B,EAAqC,IAArC;MACH,CAFI,MAGA,IAAI,CAACA,OAAD,IAAY,CAAC4P,aAAb,IAA+B+D,KAAK,KAAK/F,IAAzC,IAAmD,KAAKzM,eAAL,CAAqByI,OAArB,CAA6B8J,MAA7B,MAAyC,CAAC,CAA3C,IAAiD,KAAK/H,SAA5G,EAAuH;QACxH,IAAIiG,YAAY,GAAG,KAAK5R,OAAL,CAAauH,aAAb,CAA2B,gBAAgBgF,KAAhB,GAAwB,IAAnD,CAAnB;;QACA,IAAIgG,OAAO,IAAInF,KAAK,KAAK,CAAzB,EAA4B;UACxB,KAAKK,WAAL,CAAiBmE,YAAjB,EAA+B,eAA/B,EAAgD,IAAhD;QACH,CAFD,MAGK,IAAIW,OAAO,IAAInF,KAAK,KAAKkG,QAAQ,CAAC1a,MAA9B,IAAwC,KAAK2L,YAAL,CAAkBqF,OAAlB,CAA0B8J,MAA1B,MAAsC,CAAC,CAAnF,EAAsF;UACvF,KAAKnP,YAAL,CAAkBoD,IAAlB,CAAuB+L,MAAvB;QACH,CAFI,MAGA,IAAI,CAACnB,OAAD,IAAYnF,KAAK,KAAK,CAAtB,IAA2B,KAAKjM,eAAL,CAAqByI,OAArB,CAA6B8J,MAA7B,MAAyC,CAAC,CAAzE,EAA4E;UAC7E,KAAKvS,eAAL,CAAqBiR,MAArB,CAA4B,KAAKjR,eAAL,CAAqByI,OAArB,CAA6B8J,MAA7B,CAA5B;QACH;;QACD,IAAI,KAAKvS,eAAL,CAAqByI,OAArB,CAA6B8J,MAA7B,MAAyC,CAAC,CAA9C,EAAiD;UAC7C,KAAKvS,eAAL,CAAqBwG,IAArB,CAA0B+L,MAA1B;QACH;MACJ;;MACD,IAAIG,UAAU,GAAG3Y,QAAQ,CAAC,KAAK4I,MAAL,CAAYyI,KAAZ,CAAkBL,QAAlB,EAAD,EAA+BoH,QAAQ,CAACvF,CAAD,CAAvC,CAAzB;;MACA,IAAI8F,UAAJ,EAAgB;QACZ,KAAKN,wBAAL,CAA8BM,UAA9B,EAA0CF,KAA1C,EAAiD/F,IAAjD,EAAuD2E,OAAvD,EAAgEhG,KAAhE;MACH;IACJ;EACJ,CA7DD;;EA8DAzM,QAAQ,CAAC3H,SAAT,CAAmBsV,WAAnB,GAAiC,UAAUqG,OAAV,EAAmBC,KAAnB,EAA0BvQ,CAA1B,EAA6BwQ,SAA7B,EAAwCC,KAAxC,EAA+C1B,OAA/C,EAAwD;IACrF,IAAItS,KAAK,GAAG,IAAZ;;IACA,IAAIwP,SAAJ;IACA,IAAIwD,MAAM,GAAG1Y,OAAO,CAACuZ,OAAD,EAAU,MAAM5X,QAAhB,CAApB;;IACA,IAAI4X,OAAO,KAAKb,MAAhB,EAAwB;MACpBa,OAAO,GAAGpZ,MAAM,CAAC,MAAM0D,YAAP,EAAqB6U,MAArB,CAAhB;IACH;;IACD,IAAI,CAACe,SAAL,EAAgB;MACZ,KAAK9S,gBAAL,GAAwB,EAAxB;MACAuO,SAAS,GAAG,KAAKyE,aAAL,CAAmBjB,MAAnB,EAA2Bc,KAA3B,EAAkCvQ,CAAlC,CAAZ;MACA,KAAKkF,OAAL,CAAa,cAAb,EAA6B+G,SAA7B,EAAwC,UAAU0E,YAAV,EAAwB;QAC5D,IAAI,CAACA,YAAY,CAACC,MAAlB,EAA0B;UACtBnU,KAAK,CAACoU,eAAN,CAAsBP,OAAtB,EAA+BC,KAA/B,EAAsCd,MAAtC,EAA8CkB,YAA9C,EAA4D3Q,CAA5D,EAA+DwQ,SAA/D,EAA0EC,KAA1E,EAAiF1B,OAAjF;QACH;MACJ,CAJD;IAKH,CARD,MASK;MACD,KAAK8B,eAAL,CAAqBP,OAArB,EAA8BC,KAA9B,EAAqCd,MAArC,EAA6CxD,SAA7C,EAAwDjM,CAAxD,EAA2DwQ,SAA3D,EAAsEC,KAAtE,EAA6E1B,OAA7E;IACH;EACJ,CAnBD;;EAoBAzS,QAAQ,CAAC3H,SAAT,CAAmBkc,eAAnB,GAAqC,UAAUP,OAAV,EAAmBC,KAAnB,EAA0Bd,MAA1B,EAAkCxD,SAAlC,EAA6CjM,CAA7C,EAAgDwQ,SAAhD,EAA2DC,KAA3D,EAAkE1B,OAAlE,EAA2E;IAC5G,IAAI+B,SAAJ;IACA,IAAIC,SAAS,GAAGT,OAAO,CAACrC,sBAAR,CAA+BpT,aAA/B,EAA8C,CAA9C,CAAhB;;IACA,IAAI0V,KAAK,KAAK,OAAV,IAAqB,CAACQ,SAAS,CAAClO,SAAV,CAAoB6I,QAApB,CAA6BhR,KAA7B,CAA1B,EAA+D;MAC3DqW,SAAS,CAAClO,SAAV,CAAoBpM,MAApB,CAA2BkE,aAA3B;MACAoW,SAAS,CAAClO,SAAV,CAAoBC,GAApB,CAAwBpI,KAAxB;MACA,KAAK2Q,QAAL,CAAcoE,MAAd;MACAqB,SAAS,GAAG,MAAZ;IACH,CALD,MAMK,IAAIP,KAAK,KAAK,SAAV,KAAwBQ,SAAS,CAAClO,SAAV,CAAoB6I,QAApB,CAA6BhR,KAA7B,KAAuCqW,SAAS,CAAClO,SAAV,CAAoB6I,QAApB,CAA6B/Q,aAA7B,CAA/D,CAAJ,EAAiH;MAClH7D,WAAW,CAAC,CAACia,SAAD,CAAD,EAAc,CAACrW,KAAD,EAAQC,aAAR,CAAd,CAAX;MACA,KAAKqW,WAAL,CAAiBvB,MAAjB;MACAqB,SAAS,GAAG,OAAZ;IACH,CAJI,MAKA,IAAIP,KAAK,KAAK,eAAV,IAA6B,KAAKpI,SAAtC,EAAiD;MAClD4I,SAAS,CAAClO,SAAV,CAAoBpM,MAApB,CAA2BiE,KAA3B;MACAqW,SAAS,CAAClO,SAAV,CAAoBC,GAApB,CAAwBnI,aAAxB;MACA,KAAKqW,WAAL,CAAiBvB,MAAjB;MACAqB,SAAS,GAAG,OAAZ;IACH;;IACDA,SAAS,GAAGP,KAAK,KAAK,OAAV,GAAoB,MAApB,GAA6BA,KAAK,KAAK,SAAV,GAAsB,OAAtB,GAAgCO,SAAzE;;IACA,IAAI,CAACtZ,KAAK,CAACsZ,SAAD,CAAV,EAAuB;MACnBR,OAAO,CAACpO,YAAR,CAAqB,cAArB,EAAqC4O,SAArC;IACH;;IACD,IAAIL,KAAJ,EAAW;MACP,IAAIhG,IAAI,GAAG,GAAGiD,MAAH,CAAU,EAAV,EAAc,KAAKhQ,gBAAnB,CAAX;MACAuO,SAAS,GAAG,KAAKyE,aAAL,CAAmBjB,MAAnB,EAA2Bc,KAA3B,EAAkCvQ,CAAlC,CAAZ;;MACA,IAAIpK,WAAW,CAAC4a,SAAD,CAAf,EAA4B;QACxBvE,SAAS,CAACxB,IAAV,GAAiBA,IAAjB;MACH;IACJ;;IACD,IAAIsE,OAAO,KAAK7K,SAAhB,EAA2B;MACvB,KAAK+M,iBAAL,CAAuBxB,MAAvB,EAA+BV,OAA/B;IACH;;IACD,IAAI,CAACyB,SAAL,EAAgB;MACZ,IAAI,CAAChZ,KAAK,CAACsZ,SAAD,CAAV,EAAuB;QACnBR,OAAO,CAACpO,YAAR,CAAqB,cAArB,EAAqC4O,SAArC;QACA7E,SAAS,CAACxB,IAAV,CAAe,CAAf,EAAkByG,OAAlB,GAA4BJ,SAA5B;QACA,KAAK5L,OAAL,CAAa,aAAb,EAA4B+G,SAA5B;QACA,KAAKvO,gBAAL,GAAwB,EAAxB;MACH;IACJ;EACJ,CA1CD;;EA2CApB,QAAQ,CAAC3H,SAAT,CAAmB0W,QAAnB,GAA8B,UAAU4D,KAAV,EAAiB;IAC3C,IAAI9M,EAAE,GAAG8M,KAAK,CAAC3E,YAAN,CAAmB,UAAnB,CAAT;;IACA,IAAI,CAAC9S,KAAK,CAAC2K,EAAD,CAAN,IAAc,KAAKpB,YAAL,CAAkBqF,OAAlB,CAA0BjE,EAA1B,MAAkC,CAAC,CAArD,EAAwD;MACpD,KAAKpB,YAAL,CAAkBoD,IAAlB,CAAuBhC,EAAvB;IACH;EACJ,CALD;;EAMA7F,QAAQ,CAAC3H,SAAT,CAAmBqc,WAAnB,GAAiC,UAAU/B,KAAV,EAAiB;IAC9C,IAAItO,KAAK,GAAG,KAAKI,YAAL,CAAkBqF,OAAlB,CAA0B6I,KAAK,CAAC3E,YAAN,CAAmB,UAAnB,CAA1B,CAAZ;;IACA,IAAI3J,KAAK,GAAG,CAAC,CAAb,EAAgB;MACZ,KAAKI,YAAL,CAAkB6N,MAAlB,CAAyBjO,KAAzB,EAAgC,CAAhC;IACH;EACJ,CALD;;EAMArE,QAAQ,CAAC3H,SAAT,CAAmB+b,aAAnB,GAAmC,UAAUjB,MAAV,EAAkBpD,MAAlB,EAA0BrM,CAA1B,EAA6B;IAC5D,KAAKtC,gBAAL,CAAsByG,IAAtB,CAA2B,KAAKwL,WAAL,CAAiBF,MAAjB,CAA3B;IACA,IAAIvD,QAAQ,GAAG,KAAKxO,gBAApB;IACA,OAAO;MAAE2O,MAAM,EAAEA,MAAV;MAAkBuE,MAAM,EAAE,KAA1B;MAAiCO,YAAY,EAAE3Z,KAAK,CAACwI,CAAD,CAAL,GAAW,KAAX,GAAmB,IAAlE;MAAwEoK,IAAI,EAAEqF,MAA9E;MAAsFhF,IAAI,EAAEyB;IAA5F,CAAP;EACH,CAJD;;EAKA5P,QAAQ,CAAC3H,SAAT,CAAmBqQ,QAAnB,GAA8B,YAAY;IACtC,IAAItB,OAAO,GAAGxM,MAAM,CAAC,MAAM4B,UAAP,EAAmB,KAAK0D,OAAxB,CAApB;;IACA,IAAI,CAACzG,iBAAiB,CAAC2N,OAAD,CAAtB,EAAiC;MAC7BA,OAAO,CAACxB,YAAR,CAAqB,MAArB,EAA6B1G,YAAY,CAACC,QAA1C;MACA,KAAKgI,cAAL,CAAoB,KAAKgI,mBAAzB;MACA,IAAI2F,SAAS,GAAGla,MAAM,CAAC,MAAMwB,QAAP,EAAiB,KAAK8D,OAAtB,CAAtB;;MACA,IAAI4U,SAAJ,EAAe;QACXva,QAAQ,CAAC,CAACua,SAAD,CAAD,EAAcnW,KAAd,CAAR;QACA,KAAKoW,YAAL,CAAkB,IAAlB,EAAwBD,SAAxB;MACH;;MACD,IAAI,KAAKE,aAAT,EAAwB;QACpB,KAAKC,UAAL;MACH;;MACD,KAAKC,oBAAL;MACA,KAAKC,MAAL,GAAc,KAAKnM,QAAL,CAAc,CAAd,IAAmB,KAAKA,QAAL,CAAc,CAAd,EAAiB9Q,cAAjB,CAAgC,KAAK8L,MAAL,CAAYqG,QAA5C,CAAnB,GAA2E,KAAzF;MACA,KAAK+K,cAAL;IACH;EACJ,CAjBD;;EAkBApV,QAAQ,CAAC3H,SAAT,CAAmB8N,WAAnB,GAAiC,YAAY;IACzC,CAAC,KAAK6O,aAAL,GAAqBza,QAArB,GAAgCC,WAAjC,EAA8C,CAAC,KAAK0F,OAAN,CAA9C,EAA8D5D,QAA9D;;IACA,IAAI/C,OAAO,CAAC8b,IAAZ,EAAkB;MACd,CAAC,KAAKL,aAAL,GAAqBza,QAArB,GAAgCC,WAAjC,EAA8C,CAAC,KAAK0F,OAAN,CAA9C,EAA8D3D,UAA9D;IACH;EACJ,CALD;;EAMAyD,QAAQ,CAAC3H,SAAT,CAAmB4c,UAAnB,GAAgC,UAAUK,KAAV,EAAiB;IAC7C,IAAI,CAAC,KAAKpP,aAAV,EAAyB;MACrB;IACH;;IACD,IAAIyM,KAAK,GAAG2C,KAAK,GAAGza,SAAS,CAAC,MAAMuB,QAAP,EAAiBkZ,KAAjB,CAAZ,GAAsC,KAAKC,MAA5D;IACA,IAAIzc,MAAM,GAAG6Z,KAAK,CAAC7Z,MAAnB;;IACA,KAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,MAApB,EAA4BK,CAAC,EAA7B,EAAiC;MAC7B,KAAKqc,aAAL,CAAmB7C,KAAK,CAACxZ,CAAD,CAAxB;IACH;EACJ,CATD;;EAUA6G,QAAQ,CAAC3H,SAAT,CAAmBmd,aAAnB,GAAmC,UAAU7C,KAAV,EAAiB;IAChD,IAAIzS,OAAO,GAAGtF,MAAM,CAAC,MAAMkD,OAAP,EAAgB6U,KAAhB,CAApB;;IACA,IAAIzS,OAAO,IAAIA,OAAO,CAACuV,kBAAvB,EAA2C;MACvCvV,OAAO,CAACwV,KAAR,CAAcC,MAAd,GAAuB,KAAKX,aAAL,GAAqB9U,OAAO,CAACuV,kBAAR,CAA2BG,YAA3B,GAA0C,IAA/D,GAAsE,EAA7F;IACH;EACJ,CALD;;EAMA5V,QAAQ,CAAC3H,SAAT,CAAmB+c,cAAnB,GAAoC,YAAY;IAC5C,IAAIS,KAAK,GAAG,KAAKnR,aAAjB;;IACA,IAAI,KAAKN,cAAL,IAAuByR,KAAK,CAAC/c,MAAN,GAAe,CAA1C,EAA6C;MACzC,KAAK0L,aAAL,CAAmB;QAAEE,aAAa,EAAE;MAAjB,CAAnB,EAA0C,IAA1C;MACA;;MACA,IAAI,KAAKV,MAAL,CAAY8D,UAAZ,YAAkC9M,WAAtC,EAAmD;QAC/C,KAAK8a,gBAAL,CAAsBD,KAAtB;MACH,CAFD,MAGK;QACD,KAAK,IAAI1c,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0c,KAAK,CAAC/c,MAA1B,EAAkCK,CAAC,EAAnC,EAAuC;UACnC,IAAI4c,KAAK,GAAGnb,MAAM,CAAC,gBAAgBib,KAAK,CAAC1c,CAAD,CAArB,GAA2B,IAA5B,EAAkC,KAAK+G,OAAvC,CAAlB;;UACA,IAAI,CAAChF,KAAK,CAAC6a,KAAD,CAAV,EAAmB;YACf,IAAIrH,IAAI,GAAG9T,MAAM,CAAC,MAAMuB,UAAP,EAAmBvB,MAAM,CAAC,MAAMkC,QAAP,EAAiBiZ,KAAjB,CAAzB,CAAjB;;YACA,IAAI,CAAC7a,KAAK,CAACwT,IAAD,CAAV,EAAkB;cACd,KAAKsH,YAAL,CAAkBD,KAAlB,EAAyBrH,IAAzB,EAA+B,IAA/B;YACH;UACJ,CALD,MAMK;YACD,IAAImH,KAAK,CAAC1c,CAAD,CAAL,IAAY,KAAKwH,cAAL,CAAoBmJ,OAApB,CAA4B+L,KAAK,CAAC1c,CAAD,CAAjC,MAA0C,CAAC,CAA3D,EAA8D;cAC1D,KAAKwH,cAAL,CAAoBkH,IAApB,CAAyBgO,KAAK,CAAC1c,CAAD,CAAL,CAASiT,QAAT,EAAzB;YACH;;YACD;UACH;QACJ;;QACD,KAAK6J,cAAL;MACH;IACJ,CAxBD,MAyBK;MACD,KAAKA,cAAL;IACH;EACJ,CA9BD;;EA+BAjW,QAAQ,CAAC3H,SAAT,CAAmByd,gBAAnB,GAAsC,UAAUI,GAAV,EAAe;IACjD,IAAIC,KAAK,GAAG,IAAZ;IACA,KAAKC,cAAL,CAAoBF,GAAG,CAAC,KAAK7R,KAAN,CAAvB,EAAqC,YAAY;MAC7C8R,KAAK,CAAC9R,KAAN;;MACA,IAAI8R,KAAK,CAAC9R,KAAN,GAAc6R,GAAG,CAACpd,MAAtB,EAA8B;QAC1Bqd,KAAK,CAACL,gBAAN,CAAuBI,GAAvB;MACH,CAFD,MAGK;QACDC,KAAK,CAACF,cAAN;MACH;IACJ,CARD;EASH,CAXD;;EAYAjW,QAAQ,CAAC3H,SAAT,CAAmB+d,cAAnB,GAAoC,UAAUC,IAAV,EAAgBC,QAAhB,EAA0B;IAC1D,IAAIP,KAAK,GAAGnb,MAAM,CAAC,gBAAgByb,IAAhB,GAAuB,IAAxB,EAA8B,KAAKnW,OAAnC,CAAlB;;IACA,IAAI,CAAChF,KAAK,CAAC6a,KAAD,CAAV,EAAmB;MACf,IAAIrH,IAAI,GAAG9T,MAAM,CAAC,MAAMuB,UAAP,EAAmBvB,MAAM,CAAC,MAAMkC,QAAP,EAAiBiZ,KAAjB,CAAzB,CAAjB;;MACA,IAAI,CAAC7a,KAAK,CAACwT,IAAD,CAAV,EAAkB;QACd,KAAKsH,YAAL,CAAkBD,KAAlB,EAAyBrH,IAAzB,EAA+B,IAA/B,EAAqC,KAArC,EAA4C4H,QAA5C;MACH,CAFD,MAGK;QACDA,QAAQ;MACX;IACJ,CARD,MASK;MACDA,QAAQ;IACX;EACJ,CAdD;;EAeAtW,QAAQ,CAAC3H,SAAT,CAAmB4d,cAAnB,GAAoC,YAAY;IAC5C,KAAKM,iBAAL;IACA,KAAKrF,iBAAL;IACA,KAAK3P,SAAL,GAAiB,IAAjB;IACA,KAAK6C,cAAL,GAAsB,KAAtB;;IACA,IAAI,CAAC,KAAKD,QAAN,IAAkB,KAAKvD,aAA3B,EAA0C;MACtC,IAAI+O,SAAS,GAAG;QAAExB,IAAI,EAAE,KAAK/F;MAAb,CAAhB;MACA,KAAKQ,OAAL,CAAa,WAAb,EAA0B+G,SAA1B;IACH;;IACD,KAAKxL,QAAL,GAAgB,IAAhB;EACH,CAVD;;EAWAnE,QAAQ,CAAC3H,SAAT,CAAmBke,iBAAnB,GAAuC,YAAY;IAC/C,IAAI3F,MAAM,GAAG/V,SAAS,CAAC,MAAMkD,QAAP,EAAiB,KAAKmC,OAAtB,CAAtB;IACA,IAAIsW,KAAK,GAAG,KAAKjS,aAAjB;;IACA,IAAIiS,KAAK,CAAC1d,MAAN,GAAe,CAAnB,EAAsB;MAClB,KAAK0L,aAAL,CAAmB;QAAED,aAAa,EAAE;MAAjB,CAAnB,EAA0C,IAA1C;;MACA,KAAK,IAAIpL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqd,KAAK,CAAC1d,MAA1B,EAAkCK,CAAC,EAAnC,EAAuC;QACnC,IAAIsd,KAAK,GAAG7b,MAAM,CAAC,gBAAgB4b,KAAK,CAACrd,CAAD,CAArB,GAA2B,IAA5B,EAAkC,KAAK+G,OAAvC,CAAlB;;QACA,IAAIuW,KAAK,IAAI,CAAEA,KAAK,CAAClQ,SAAN,CAAgB6I,QAAhB,CAAyB,UAAzB,CAAf,EAAsD;UAClD,KAAKyB,UAAL,CAAgB4F,KAAhB,EAAuB,IAAvB,EAA6B,IAA7B;QACH,CAFD,MAGK;UACD,KAAKlS,aAAL,CAAmBsD,IAAnB,CAAwB2O,KAAK,CAACrd,CAAD,CAA7B;QACH;;QACD,IAAI,CAAC,KAAKgW,mBAAV,EAA+B;UAC3B;QACH;MACJ;IACJ,CAdD,MAeK;MACD,KAAKuH,gBAAL,CAAsB9F,MAAtB;IACH;;IACDpW,WAAW,CAACoW,MAAD,EAAS7S,QAAT,CAAX;EACH,CAtBD;;EAuBAiC,QAAQ,CAAC3H,SAAT,CAAmBqe,gBAAnB,GAAsC,UAAU9F,MAAV,EAAkB;IACpD,KAAK,IAAIzX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyX,MAAM,CAAC9X,MAA3B,EAAmCK,CAAC,EAApC,EAAwC;MACpC,IAAI,CAACyX,MAAM,CAACzX,CAAD,CAAN,CAAUoN,SAAV,CAAoB6I,QAApB,CAA6B,WAA7B,CAAL,EAAgD;QAC5C,KAAKyB,UAAL,CAAgBD,MAAM,CAACzX,CAAD,CAAtB,EAA2B,IAA3B,EAAiC,IAAjC;MACH;;MACD,IAAI,CAAC,KAAKgW,mBAAV,EAA+B;QAC3B;MACH;IACJ;EACJ,CATD;;EAUAnP,QAAQ,CAAC3H,SAAT,CAAmBse,YAAnB,GAAkC,UAAUC,KAAV,EAAiB;IAC/C,IAAIne,MAAM,GAAGme,KAAK,CAACC,aAAN,CAAoBpe,MAAjC;IACAsB,YAAY,CAACI,MAAb,CAAoB,KAAK+F,OAAzB,EAAkC,aAAlC,EAAiD,KAAK4W,kBAAtD;;IACA,IAAI,CAACre,MAAD,IAAW,KAAK6I,eAApB,EAAqC;MACjC;IACH,CAFD,MAGK;MACD,IAAIiF,SAAS,GAAG9N,MAAM,CAAC8N,SAAvB;MACA,IAAImM,EAAE,GAAGjY,OAAO,CAAChC,MAAD,EAAS,MAAM2D,QAAf,CAAhB;;MACA,IAAI,CAACsW,EAAL,EAAS;QACL;MACH,CAFD,MAGK,IAAIkE,KAAK,CAACC,aAAN,CAAoBE,KAApB,KAA8B,CAAlC,EAAqC;QACtC,IAAIC,aAAa,GAAGpc,MAAM,CAAC,MAAM8D,YAAP,EAAqBgU,EAArB,CAA1B;QACA,IAAIuE,WAAW,GAAGrc,MAAM,CAAC,MAAMiC,IAAP,EAAa6V,EAAb,CAAxB;QACA,KAAKwE,WAAL;QACA,KAAKC,eAAL,CAAqBzE,EAArB;;QACA,IAAI,KAAK5G,YAAL,IAAqB,CAAC4G,EAAE,CAACnM,SAAH,CAAa6I,QAAb,CAAsB,WAAtB,CAA1B,EAA8D;UAC1D,IAAIgI,YAAY,GAAG3c,OAAO,CAAChC,MAAD,EAAS,MAAM6F,YAAf,CAA1B;;UACA,IAAI,CAACpD,KAAK,CAACkc,YAAD,CAAV,EAA0B;YACtB,IAAIC,YAAY,GAAGzc,MAAM,CAAC,MAAM2D,aAAP,EAAsB6Y,YAAtB,CAAzB;YACA,KAAKpE,iBAAL,CAAuBoE,YAAvB,EAAqCC,YAAY,CAAC9Q,SAAb,CAAuB6I,QAAvB,CAAgChR,KAAhC,CAArC,EAA6EsU,EAA7E,EAAiFkE,KAAK,CAACC,aAAvF;YACA,KAAKS,iBAAL,CAAuBV,KAAK,CAACC,aAA7B,EAA4CnE,EAA5C;YACA;UACH;QACJ;;QACD,IAAInM,SAAS,CAAC6I,QAAV,CAAmBjT,UAAnB,CAAJ,EAAoC;UAChC,KAAK6Z,YAAL,CAAkBtD,EAAlB,EAAsBja,MAAtB,EAA8Bme,KAA9B;QACH,CAFD,MAGK,IAAIrQ,SAAS,CAAC6I,QAAV,CAAmBlT,WAAnB,CAAJ,EAAqC;UACtC,KAAKqb,YAAL,CAAkB7E,EAAlB,EAAsBja,MAAtB,EAA8Bme,KAA9B;QACH,CAFI,MAGA,IAAII,aAAa,IAAIC,WAArB,EAAkC;UACnC,IAAIA,WAAW,CAAC1Q,SAAZ,CAAsB6I,QAAtB,CAA+B3Q,MAA/B,KAA0CwY,WAAW,CAAC1Q,SAAZ,CAAsB6I,QAAtB,CAA+BjT,UAA/B,CAA9C,EAA0F;YACtF,KAAK6Z,YAAL,CAAkBtD,EAAlB,EAAsBuE,WAAtB,EAAmCL,KAAnC;UACH,CAFD,MAGK,IAAIK,WAAW,CAAC1Q,SAAZ,CAAsB6I,QAAtB,CAA+B3Q,MAA/B,KAA0CwY,WAAW,CAAC1Q,SAAZ,CAAsB6I,QAAtB,CAA+BlT,WAA/B,CAA9C,EAA2F;YAC5F,KAAKqb,YAAL,CAAkB7E,EAAlB,EAAsBuE,WAAtB,EAAmCL,KAAnC;UACH,CAFI,MAGA,IAAI,CAACrQ,SAAS,CAAC6I,QAAV,CAAmB5S,UAAnB,CAAD,IAAmC,CAAC+J,SAAS,CAAC6I,QAAV,CAAmBhT,QAAnB,CAAxC,EAAsE;YACvE,KAAKob,YAAL,CAAkB9E,EAAlB,EAAsBkE,KAAK,CAACC,aAA5B,EAA2C,KAA3C;UACH;QACJ,CAVI,MAWA;UACD,IAAI,CAACtQ,SAAS,CAAC6I,QAAV,CAAmB5S,UAAnB,CAAD,IAAmC,CAAC+J,SAAS,CAAC6I,QAAV,CAAmBhT,QAAnB,CAAxC,EAAsE;YAClE,KAAKob,YAAL,CAAkB9E,EAAlB,EAAsBkE,KAAK,CAACC,aAA5B,EAA2C,KAA3C;UACH;QACJ;MACJ;;MACD,KAAKS,iBAAL,CAAuBV,KAAK,CAACC,aAA7B,EAA4CnE,EAA5C;IACH;EACJ,CAnDD;;EAoDA1S,QAAQ,CAAC3H,SAAT,CAAmBof,gBAAnB,GAAsC,UAAUzD,OAAV,EAAmB0D,OAAnB,EAA4BhU,CAA5B,EAA+B;IACjE,IAAIyP,MAAM,GAAG1Y,OAAO,CAACuZ,OAAD,EAAU,MAAM5X,QAAhB,CAApB;IACA,IAAIuT,SAAS,GAAG,KAAKyE,aAAL,CAAmBJ,OAAnB,EAA4B0D,OAAO,GAAG,SAAH,GAAe,OAAlD,EAA2DhU,CAA3D,CAAhB;IACAiM,SAAS,CAACxB,IAAV,GAAiBwB,SAAS,CAACxB,IAAV,CAAemE,MAAf,CAAsB,CAAtB,EAAyB3C,SAAS,CAACxB,IAAV,CAAerV,MAAf,GAAwB,CAAjD,CAAjB;IACA,KAAK8P,OAAL,CAAa,aAAb,EAA4B+G,SAA5B;EACH,CALD;;EAMA3P,QAAQ,CAAC3H,SAAT,CAAmBif,iBAAnB,GAAuC,UAAU5T,CAAV,EAAagP,EAAb,EAAiB;IACpD,IAAI/C,SAAS,GAAG;MACZiH,KAAK,EAAElT,CADK;MAEZoK,IAAI,EAAE4E;IAFM,CAAhB;IAIA,KAAK9J,OAAL,CAAa,aAAb,EAA4B+G,SAA5B;EACH,CAND;;EAOA3P,QAAQ,CAAC3H,SAAT,CAAmBsf,UAAnB,GAAgC,UAAUxE,MAAV,EAAkBzE,IAAlB,EAAwBkJ,MAAxB,EAAgC;IAC5D,IAAIzX,KAAK,GAAG,IAAZ;;IACA,KAAK+U,oBAAL;;IACA,IAAIxG,IAAI,CAACnI,SAAL,CAAe6I,QAAf,CAAwBzS,IAAxB,CAAJ,EAAmC;MAC/B,KAAKZ,WAAL,CAAiB2S,IAAjB;IACH;;IACD,IAAI,CAAC,KAAK3J,aAAV,EAAyB;MACrB2J,IAAI,CAACnI,SAAL,CAAeC,GAAf,CAAmB,aAAnB;IACH;;IACD,IAAIoR,MAAM,KAAK,IAAX,IAAoBA,MAAM,KAAK,IAAX,IAAmBzE,MAAM,CAAC5M,SAAP,CAAiB6I,QAAjB,CAA0B,YAA1B,CAA3C,EAAqF;MACjF,IAAI,KAAK9O,aAAL,KAAuB,IAA3B,EAAiC;QAC7B9F,WAAW,CAAC,CAACkU,IAAD,CAAD,EAASvS,UAAT,CAAX;QACA5B,QAAQ,CAAC,CAACmU,IAAD,CAAD,EAASxS,WAAT,CAAR;QACA,IAAI2b,OAAO,GAAG,CAAd;QACA,IAAIC,KAAK,GAAG,CAAZ;QACA,IAAIC,OAAO,GAAG,IAAd;QACA,IAAIC,IAAI,GAAGpd,MAAM,CAAC,MAAM4B,UAAP,EAAmB2W,MAAnB,CAAjB;QACA,IAAI8E,OAAO,GAAG9E,MAAd;QACA,KAAK+E,SAAL,CAAeD,OAAf,EAAwBD,IAAxB;QACA,IAAIG,eAAe,GAAGvd,MAAM,CAAC,MAAMwB,QAAN,GAAiB,GAAjB,GAAuBM,MAAxB,EAAgCyW,MAAhC,CAA5B;;QACA,IAAI,KAAK5R,SAAL,IAAkB,CAAC,KAAKlB,WAA5B,EAAyC;UACrC,KAAK4D,MAAL,CAAYmU,OAAZ,CAAoBJ,IAApB,EAA0B;YACtBK,IAAI,EAAE,KAAKC,SAAL,CAAeC,MAAf,CAAsB1Y,MADN;YAEtBC,QAAQ,EAAE,KAAKwY,SAAL,CAAeC,MAAf,CAAsBzY,QAFV;YAGtB0Y,cAAc,EAAE,KAAKF,SAAL,CAAeC,MAAf,CAAsBxY,MAHhB;YAItB0Y,KAAK,EAAE,UAAUC,IAAV,EAAgB;cACnBT,OAAO,CAACvC,KAAR,CAAciD,QAAd,GAAyB,QAAzB;;cACA,IAAI,CAAClf,iBAAiB,CAAC0e,eAAD,CAAlB,IAAuCA,eAAe,YAAYS,WAAtE,EAAmF;gBAC/ET,eAAe,CAAC5R,SAAhB,CAA0BC,GAA1B,CAA8BxH,qBAA9B;cACH;;cACD6Y,OAAO,GAAGI,OAAO,CAACrC,YAAlB;cACAkC,KAAK,GAAGld,MAAM,CAAC,MAAMkC,QAAP,EAAiBqW,MAAjB,CAAN,CAA+ByC,YAAvC;YACH,CAXqB;YAYtBiD,QAAQ,EAAE,UAAUH,IAAV,EAAgB;cACtBA,IAAI,CAACxY,OAAL,CAAawV,KAAb,CAAmBoD,OAAnB,GAA6B,OAA7B;cACAf,OAAO,CAACgB,aAAR,CAAsBL,IAAtB,EAA4Bb,OAA5B,EAAqCC,KAArC;YACH,CAfqB;YAgBtBpW,GAAG,EAAE,UAAUgX,IAAV,EAAgB;cACjBA,IAAI,CAACxY,OAAL,CAAawV,KAAb,CAAmBoD,OAAnB,GAA6B,OAA7B;;cACA,IAAI,CAACrf,iBAAiB,CAAC0e,eAAD,CAAlB,IAAuCA,eAAe,YAAYS,WAAtE,EAAmF;gBAC/ET,eAAe,CAAC5R,SAAhB,CAA0BpM,MAA1B,CAAiC6E,qBAAjC;cACH;;cACDmB,KAAK,CAAC6Y,YAAN,CAAmBf,OAAnB,EAA4BD,IAA5B,EAAkCtJ,IAAlC;YACH;UAtBqB,CAA1B;QAwBH,CAzBD,MA0BK;UACD,KAAKsK,YAAL,CAAkBf,OAAlB,EAA2BD,IAA3B,EAAiCtJ,IAAjC;QACH;MACJ;IACJ,CAzCD,MA0CK;MACD,IAAIuK,EAAE,GAAGre,MAAM,CAAC,MAAM4B,UAAP,EAAmB2W,MAAnB,CAAf;MACA8F,EAAE,CAACvD,KAAH,CAASoD,OAAT,GAAmB,MAAnB;;MACA,IAAI,KAAK9U,MAAL,CAAY8D,UAAZ,YAAkC9M,WAAlC,KAAkD,IAAtD,EAA4D;QACxD,KAAKsF,aAAL,GAAqB,KAArB;MACH;IACJ;;IACD,IAAI,KAAKyE,aAAT,EAAwB;MACpB2J,IAAI,CAACnI,SAAL,CAAeC,GAAf,CAAmB,aAAnB;IACH;EACJ,CA7DD;;EA8DAxG,QAAQ,CAAC3H,SAAT,CAAmB2gB,YAAnB,GAAkC,UAAU7F,MAAV,EAAkB8F,EAAlB,EAAsBvK,IAAtB,EAA4B;IAC1DuK,EAAE,CAACvD,KAAH,CAASoD,OAAT,GAAmB,OAAnB;IACA3F,MAAM,CAACuC,KAAP,CAAaoD,OAAb,GAAuB,OAAvB;IACA3F,MAAM,CAACuC,KAAP,CAAaiD,QAAb,GAAwB,EAAxB;IACAxF,MAAM,CAACuC,KAAP,CAAaC,MAAb,GAAsB,EAAtB;IACAnb,WAAW,CAAC,CAACkU,IAAD,CAAD,EAAS9R,OAAT,CAAX;IACA,KAAKsc,SAAL,CAAe/F,MAAf;;IACA,IAAI,KAAK6B,aAAL,IAAsB,KAAK7Q,QAA3B,IAAuC,KAAKpD,aAAhD,EAA+D;MAC3D,KAAKkU,UAAL,CAAgB9B,MAAhB;MACA,KAAKpS,aAAL,GAAqB,KAArB;IACH;;IACD,IAAI,KAAKoD,QAAL,IAAiB,KAAKgV,UAAtB,IAAoC,CAAC,KAAK9Y,WAA9C,EAA2D;MACvD,KAAK8Y,UAAL,GAAkB,KAAKC,cAAL,CAAoBjG,MAApB,EAA4B,IAA5B,CAAlB;MACA,KAAKvK,OAAL,CAAa,cAAb,EAA6B,KAAKuQ,UAAlC;IACH;EACJ,CAfD;;EAgBAnZ,QAAQ,CAAC3H,SAAT,CAAmB6gB,SAAnB,GAA+B,UAAUvG,KAAV,EAAiB;IAC5CA,KAAK,CAAC/M,YAAN,CAAmB,eAAnB,EAAoC,MAApC;IACApL,WAAW,CAAC,CAACmY,KAAD,CAAD,EAAU1U,aAAV,CAAX;IACA,IAAI4H,EAAE,GAAG8M,KAAK,CAAC3E,YAAN,CAAmB,UAAnB,CAAT;;IACA,IAAI,CAAC9S,KAAK,CAAC2K,EAAD,CAAN,IAAc,KAAKnB,aAAL,CAAmBoF,OAAnB,CAA2BjE,EAA3B,MAAmC,CAAC,CAAtD,EAAyD;MACrD,KAAKnB,aAAL,CAAmBmD,IAAnB,CAAwBhC,EAAxB;IACH;EACJ,CAPD;;EAQA7F,QAAQ,CAAC3H,SAAT,CAAmBkf,YAAnB,GAAkC,UAAUpE,MAAV,EAAkBzE,IAAlB,EAAwBhL,CAAxB,EAA2B;IACzD,IAAIvD,KAAK,GAAG,IAAZ;;IACA,IAAIuO,IAAI,CAACnI,SAAL,CAAe6I,QAAf,CAAwBxS,OAAxB,CAAJ,EAAsC;MAClC;IACH,CAFD,MAGK;MACDrC,QAAQ,CAAC,CAACmU,IAAD,CAAD,EAAS9R,OAAT,CAAR;IACH;;IACD,IAAIyc,OAAJ;;IACA,IAAI,KAAKlV,QAAT,EAAmB;MACfkV,OAAO,GAAG,KAAKD,cAAL,CAAoBjG,MAApB,EAA4BzP,CAA5B,CAAV;MACA,KAAKkF,OAAL,CAAa,gBAAb,EAA+ByQ,OAA/B,EAAwC,UAAUhF,YAAV,EAAwB;QAC5D,IAAIA,YAAY,CAACC,MAAjB,EAAyB;UACrB9Z,WAAW,CAAC,CAACkU,IAAD,CAAD,EAAS9R,OAAT,CAAX;QACH,CAFD,MAGK;UACDuD,KAAK,CAACmZ,kBAAN,CAAyBnG,MAAzB,EAAiCzE,IAAjC,EAAuC2F,YAAvC;QACH;MACJ,CAPD;IAQH,CAVD,MAWK;MACD,KAAKiF,kBAAL,CAAwBnG,MAAxB,EAAgCzE,IAAhC,EAAsC2K,OAAtC;IACH;EACJ,CAvBD;;EAwBArZ,QAAQ,CAAC3H,SAAT,CAAmBihB,kBAAnB,GAAwC,UAAUnG,MAAV,EAAkBzE,IAAlB,EAAwB2K,OAAxB,EAAiC;IACrE,IAAIlZ,KAAK,GAAG,IAAZ;;IACA3F,WAAW,CAAC,CAACkU,IAAD,CAAD,EAASxS,WAAT,CAAX;IACA3B,QAAQ,CAAC,CAACmU,IAAD,CAAD,EAASvS,UAAT,CAAR;IACA,IAAIod,KAAK,GAAG,CAAZ;IACA,IAAI7X,GAAG,GAAG,CAAV;IACA,IAAIyU,KAAK,GAAG,IAAZ;IACA,IAAI8C,EAAE,GAAGre,MAAM,CAAC,MAAM4B,UAAP,EAAmB2W,MAAnB,CAAf;IACA,IAAIR,KAAK,GAAGQ,MAAZ;IACA,IAAIqG,aAAa,GAAG5e,MAAM,CAAC,MAAMwB,QAAN,GAAiB,GAAjB,GAAuBM,MAAxB,EAAgCyW,MAAhC,CAA1B;;IACA,IAAI,KAAK5R,SAAT,EAAoB;MAChB,KAAK0C,MAAL,CAAYmU,OAAZ,CAAoBa,EAApB,EAAwB;QACpBZ,IAAI,EAAE,KAAKC,SAAL,CAAemB,QAAf,CAAwB5Z,MADV;QAEpBC,QAAQ,EAAE,KAAKwY,SAAL,CAAemB,QAAf,CAAwB3Z,QAFd;QAGpB0Y,cAAc,EAAE,KAAKF,SAAL,CAAemB,QAAf,CAAwB1Z,MAHpB;QAIpB0Y,KAAK,EAAE,UAAUC,IAAV,EAAgB;UACnB/F,KAAK,CAAC+C,KAAN,CAAYiD,QAAZ,GAAuB,QAAvB;;UACA,IAAI,CAAClf,iBAAiB,CAAC+f,aAAD,CAAlB,IAAqCA,aAAa,YAAYZ,WAAlE,EAA+E;YAC3EY,aAAa,CAACjT,SAAd,CAAwBC,GAAxB,CAA4BxH,qBAA5B;UACH;;UACDua,KAAK,GAAG3e,MAAM,CAAC,MAAMkC,QAAP,EAAiBqW,MAAjB,CAAN,CAA+ByC,YAAvC;UACAlU,GAAG,GAAGiR,KAAK,CAACiD,YAAZ;QACH,CAXmB;QAYpBiD,QAAQ,EAAE,UAAUH,IAAV,EAAgB;UACtBvC,KAAK,CAAC4C,aAAN,CAAoBL,IAApB,EAA0Ba,KAA1B,EAAiC7X,GAAjC;QACH,CAdmB;QAepBA,GAAG,EAAE,UAAUgX,IAAV,EAAgB;UACjBA,IAAI,CAACxY,OAAL,CAAawV,KAAb,CAAmBoD,OAAnB,GAA6B,MAA7B;;UACA,IAAI,CAACrf,iBAAiB,CAAC+f,aAAD,CAAlB,IAAqCA,aAAa,YAAYZ,WAAlE,EAA+E;YAC3EY,aAAa,CAACjT,SAAd,CAAwBpM,MAAxB,CAA+B6E,qBAA/B;UACH;;UACDmB,KAAK,CAACuZ,aAAN,CAAoB/G,KAApB,EAA2BsG,EAA3B,EAA+BvK,IAA/B,EAAqC2K,OAArC;QACH;MArBmB,CAAxB;IAuBH,CAxBD,MAyBK;MACD,KAAKK,aAAL,CAAmB/G,KAAnB,EAA0BsG,EAA1B,EAA8BvK,IAA9B,EAAoC2K,OAApC;IACH;EACJ,CAtCD;;EAuCArZ,QAAQ,CAAC3H,SAAT,CAAmBqhB,aAAnB,GAAmC,UAAU/G,KAAV,EAAiBsG,EAAjB,EAAqBvK,IAArB,EAA2B2K,OAA3B,EAAoC;IACnEJ,EAAE,CAACvD,KAAH,CAASoD,OAAT,GAAmB,MAAnB;IACAnG,KAAK,CAAC+C,KAAN,CAAYiD,QAAZ,GAAuB,EAAvB;IACAhG,KAAK,CAAC+C,KAAN,CAAYC,MAAZ,GAAqB,EAArB;IACAnb,WAAW,CAAC,CAACkU,IAAD,CAAD,EAAS9R,OAAT,CAAX;IACA,KAAK+c,YAAL,CAAkBhH,KAAlB;;IACA,IAAI,KAAKxO,QAAT,EAAmB;MACfkV,OAAO,GAAG,KAAKD,cAAL,CAAoBzG,KAApB,EAA2B,IAA3B,CAAV;MACA,KAAK/J,OAAL,CAAa,eAAb,EAA8ByQ,OAA9B;IACH;EACJ,CAVD;;EAWArZ,QAAQ,CAAC3H,SAAT,CAAmBshB,YAAnB,GAAkC,UAAUhH,KAAV,EAAiBiH,QAAjB,EAA2B;IACzD,IAAIA,QAAJ,EAAc;MACVjH,KAAK,CAACtL,eAAN,CAAsB,eAAtB;IACH,CAFD,MAGK;MACD,KAAK0J,iBAAL,CAAuB4B,KAAvB;IACH;;IACD,IAAItO,KAAK,GAAG,KAAKK,aAAL,CAAmBoF,OAAnB,CAA2B6I,KAAK,CAAC3E,YAAN,CAAmB,UAAnB,CAA3B,CAAZ;;IACA,IAAI3J,KAAK,GAAG,CAAC,CAAb,EAAgB;MACZ,KAAKK,aAAL,CAAmB4N,MAAnB,CAA0BjO,KAA1B,EAAiC,CAAjC;IACH;EACJ,CAXD;;EAYArE,QAAQ,CAAC3H,SAAT,CAAmB0Y,iBAAnB,GAAuC,UAAU4B,KAAV,EAAiB;IACpDA,KAAK,CAAC/M,YAAN,CAAmB,eAAnB,EAAoC,OAApC;IACArL,QAAQ,CAAC,CAACoY,KAAD,CAAD,EAAU1U,aAAV,CAAR;EACH,CAHD;;EAIA+B,QAAQ,CAAC3H,SAAT,CAAmB6f,SAAnB,GAA+B,UAAU/E,MAAV,EAAkB8F,EAAlB,EAAsB;IACjDA,EAAE,CAACvD,KAAH,CAASoD,OAAT,GAAmB,OAAnB;IACAG,EAAE,CAACvD,KAAH,CAASmE,UAAT,GAAsB,QAAtB;IACA1G,MAAM,CAACuC,KAAP,CAAaC,MAAb,GAAsBxC,MAAM,CAACyC,YAAP,GAAsB,IAA5C;IACAqD,EAAE,CAACvD,KAAH,CAASoD,OAAT,GAAmB,MAAnB;IACAG,EAAE,CAACvD,KAAH,CAASmE,UAAT,GAAsB,EAAtB;EACH,CAND;;EAOA7Z,QAAQ,CAAC3H,SAAT,CAAmB0gB,aAAnB,GAAmC,UAAUL,IAAV,EAAgBa,KAAhB,EAAuB7X,GAAvB,EAA4B;IAC3D,IAAIoY,SAAS,GAAG,CAACpB,IAAI,CAAC5Y,QAAL,GAAgB4Y,IAAI,CAACqB,SAAtB,IAAmCrB,IAAI,CAAC5Y,QAAxD;IACA,IAAIka,aAAa,GAAG,CAACtY,GAAG,GAAG6X,KAAP,IAAgBO,SAAhB,GAA4BP,KAAhD;IACAb,IAAI,CAACxY,OAAL,CAAa4P,aAAb,CAA2B4F,KAA3B,CAAiCC,MAAjC,GAA0CqE,aAAa,GAAG,IAA1D;EACH,CAJD;;EAKAha,QAAQ,CAAC3H,SAAT,CAAmBmT,gBAAnB,GAAsC,UAAUyO,QAAV,EAAoBC,WAApB,EAAiC5D,QAAjC,EAA2CsB,MAA3C,EAAmD;IACrF,IAAIzX,KAAK,GAAG,IAAZ;;IACA,IAAIga,KAAK,GAAGvf,MAAM,CAAC,SAASiC,IAAV,EAAgBod,QAAhB,CAAlB;;IACA,IAAI/e,KAAK,CAACif,KAAD,CAAT,EAAkB;MACd;IACH;;IACD,KAAKre,WAAL,CAAiBqe,KAAjB;IACA,IAAIjN,UAAJ;IACA;;IACA,IAAI,KAAKlJ,MAAL,CAAY8D,UAAZ,YAAkC9M,WAAtC,EAAmD;MAC/C,IAAI+P,KAAK,GAAG,KAAKqP,OAAL,CAAaH,QAAb,EAAuB,MAAMzd,UAA7B,EAAyC1D,MAArD;MACA,IAAIuhB,QAAQ,GAAG,KAAKC,cAAL,CAAoB,KAAKtW,MAAzB,EAAiC+G,KAAjC,EAAwC,CAAxC,CAAf;;MACA,IAAI7P,KAAK,CAACmf,QAAD,CAAL,IAAmBnf,KAAK,CAACmf,QAAQ,CAACvS,UAAV,CAA5B,EAAmD;QAC/CnN,MAAM,CAACwf,KAAD,CAAN;QACA,KAAKR,YAAL,CAAkBM,QAAlB,EAA4B,IAA5B;QACA;MACH;;MACD,KAAK/V,QAAL,CAAc2D,IAAd,CAAmB,OAAnB;;MACA,IAAI,KAAK7D,MAAL,CAAY8D,UAAZ,YAAkC9M,WAAlC,IAAiD,KAAK+M,SAA1D,EAAqE;QACjE,KAAK7D,QAAL,CAAciE,GAAd;QACA+E,UAAU,GAAG,KAAKrC,aAAL,CAAmB,KAAKzC,QAAxB,EAAkC6R,QAAQ,CAACjM,YAAT,CAAsB,UAAtB,CAAlC,CAAb;QACA,KAAKuM,SAAL,CAAerN,UAAf,EAA2BmN,QAA3B,EAAqCF,KAArC,EAA4CF,QAA5C,EAAsDC,WAAtD,EAAmE5D,QAAnE,EAA6EsB,MAA7E;MACH,CAJD,MAKK;QACDyC,QAAQ,CAACvS,UAAT,CAAoBgB,YAApB,CAAiC,KAAKC,QAAL,CAAcsR,QAAd,EAAwBJ,QAAQ,CAACjM,YAAT,CAAsB,UAAtB,CAAxB,CAAjC,EAA6F9F,IAA7F,CAAkG,UAAUxE,CAAV,EAAa;UAC3GvD,KAAK,CAAC+D,QAAN,CAAeiE,GAAf;;UACA+E,UAAU,GAAGxJ,CAAC,CAAC2E,MAAf;;UACA,IAAIlI,KAAK,CAACqK,QAAN,KAAmB,CAAvB,EAA0B;YACtBrK,KAAK,CAACqK,QAAN,GAAiB,CAAjB;UACH;;UACDrK,KAAK,CAACoa,SAAN,CAAgBrN,UAAhB,EAA4BmN,QAA5B,EAAsCF,KAAtC,EAA6CF,QAA7C,EAAuDC,WAAvD,EAAoE5D,QAApE,EAA8EsB,MAA9E;QACH,CAPD,EAOGjP,KAPH,CAOS,UAAUjF,CAAV,EAAa;UAClBvD,KAAK,CAACyI,OAAN,CAAc,eAAd,EAA+B;YAAEC,KAAK,EAAEnF;UAAT,CAA/B;QACH,CATD;MAUH;IACJ,CA1BD,MA2BK;MACDwJ,UAAU,GAAG,KAAKrC,aAAL,CAAmB,KAAKzC,QAAxB,EAAkC6R,QAAQ,CAACjM,YAAT,CAAsB,UAAtB,CAAlC,CAAb;MACA,KAAKoE,eAAL,GAAuB,KAAKnH,aAAL,CAAmBiC,UAAnB,CAAvB;;MACA,IAAIhS,KAAK,CAACgS,UAAD,CAAL,IAAqBA,UAAU,CAACpU,MAAX,KAAsB,CAA/C,EAAkD;QAC9C6B,MAAM,CAACwf,KAAD,CAAN;QACA,KAAKR,YAAL,CAAkBM,QAAlB,EAA4B,IAA5B;QACA;MACH,CAJD,MAKK;QACD,KAAK9W,cAAL,CAAoBI,cAApB,CAAmCwH,KAAnC,GAA2CR,UAAU,CAAC0P,QAAQ,CAACjM,YAAT,CAAsB,YAAtB,CAAD,CAAV,GAAkD,CAA7F;QACAiM,QAAQ,CAAC5O,WAAT,CAAqB5P,QAAQ,CAAC0P,UAAT,CAAoB,KAAKC,aAAzB,EAAwC,KAAKgH,eAA7C,EAA8D,KAAKjP,cAAnE,CAArB;QACA,KAAKwU,UAAL,CAAgBsC,QAAhB,EAA0BE,KAA1B,EAAiCvC,MAAjC;QACA,KAAK4C,yBAAL,CAA+BtN,UAA/B;QACA,KAAKuN,eAAL,CAAqBR,QAArB;QACA,KAAKvO,YAAL,CAAkBuO,QAAlB;QACA,KAAKS,gBAAL,CAAsBxN,UAAtB;QACA,KAAKyN,cAAL,CAAoBV,QAApB,EAA8BC,WAA9B,EAA2CtC,MAA3C;MACH;IACJ;EACJ,CAvDD;;EAwDA5X,QAAQ,CAAC3H,SAAT,CAAmBkiB,SAAnB,GAA+B,UAAUrN,UAAV,EAAsB9D,MAAtB,EAA8B+Q,KAA9B,EAAqCF,QAArC,EAA+CC,WAA/C,EAA4D5D,QAA5D,EAAsEsB,MAAtE,EAA8E;IACzG,KAAKxF,eAAL,GAAuBlF,UAAvB;;IACA,IAAIhS,KAAK,CAACgS,UAAD,CAAL,IAAqBA,UAAU,CAACpU,MAAX,KAAsB,CAA/C,EAAkD;MAC9C6B,MAAM,CAACwf,KAAD,CAAN;MACA,KAAKR,YAAL,CAAkBM,QAAlB,EAA4B,IAA5B;IACH,CAHD,MAIK;MACD,KAAKlW,cAAL,CAAoBqF,MAApB;;MACA,IAAI,KAAKpF,MAAL,CAAY8D,UAAZ,YAAkC9M,WAAlC,IAAiD,CAAC,KAAK+M,SAA3D,EAAsE;QAClE,IAAIlC,EAAE,GAAGoU,QAAQ,CAACjM,YAAT,CAAsB,UAAtB,CAAT;QACA,IAAI4B,QAAQ,GAAG,KAAKgL,aAAL,CAAmB/U,EAAnB,CAAf;QACAxK,QAAQ,CAAC,OAAD,EAAU6R,UAAV,EAAsB0C,QAAtB,CAAR;MACH;;MACD,KAAKzM,cAAL,CAAoBI,cAApB,CAAmCwH,KAAnC,GAA2CR,UAAU,CAAC0P,QAAQ,CAACjM,YAAT,CAAsB,YAAtB,CAAD,CAAV,GAAkD,CAA7F;MACAiM,QAAQ,CAAC5O,WAAT,CAAqB5P,QAAQ,CAAC0P,UAAT,CAAoB,KAAKC,aAAzB,EAAwC8B,UAAxC,EAAoD,KAAK/J,cAAzD,CAArB;MACA,KAAKwU,UAAL,CAAgBsC,QAAhB,EAA0BE,KAA1B,EAAiCvC,MAAjC;MACA,KAAK4C,yBAAL,CAA+BtN,UAA/B;MACA,KAAKuN,eAAL,CAAqBR,QAArB;MACA,KAAKvO,YAAL,CAAkBuO,QAAlB;MACA,KAAKS,gBAAL,CAAsBxN,UAAtB;MACA,KAAKyN,cAAL,CAAoBV,QAApB,EAA8BC,WAA9B,EAA2CtC,MAA3C;IACH;;IACD,IAAItB,QAAJ,EAAc;MACVA,QAAQ;IACX;;IACD,IAAI,KAAKpS,QAAL,CAAcpL,MAAd,KAAyB,CAAzB,IAA8B,CAAC,KAAKqL,QAAxC,EAAkD;MAC9C,KAAKuE,QAAL;IACH;EACJ,CA5BD;;EA6BA1I,QAAQ,CAAC3H,SAAT,CAAmBqiB,gBAAnB,GAAsC,UAAUxN,UAAV,EAAsB;IACxD,IAAI/T,CAAC,GAAG,CAAR;;IACA,OAAOA,CAAC,GAAG+T,UAAU,CAACpU,MAAtB,EAA8B;MAC1B,IAAI+M,EAAE,GAAGqH,UAAU,CAAC/T,CAAD,CAAV,CAAc,KAAK6K,MAAL,CAAY6B,EAA1B,IAAgCqH,UAAU,CAAC/T,CAAD,CAAV,CAAc,KAAK6K,MAAL,CAAY6B,EAA1B,EAA8BuG,QAA9B,EAAhC,GAA2E,IAApF;;MACA,IAAI,KAAK5L,WAAL,KAAqBoH,SAArB,IAAkC,KAAKpH,WAAL,CAAiBsJ,OAAjB,CAAyBjE,EAAzB,MAAiC,CAAC,CAAxE,EAA2E;QACvE,KAAKgV,eAAL,CAAqB,CAAChV,EAAD,CAArB;MACH;;MACD1M,CAAC;IACJ;EACJ,CATD;EAUA;AACJ;AACA;;;EACI6G,QAAQ,CAAC3H,SAAT,CAAmBmiB,yBAAnB,GAA+C,UAAUrJ,KAAV,EAAiB;IAC5D,IAAIhY,CAAJ;;IACA,KAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGgY,KAAK,CAACrY,MAAtB,EAA8BK,CAAC,EAA/B,EAAmC;MAC/B,IAAI0M,EAAE,GAAGsL,KAAK,CAAChY,CAAD,CAAL,CAAS,KAAK6K,MAAL,CAAY6B,EAArB,IAA2BsL,KAAK,CAAChY,CAAD,CAAL,CAAS,KAAK6K,MAAL,CAAY6B,EAArB,EAAyBuG,QAAzB,EAA3B,GAAiE,IAA1E;;MACA,IAAI,KAAK7H,aAAL,KAAuBqD,SAAvB,IAAoC,KAAKrD,aAAL,CAAmBuF,OAAnB,CAA2BjE,EAA3B,MAAmC,CAAC,CAA5E,EAA+E;QAC3E,KAAK0Q,iBAAL;MACH;IACJ;EACJ,CARD;;EASAvW,QAAQ,CAAC3H,SAAT,CAAmBoiB,eAAnB,GAAqC,UAAUva,OAAV,EAAmB;IACpD,IAAI,KAAK4L,YAAT,EAAuB;MACnB,KAAKuG,GAAL,GAAY,KAAK9R,cAAN,GAAwB,KAAKA,cAAL,CAAoBuJ,OAApB,CAA4B5J,OAAO,CAAC8N,YAAR,CAAqB,UAArB,CAA5B,CAAxB,GAAwF,IAAnG;;MACA,IAAI,KAAKnC,SAAT,EAAoB;QAChB,KAAK2F,qBAAL,CAA2BtR,OAA3B;QACA,KAAKqR,sBAAL,CAA4BrR,OAA5B;MACH;IACJ;;IACD,KAAKkS,eAAL,GAAuB,IAAvB;EACH,CATD;;EAUApS,QAAQ,CAAC3H,SAAT,CAAmByiB,SAAnB,GAA+B,UAAU1R,MAAV,EAAkB2R,SAAlB,EAA6BC,SAA7B,EAAwC;IACnE,IAAID,SAAS,KAAKC,SAAlB,EAA6B;MACzB,OAAO5R,MAAP;IACH,CAFD,MAGK;MACD,OAAO,KAAK0R,SAAL,CAAe,KAAKG,cAAL,CAAoB7R,MAApB,CAAf,EAA4C2R,SAA5C,EAAuDC,SAAS,GAAG,CAAnE,CAAP;IACH;EACJ,CAPD;;EAQAhb,QAAQ,CAAC3H,SAAT,CAAmBiiB,cAAnB,GAAoC,UAAUlR,MAAV,EAAkB2R,SAAlB,EAA6BC,SAA7B,EAAwC;IACxE,IAAIxO,SAAJ;;IACA,IAAIuO,SAAS,KAAKC,SAAlB,EAA6B;MACzB,OAAO,KAAKC,cAAL,CAAoB7R,MAApB,CAAP;IACH,CAFD,MAGK;MACD,OAAO,KAAKkR,cAAL,CAAoB,KAAKW,cAAL,CAAoB7R,MAApB,CAApB,EAAiD2R,SAAjD,EAA4DC,SAAS,GAAG,CAAxE,CAAP;IACH;EACJ,CARD;;EASAhb,QAAQ,CAAC3H,SAAT,CAAmB4iB,cAAnB,GAAoC,UAAU7R,MAAV,EAAkB;IAClD,OAAQ,OAAOA,MAAM,CAACqD,KAAd,KAAwB,QAAxB,IAAoCvR,KAAK,CAACkO,MAAM,CAACqD,KAAR,CAA1C,GAA4DrD,MAA5D,GAAqEA,MAAM,CAACqD,KAAnF;EACH,CAFD;;EAGAzM,QAAQ,CAAC3H,SAAT,CAAmBwS,aAAnB,GAAmC,UAAUqQ,GAAV,EAAeC,QAAf,EAAyBC,MAAzB,EAAiC;IAChE,IAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;MAAEA,MAAM,GAAG,KAAT;IAAiB;;IAC1C,IAAI5N,UAAJ;;IACA,IAAItS,KAAK,CAACggB,GAAD,CAAT,EAAgB;MACZ,OAAO1N,UAAP;IACH,CAFD,MAGK,IAAI,KAAKhD,QAAL,KAAkB,CAAtB,EAAyB;MAC1B,OAAO,KAAK6Q,aAAL,CAAmB,KAAK3Q,WAAxB,EAAqCyQ,QAArC,EAA+CC,MAA/C,CAAP;IACH,CAFI,MAGA;MACD,IAAI,OAAO,KAAKpX,MAAL,CAAYyI,KAAnB,KAA6B,QAAjC,EAA2C;QACvC,KAAK,IAAItT,CAAC,GAAG,CAAR,EAAWmiB,MAAM,GAAGJ,GAAG,CAACpiB,MAA7B,EAAqCK,CAAC,GAAGmiB,MAAzC,EAAiDniB,CAAC,EAAlD,EAAsD;UAClD,IAAIsW,MAAM,GAAGrU,QAAQ,CAAC,KAAK4I,MAAL,CAAY6B,EAAb,EAAiBqV,GAAG,CAAC/hB,CAAD,CAApB,CAArB;;UACA,IAAIsW,MAAM,IAAIA,MAAM,CAACrD,QAAP,OAAsB+O,QAApC,EAA8C;YAC1C,OAAO/f,QAAQ,CAAC,KAAK4I,MAAL,CAAYyI,KAAb,EAAoByO,GAAG,CAAC/hB,CAAD,CAAvB,CAAf;UACH,CAFD,MAGK,IAAI,CAAC+B,KAAK,CAACE,QAAQ,CAAC,KAAK4I,MAAL,CAAYyI,KAAb,EAAoByO,GAAG,CAAC/hB,CAAD,CAAvB,CAAT,CAAV,EAAiD;YAClDqU,UAAU,GAAG,KAAK3C,aAAL,CAAmBzP,QAAQ,CAAC,KAAK4I,MAAL,CAAYyI,KAAb,EAAoByO,GAAG,CAAC/hB,CAAD,CAAvB,CAA3B,EAAwDgiB,QAAxD,CAAb;;YACA,IAAI3N,UAAU,KAAK5F,SAAnB,EAA8B;cAC1B;YACH;UACJ;QACJ;MACJ;IACJ;;IACD,OAAO4F,UAAP;EACH,CA1BD;;EA2BAxN,QAAQ,CAAC3H,SAAT,CAAmBgjB,aAAnB,GAAmC,UAAUlN,IAAV,EAAgBgN,QAAhB,EAA0BC,MAA1B,EAAkC;IACjE,IAAI5N,UAAJ;;IACA,IAAItS,KAAK,CAACiT,IAAD,CAAT,EAAiB;MACb,OAAOX,UAAP;IACH;;IACD,KAAK,IAAIrU,CAAC,GAAG,CAAR,EAAWmiB,MAAM,GAAGnN,IAAI,CAACrV,MAA9B,EAAsCK,CAAC,GAAGmiB,MAA1C,EAAkDniB,CAAC,EAAnD,EAAuD;MACnD,IAAI,CAAC+B,KAAK,CAACiT,IAAI,CAAChV,CAAD,CAAJ,CAAQ,CAAR,CAAD,CAAN,IAAsB,CAAC+B,KAAK,CAACE,QAAQ,CAAC,KAAK4I,MAAL,CAAYqG,QAAb,EAAuB8D,IAAI,CAAChV,CAAD,CAAJ,CAAQ,CAAR,CAAvB,CAAT,CAAhC,EAA8E;QAC1E,IAAIiC,QAAQ,CAAC,KAAK4I,MAAL,CAAYqG,QAAb,EAAuB8D,IAAI,CAAChV,CAAD,CAAJ,CAAQ,CAAR,CAAvB,CAAR,CAA2CiT,QAA3C,OAA0D+O,QAA9D,EAAwE;UACpE,OAAOhN,IAAI,CAAChV,CAAD,CAAX;QACH;MACJ,CAJD,MAKK,IAAIiiB,MAAJ,EAAY;QACb,OAAOjN,IAAI,CAAChV,CAAD,CAAX;MACH,CAFI,MAGA;QACD,OAAO,EAAP;MACH;IACJ;;IACD,OAAOqU,UAAP;EACH,CAnBD;;EAoBAxN,QAAQ,CAAC3H,SAAT,CAAmBsiB,cAAnB,GAAoC,UAAUza,OAAV,EAAmBga,WAAnB,EAAgCtC,MAAhC,EAAwC;IACxE,IAAIsC,WAAJ,EAAiB;MACb,IAAIqB,MAAM,GAAG1gB,SAAS,CAAC,MAAMsB,UAAP,EAAmB+D,OAAnB,CAAtB;;MACA,KAAK,IAAI/G,CAAC,GAAG,CAAR,EAAWoU,GAAG,GAAGgO,MAAM,CAACziB,MAA7B,EAAqCK,CAAC,GAAGoU,GAAzC,EAA8CpU,CAAC,EAA/C,EAAmD;QAC/C,IAAIuV,IAAI,GAAG6M,MAAM,CAACpiB,CAAD,CAAjB;;QACA,IAAI+G,OAAO,CAACuH,aAAR,CAAsB,UAAtB,MAAsC8T,MAAM,CAACpiB,CAAD,CAAhD,EAAqD;UACjD,IAAIqiB,KAAK,GAAG/gB,OAAO,CAACiU,IAAD,EAAO,MAAMtS,QAAb,CAAnB;UACA,KAAK+c,UAAL,GAAkB,KAAKC,cAAL,CAAoBoC,KAApB,EAA2B,IAA3B,CAAlB;;UACA,IAAI5D,MAAM,KAAK,IAAf,EAAqB;YACjB,KAAKhP,OAAL,CAAa,eAAb,EAA8B,KAAKuQ,UAAnC;UACH;;UACD,KAAK3N,gBAAL,CAAsBgQ,KAAtB,EAA6BtB,WAA7B,EAA0C,IAA1C,EAAgDtC,MAAhD;QACH;MACJ;IACJ;EACJ,CAfD;;EAgBA5X,QAAQ,CAAC3H,SAAT,CAAmBmf,YAAnB,GAAkC,UAAU9E,EAAV,EAAchP,CAAd,EAAiB+X,WAAjB,EAA8B;IAC5D,IAAI,CAAC/I,EAAE,CAACnM,SAAH,CAAa6I,QAAb,CAAsB,WAAtB,CAAL,EAAyC;MACrC,IAAI,KAAKD,mBAAL,KAA8BzL,CAAC,IAAIA,CAAC,CAACgY,OAAR,IAAoBD,WAAjD,KAAiE,KAAKE,QAAL,CAAcjJ,EAAd,CAArE,EAAwF;QACpF,KAAKkJ,YAAL,CAAkBlJ,EAAlB,EAAsBhP,CAAtB;MACH,CAFD,MAGK;QACD,KAAKmN,UAAL,CAAgB6B,EAAhB,EAAoBhP,CAApB,EAAuB+X,WAAvB;MACH;IACJ;EACJ,CATD;;EAUAzb,QAAQ,CAAC3H,SAAT,CAAmBsjB,QAAnB,GAA8B,UAAUjJ,EAAV,EAAc;IACxC,OAAOA,EAAE,CAACnM,SAAH,CAAa6I,QAAb,CAAsB1S,MAAtB,IAAgC,IAAhC,GAAuC,KAA9C;EACH,CAFD;;EAGAsD,QAAQ,CAAC3H,SAAT,CAAmBwY,UAAnB,GAAgC,UAAU6B,EAAV,EAAchP,CAAd,EAAiB+X,WAAjB,EAA8B;IAC1D,IAAItb,KAAK,GAAG,IAAZ;;IACA,IAAIjF,KAAK,CAACwX,EAAD,CAAL,IAAc,CAAC,KAAKvD,mBAAN,IAA6B,KAAKwM,QAAL,CAAcjJ,EAAd,CAA7B,IAAkD,CAACxX,KAAK,CAACwI,CAAD,CAA1E,EAAgF;MAC5E,KAAKyT,eAAL,CAAqBzE,EAArB;MACA;IACH;;IACD,IAAI/C,SAAJ;;IACA,IAAI,KAAKxL,QAAT,EAAmB;MACfwL,SAAS,GAAG,KAAKkM,cAAL,CAAoBnJ,EAApB,EAAwB,QAAxB,EAAkChP,CAAlC,CAAZ;MACA,KAAKkF,OAAL,CAAa,eAAb,EAA8B+G,SAA9B,EAAyC,UAAU0E,YAAV,EAAwB;QAC7D,IAAI,CAACA,YAAY,CAACC,MAAlB,EAA0B;UACtBnU,KAAK,CAAC2b,gBAAN,CAAuBpJ,EAAvB,EAA2BhP,CAA3B,EAA8B2Q,YAA9B,EAA4CoH,WAA5C;QACH;MACJ,CAJD;IAKH,CAPD,MAQK;MACD,KAAKK,gBAAL,CAAsBpJ,EAAtB,EAA0BhP,CAA1B,EAA6BiM,SAA7B,EAAwC8L,WAAxC;IACH;EACJ,CAlBD;;EAmBAzb,QAAQ,CAAC3H,SAAT,CAAmByjB,gBAAnB,GAAsC,UAAUpJ,EAAV,EAAchP,CAAd,EAAiBiM,SAAjB,EAA4B8L,WAA5B,EAAyC;IAC3E,IAAI,CAAC,KAAKtM,mBAAN,IAA8B,CAACsM,WAAD,KAAiB,CAAC/X,CAAD,IAAOA,CAAC,IAAI,CAACA,CAAC,CAACgY,OAAhC,CAAlC,EAA8E;MAC1E,KAAKK,eAAL;IACH;;IACD,IAAI,KAAK5M,mBAAL,IAA4BzL,CAA5B,IAAiCA,CAAC,CAACsY,QAAvC,EAAiD;MAC7C,IAAI,CAAC,KAAKC,SAAV,EAAqB;QACjB,KAAKA,SAAL,GAAiBvJ,EAAjB;MACH;;MACD,IAAIwJ,UAAU,GAAG,KAAK3G,MAAL,CAAYzL,OAAZ,CAAoB,KAAKmS,SAAzB,CAAjB;MACA,IAAIE,QAAQ,GAAG,KAAK5G,MAAL,CAAYzL,OAAZ,CAAoB4I,EAApB,CAAf;;MACA,IAAIwJ,UAAU,GAAGC,QAAjB,EAA2B;QACvB,IAAIC,IAAI,GAAGF,UAAX;QACAA,UAAU,GAAGC,QAAb;QACAA,QAAQ,GAAGC,IAAX;MACH;;MACD,KAAK,IAAIjjB,CAAC,GAAG+iB,UAAb,EAAyB/iB,CAAC,IAAIgjB,QAA9B,EAAwChjB,CAAC,EAAzC,EAA6C;QACzC,IAAIkjB,QAAQ,GAAG,KAAK9G,MAAL,CAAYpc,CAAZ,CAAf;;QACA,IAAI2B,SAAS,CAACuhB,QAAD,CAAT,IAAuB,CAACA,QAAQ,CAAC9V,SAAT,CAAmB6I,QAAnB,CAA4B,WAA5B,CAA5B,EAAsE;UAClE,KAAKkN,SAAL,CAAeD,QAAf;QACH;MACJ;IACJ,CAjBD,MAkBK;MACD,KAAKJ,SAAL,GAAiBvJ,EAAjB;MACA,KAAK4J,SAAL,CAAe5J,EAAf;IACH;;IACD,KAAKyE,eAAL,CAAqBzE,EAArB;;IACA,IAAI,KAAKvO,QAAT,EAAmB;MACfwL,SAAS,CAACC,QAAV,GAAqB,KAAKyD,WAAL,CAAiBX,EAAjB,CAArB;MACA,KAAK9J,OAAL,CAAa,cAAb,EAA6B+G,SAA7B;IACH;EACJ,CA/BD;;EAgCA3P,QAAQ,CAAC3H,SAAT,CAAmBujB,YAAnB,GAAkC,UAAUlJ,EAAV,EAAchP,CAAd,EAAiB;IAC/C,IAAIvD,KAAK,GAAG,IAAZ;;IACA,IAAIwP,SAAJ;;IACA,IAAI,KAAKxL,QAAT,EAAmB;MACfwL,SAAS,GAAG,KAAKkM,cAAL,CAAoBnJ,EAApB,EAAwB,WAAxB,EAAqChP,CAArC,CAAZ;MACA,KAAKkF,OAAL,CAAa,eAAb,EAA8B+G,SAA9B,EAAyC,UAAU0E,YAAV,EAAwB;QAC7D,IAAI,CAACA,YAAY,CAACC,MAAlB,EAA0B;UACtBnU,KAAK,CAACoc,kBAAN,CAAyB7J,EAAzB,EAA6B2B,YAA7B;QACH;MACJ,CAJD;IAKH,CAPD,MAQK;MACD,KAAKkI,kBAAL,CAAwB7J,EAAxB,EAA4B/C,SAA5B;IACH;EACJ,CAdD;;EAeA3P,QAAQ,CAAC3H,SAAT,CAAmBkkB,kBAAnB,GAAwC,UAAU7J,EAAV,EAAc/C,SAAd,EAAyB;IAC7D,KAAK6M,YAAL,CAAkB9J,EAAlB;IACA,KAAKyE,eAAL,CAAqBzE,EAArB;;IACA,IAAI,KAAKvO,QAAT,EAAmB;MACfwL,SAAS,CAACC,QAAV,GAAqB,KAAKyD,WAAL,CAAiBX,EAAjB,CAArB;MACA,KAAK9J,OAAL,CAAa,cAAb,EAA6B+G,SAA7B;IACH;EACJ,CAPD;;EAQA3P,QAAQ,CAAC3H,SAAT,CAAmB8e,eAAnB,GAAqC,UAAUzE,EAAV,EAAc;IAC/C,IAAI,CAACxX,KAAK,CAACwX,EAAD,CAAV,EAAgB;MACZ,IAAI+J,WAAW,GAAG,KAAKC,cAAL,EAAlB;;MACA,IAAID,WAAJ,EAAiB;QACbjiB,WAAW,CAAC,CAACiiB,WAAD,CAAD,EAAgB9d,KAAhB,CAAX;MACH;;MACDpE,QAAQ,CAAC,CAACmY,EAAD,CAAD,EAAO/T,KAAP,CAAR;MACA,KAAKoW,YAAL,CAAkB0H,WAAlB,EAA+B/J,EAA/B;IACH;EACJ,CATD;;EAUA1S,QAAQ,CAAC3H,SAAT,CAAmBikB,SAAnB,GAA+B,UAAU3J,KAAV,EAAiB;IAC5CA,KAAK,CAAC/M,YAAN,CAAmB,eAAnB,EAAoC,MAApC;IACArL,QAAQ,CAAC,CAACoY,KAAD,CAAD,EAAUjW,MAAV,CAAR;IACA,IAAImJ,EAAE,GAAG8M,KAAK,CAAC3E,YAAN,CAAmB,UAAnB,CAAT;;IACA,IAAI,CAAC9S,KAAK,CAAC2K,EAAD,CAAN,IAAc,KAAKtB,aAAL,CAAmBuF,OAAnB,CAA2BjE,EAA3B,MAAmC,CAAC,CAAtD,EAAyD;MACrD,KAAKtB,aAAL,CAAmBsD,IAAnB,CAAwBhC,EAAxB;IACH;EACJ,CAPD;;EAQA7F,QAAQ,CAAC3H,SAAT,CAAmBmkB,YAAnB,GAAkC,UAAU7J,KAAV,EAAiB;IAC/C,IAAI,KAAKxD,mBAAT,EAA8B;MAC1BwD,KAAK,CAAC/M,YAAN,CAAmB,eAAnB,EAAoC,OAApC;IACH,CAFD,MAGK;MACD+M,KAAK,CAACtL,eAAN,CAAsB,eAAtB;IACH;;IACD7M,WAAW,CAAC,CAACmY,KAAD,CAAD,EAAUjW,MAAV,CAAX;IACA,IAAI2H,KAAK,GAAG,KAAKE,aAAL,CAAmBuF,OAAnB,CAA2B6I,KAAK,CAAC3E,YAAN,CAAmB,UAAnB,CAA3B,CAAZ;;IACA,IAAI3J,KAAK,GAAG,CAAC,CAAb,EAAgB;MACZ,KAAKE,aAAL,CAAmB+N,MAAnB,CAA0BjO,KAA1B,EAAiC,CAAjC;IACH;EACJ,CAZD;;EAaArE,QAAQ,CAAC3H,SAAT,CAAmB0jB,eAAnB,GAAqC,YAAY;IAC7C,IAAIY,UAAU,GAAG,KAAKzc,OAAL,CAAasH,gBAAb,CAA8B,MAAM9K,MAApC,CAAjB;;IACA,KAAK,IAAIgN,EAAE,GAAG,CAAT,EAAYkT,YAAY,GAAGD,UAAhC,EAA4CjT,EAAE,GAAGkT,YAAY,CAAC9jB,MAA9D,EAAsE4Q,EAAE,EAAxE,EAA4E;MACxE,IAAI2I,GAAG,GAAGuK,YAAY,CAAClT,EAAD,CAAtB;;MACA,IAAI,KAAKyF,mBAAT,EAA8B;QAC1BkD,GAAG,CAACzM,YAAJ,CAAiB,eAAjB,EAAkC,OAAlC;MACH,CAFD,MAGK;QACDyM,GAAG,CAAChL,eAAJ,CAAoB,eAApB;MACH;IACJ;;IACD7M,WAAW,CAACmiB,UAAD,EAAajgB,MAAb,CAAX;IACA,KAAK8H,aAAL,CAAmB;MAAED,aAAa,EAAE;IAAjB,CAAnB,EAA0C,IAA1C;EACH,CAbD;;EAcAvE,QAAQ,CAAC3H,SAAT,CAAmBwjB,cAAnB,GAAoC,UAAU1I,MAAV,EAAkBpD,MAAlB,EAA0BrM,CAA1B,EAA6B;IAC7D,IAAIkM,QAAQ,GAAG,KAAKyD,WAAL,CAAiBF,MAAjB,CAAf;IACA,OAAO;MAAEpD,MAAM,EAAEA,MAAV;MAAkBuE,MAAM,EAAE,KAA1B;MAAiCO,YAAY,EAAE3Z,KAAK,CAACwI,CAAD,CAAL,GAAW,KAAX,GAAmB,IAAlE;MAAwEoK,IAAI,EAAEqF,MAA9E;MAAsFvD,QAAQ,EAAEA;IAAhG,CAAP;EACH,CAHD;;EAIA5P,QAAQ,CAAC3H,SAAT,CAAmB8M,eAAnB,GAAqC,YAAY;IAC7C,KAAK0X,YAAL,GAAqB,KAAKC,QAAL,KAAkB,MAAnB,GAA8BvjB,OAAO,CAACwjB,QAAR,GAAmB,OAAnB,GAA6B,UAA3D,GAAyE,KAAKD,QAAlG;EACH,CAFD;;EAGA9c,QAAQ,CAAC3H,SAAT,CAAmB2kB,aAAnB,GAAmC,UAAUtZ,CAAV,EAAa;IAC5C,IAAIjL,MAAM,GAAGiL,CAAC,CAACmT,aAAF,CAAgBpe,MAA7B;;IACA,IAAI,CAACA,MAAD,IAAWA,MAAM,CAAC8N,SAAP,CAAiB6I,QAAjB,CAA0BrS,KAA1B,CAAX,IAA+CtE,MAAM,CAAC8N,SAAP,CAAiB6I,QAAjB,CAA0BpT,IAA1B,CAA/C,IACAvD,MAAM,CAAC8N,SAAP,CAAiB6I,QAAjB,CAA0B5S,UAA1B,CADA,IACyC/D,MAAM,CAAC8N,SAAP,CAAiB6I,QAAjB,CAA0BhT,QAA1B,CADzC,IAEA3D,MAAM,CAAC8N,SAAP,CAAiB6I,QAAjB,CAA0BvS,IAA1B,CAFA,IAEmC,KAAKiP,YAAL,IAAqBrR,OAAO,CAAChC,MAAD,EAAS,MAAM6F,YAAf,CAFnE,EAEiG;MAC7F;IACH,CAJD,MAKK;MACD,KAAK2e,oBAAL,CAA0BxiB,OAAO,CAAChC,MAAD,EAAS,MAAM2D,QAAf,CAAjC,EAA2DsH,CAA3D;IACH;EACJ,CAVD;;EAWA1D,QAAQ,CAAC3H,SAAT,CAAmB4kB,oBAAnB,GAA0C,UAAU9J,MAAV,EAAkBzP,CAAlB,EAAqB;IAC3D,IAAIgL,IAAI,GAAG9T,MAAM,CAAC,SAASiC,IAAV,EAAgBsW,MAAhB,CAAjB;;IACA,IAAI,CAACzE,IAAD,IAASA,IAAI,CAACnI,SAAL,CAAe6I,QAAf,CAAwBxS,OAAxB,CAAb,EAA+C;MAC3C;IACH,CAFD,MAGK;MACD,IAAI2J,SAAS,GAAGmI,IAAI,CAACnI,SAArB;;MACA,IAAIA,SAAS,CAAC6I,QAAV,CAAmBjT,UAAnB,CAAJ,EAAoC;QAChC,KAAK6Z,YAAL,CAAkB7C,MAAlB,EAA0BzE,IAA1B,EAAgChL,CAAhC;MACH,CAFD,MAGK,IAAI6C,SAAS,CAAC6I,QAAV,CAAmBlT,WAAnB,CAAJ,EAAqC;QACtC,KAAKqb,YAAL,CAAkBpE,MAAlB,EAA0BzE,IAA1B,EAAgChL,CAAhC;MACH;IACJ;EACJ,CAdD;;EAeA1D,QAAQ,CAAC3H,SAAT,CAAmB2d,YAAnB,GAAkC,UAAU7C,MAAV,EAAkBzE,IAAlB,EAAwBhL,CAAxB,EAA2BwW,WAA3B,EAAwC5D,QAAxC,EAAkD;IAChF,IAAInW,KAAK,GAAG,IAAZ;;IACA,IAAIuO,IAAI,CAACnI,SAAL,CAAe6I,QAAf,CAAwBxS,OAAxB,CAAJ,EAAsC;MAClC;IACH,CAFD,MAGK;MACDrC,QAAQ,CAAC,CAACmU,IAAD,CAAD,EAAS9R,OAAT,CAAR;IACH;;IACD,IAAI,KAAKuH,QAAL,IAAiB,CAAC,KAAK9D,WAA3B,EAAwC;MACpC,KAAK8Y,UAAL,GAAkB,KAAKC,cAAL,CAAoBjG,MAApB,EAA4BzP,CAA5B,CAAlB;MACA,KAAKkF,OAAL,CAAa,eAAb,EAA8B,KAAKuQ,UAAnC,EAA+C,UAAU9E,YAAV,EAAwB;QACnE,IAAIA,YAAY,CAACC,MAAjB,EAAyB;UACrB9Z,WAAW,CAAC,CAACkU,IAAD,CAAD,EAAS9R,OAAT,CAAX;QACH,CAFD,MAGK;UACDuD,KAAK,CAAC+c,gBAAN,CAAuB/J,MAAvB,EAA+BzE,IAA/B,EAAqCwL,WAArC,EAAkD5D,QAAlD;QACH;MACJ,CAPD;IAQH,CAVD,MAWK;MACD,KAAK4G,gBAAL,CAAsB/J,MAAtB,EAA8BzE,IAA9B,EAAoCwL,WAApC,EAAiD5D,QAAjD;IACH;EACJ,CAtBD;;EAuBAtW,QAAQ,CAAC3H,SAAT,CAAmB6kB,gBAAnB,GAAsC,UAAU/J,MAAV,EAAkBzE,IAAlB,EAAwBwL,WAAxB,EAAqC5D,QAArC,EAA+C;IACjF,IAAI2C,EAAE,GAAGre,MAAM,CAAC,MAAM4B,UAAP,EAAmB2W,MAAnB,CAAf;;IACA,IAAI8F,EAAE,IAAIA,EAAE,CAACkE,QAAH,KAAgB,IAA1B,EAAgC;MAC5B,KAAKxF,UAAL,CAAgBxE,MAAhB,EAAwBzE,IAAxB;IACH,CAFD,MAGK;MACD,KAAK3N,aAAL,GAAqB,IAArB;MACA,KAAKyK,gBAAL,CAAsB2H,MAAtB,EAA8B+G,WAA9B,EAA2C5D,QAA3C;MACA,IAAI8G,MAAM,GAAGviB,SAAS,CAAC,MAAMuB,QAAP,EAAiB+W,MAAjB,CAAtB;;MACA,KAAK,IAAIha,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGikB,MAAM,CAACtkB,MAA3B,EAAmCK,CAAC,EAApC,EAAwC;QACpC,IAAI0M,EAAE,GAAG,KAAKwX,KAAL,CAAWD,MAAM,CAACjkB,CAAD,CAAjB,CAAT;;QACA,IAAI,KAAKwH,cAAL,CAAoBmJ,OAApB,CAA4BjE,EAA5B,MAAoC,CAAC,CAArC,IAA0C,KAAKlF,cAAL,KAAwBiH,SAAtE,EAAiF;UAC7E,IAAI0V,MAAM,GAAG1iB,MAAM,CAAC,MAAMuB,UAAP,EAAmBvB,MAAM,CAAC,MAAMkC,QAAP,EAAiBsgB,MAAM,CAACjkB,CAAD,CAAvB,CAAzB,CAAnB;;UACA,IAAI,CAAC+B,KAAK,CAACoiB,MAAD,CAAV,EAAoB;YAChB,KAAKtH,YAAL,CAAkBoH,MAAM,CAACjkB,CAAD,CAAxB,EAA6BmkB,MAA7B,EAAqC,IAArC;UACH;;UACD,KAAK3c,cAAL,CAAoB2R,MAApB,CAA2B,KAAK3R,cAAL,CAAoBmJ,OAApB,CAA4BjE,EAA5B,CAA3B,EAA4D,CAA5D;QACH;MACJ;IACJ;EACJ,CApBD;;EAqBA7F,QAAQ,CAAC3H,SAAT,CAAmBklB,gBAAnB,GAAsC,UAAU7Z,CAAV,EAAa;IAC/C,IAAIvD,KAAK,GAAG,IAAZ;;IACA,IAAI1H,MAAM,GAAGiL,CAAC,CAACjL,MAAf;IACA,IAAIgkB,WAAW,GAAG,KAAKC,cAAL,EAAlB;;IACA,IAAIjkB,MAAM,IAAIA,MAAM,CAAC8N,SAAP,CAAiB6I,QAAjB,CAA0BrS,KAA1B,CAAd,EAAgD;MAC5C,IAAIygB,MAAM,GAAG/kB,MAAb;;MACA,IAAIiL,CAAC,CAACqM,MAAF,KAAa,OAAjB,EAA0B;QACtByN,MAAM,CAACC,IAAP;QACA,KAAKvd,OAAL,CAAawd,KAAb;QACAnjB,QAAQ,CAAC,CAACkiB,WAAD,CAAD,EAAgBhgB,KAAhB,CAAR;MACH,CAJD,MAKK,IAAIiH,CAAC,CAACqM,MAAF,KAAa,QAAjB,EAA2B;QAC5ByN,MAAM,CAACnU,KAAP,GAAe,KAAKsU,OAApB;QACAH,MAAM,CAACC,IAAP;QACA,KAAKvd,OAAL,CAAawd,KAAb;QACAnjB,QAAQ,CAAC,CAACkiB,WAAD,CAAD,EAAgBhgB,KAAhB,CAAR;MACH;;MACD;IACH;;IACDiH,CAAC,CAACka,cAAF;IACA,IAAIjO,SAAS,GAAG;MACZ2E,MAAM,EAAE,KADI;MAEZsC,KAAK,EAAElT,CAFK;MAGZoK,IAAI,EAAE2O;IAHM,CAAhB;IAKA,KAAK7T,OAAL,CAAa,UAAb,EAAyB+G,SAAzB,EAAoC,UAAU0E,YAAV,EAAwB;MACxD,IAAI,CAACA,YAAY,CAACC,MAAlB,EAA0B;QACtB,QAAQ5Q,CAAC,CAACqM,MAAV;UACI,KAAK,OAAL;YACI,IAAI5P,KAAK,CAAC2L,YAAV,EAAwB;cACpB3L,KAAK,CAAC0d,SAAN,CAAgBna,CAAhB;YACH;;YACD;;UACJ,KAAK,WAAL;YACIvD,KAAK,CAAC2d,QAAN,CAAe3d,KAAK,CAACsG,SAAN,GAAkB,KAAlB,GAA0B,IAAzC,EAA+C/C,CAA/C;;YACA;;UACJ,KAAK,UAAL;YACIvD,KAAK,CAAC2d,QAAN,CAAe3d,KAAK,CAACsG,SAAN,GAAkB,IAAlB,GAAyB,KAAxC,EAA+C/C,CAA/C;;YACA;;UACJ,KAAK,WAAL;YACIvD,KAAK,CAAC4d,cAAN,CAAqB,IAArB,EAA2Bra,CAA3B;;YACA;;UACJ,KAAK,UAAL;UACA,KAAK,UAAL;UACA,KAAK,QAAL;YACIvD,KAAK,CAAC6d,YAAN,CAAmB,IAAnB;;YACA;;UACJ,KAAK,SAAL;YACI7d,KAAK,CAAC4d,cAAN,CAAqB,KAArB,EAA4Bra,CAA5B;;YACA;;UACJ,KAAK,QAAL;UACA,KAAK,QAAL;UACA,KAAK,MAAL;YACIvD,KAAK,CAAC6d,YAAN,CAAmB,KAAnB;;YACA;;UACJ,KAAK,MAAL;UACA,KAAK,WAAL;UACA,KAAK,UAAL;UACA,KAAK,QAAL;YACI7d,KAAK,CAAC8d,gBAAN,CAAuB,IAAvB;;YACA;;UACJ,KAAK,KAAL;UACA,KAAK,UAAL;UACA,KAAK,SAAL;UACA,KAAK,OAAL;YACI9d,KAAK,CAAC8d,gBAAN,CAAuB,KAAvB;;YACA;;UACJ,KAAK,OAAL;UACA,KAAK,WAAL;UACA,KAAK,YAAL;UACA,KAAK,SAAL;YACI9d,KAAK,CAACqX,YAAN,CAAmBiF,WAAnB,EAAgC/Y,CAAhC;;YACA;;UACJ,KAAK,IAAL;YACI,IAAIvD,KAAK,CAACoF,YAAN,IAAsB,CAACkX,WAAW,CAAClW,SAAZ,CAAsB6I,QAAtB,CAA+B,WAA/B,CAA3B,EAAwE;cACpEjP,KAAK,CAAC+d,aAAN,CAAoBzB,WAApB,EAAiC/Y,CAAjC;YACH;;YACD;;UACJ,KAAK,OAAL;YACI,IAAIvD,KAAK,CAACgP,mBAAV,EAA+B;cAC3B,IAAIyB,MAAM,GAAG/V,SAAS,CAAC,MAAMuB,QAAN,GAAiB,QAAjB,GAA4BM,MAA5B,GAAqC,GAAtC,EAA2CyD,KAAK,CAACD,OAAjD,CAAtB;;cACAC,KAAK,CAACuW,gBAAN,CAAuB9F,MAAvB;YACH;;YACD;QAxDR;MA0DH;IACJ,CA7DD;EA8DH,CAvFD;;EAwFA5Q,QAAQ,CAAC3H,SAAT,CAAmB8lB,eAAnB,GAAqC,UAAUC,IAAV,EAAgB;IACjD,IAAIC,SAAS,GAAG,KAAK3B,cAAL,GAAsBjV,aAAtB,CAAoC,MAAM3K,QAA1C,CAAhB;IACA,IAAIwhB,GAAG,GAAGD,SAAS,CAACE,qBAAV,EAAV;IACA,IAAI3K,MAAM,GAAG,KAAK4K,eAAL,CAAqB,KAAKte,OAA1B,CAAb;;IACA,IAAI,CAAChF,KAAK,CAAC0Y,MAAD,CAAV,EAAoB;MAChB,IAAI6K,SAAS,GAAG7K,MAAM,CAAC2K,qBAAP,EAAhB;;MACA,IAAID,GAAG,CAACI,MAAJ,GAAaD,SAAS,CAACC,MAA3B,EAAmC;QAC/B9K,MAAM,CAAC+K,SAAP,IAAoBL,GAAG,CAACI,MAAJ,GAAaD,SAAS,CAACC,MAA3C;MACH,CAFD,MAGK,IAAIJ,GAAG,CAACM,GAAJ,GAAUH,SAAS,CAACG,GAAxB,EAA6B;QAC9BhL,MAAM,CAAC+K,SAAP,IAAoBF,SAAS,CAACG,GAAV,GAAgBN,GAAG,CAACM,GAAxC;MACH;IACJ;;IACD,IAAI9jB,SAAS,GAAG,KAAK+jB,mBAAL,CAAyBR,SAAzB,CAAhB;;IACA,IAAI,CAACvjB,SAAL,EAAgB;MACZujB,SAAS,CAACS,cAAV,CAAyBV,IAAzB;IACH;EACJ,CAjBD;;EAkBApe,QAAQ,CAAC3H,SAAT,CAAmBwmB,mBAAnB,GAAyC,UAAUE,OAAV,EAAmB;IACxD,IAAIT,GAAG,GAAGS,OAAO,CAACR,qBAAR,EAAV;IACA,OAAQD,GAAG,CAACM,GAAJ,IAAW,CAAX,IAAgBN,GAAG,CAACU,IAAJ,IAAY,CAA5B,IAAiCV,GAAG,CAACI,MAAJ,KAAeO,MAAM,CAACC,WAAP,IAAsB3X,QAAQ,CAAC4X,eAAT,CAAyBC,YAA9D,CAAjC,IACJd,GAAG,CAACe,KAAJ,KAAcJ,MAAM,CAACK,UAAP,IAAqB/X,QAAQ,CAAC4X,eAAT,CAAyBI,WAA5D,CADJ;EAEH,CAJD;;EAKAvf,QAAQ,CAAC3H,SAAT,CAAmBmmB,eAAnB,GAAqC,UAAU1Q,IAAV,EAAgB;IACjD,IAAI5S,KAAK,CAAC4S,IAAD,CAAT,EAAiB;MACb,OAAO,IAAP;IACH;;IACD,OAAQA,IAAI,CAAC0R,YAAL,GAAoB1R,IAAI,CAACsR,YAA1B,GAA0CtR,IAA1C,GAAiD,KAAK0Q,eAAL,CAAqB1Q,IAAI,CAACgC,aAA1B,CAAxD;EACH,CALD;;EAMA9P,QAAQ,CAAC3H,SAAT,CAAmB0lB,cAAnB,GAAoC,UAAU0B,SAAV,EAAqB/b,CAArB,EAAwB;IACxD,IAAI,KAAKyL,mBAAT,EAA8B;MAC1B,IAAIsN,WAAW,GAAG,KAAKC,cAAL,EAAlB;MACA,IAAIgD,QAAQ,GAAGD,SAAS,GAAG,KAAKE,WAAL,CAAiBlD,WAAjB,CAAH,GAAmC,KAAKmD,WAAL,CAAiBnD,WAAjB,CAA3D;MACA,KAAKvF,WAAL;MACA,KAAKC,eAAL,CAAqBuI,QAArB;MACA,KAAKlI,YAAL,CAAkBkI,QAAlB,EAA4Bhc,CAA5B,EAA+B,KAA/B;MACA,KAAKya,eAAL,CAAqB,CAACsB,SAAtB;IACH,CAPD,MAQK;MACD,KAAKzB,YAAL,CAAkByB,SAAlB;IACH;EACJ,CAZD;;EAaAzf,QAAQ,CAAC3H,SAAT,CAAmBwlB,SAAnB,GAA+B,UAAUna,CAAV,EAAa;IACxC,IAAI+Y,WAAW,GAAG,KAAKC,cAAL,EAAlB;IACA,IAAImD,SAAS,GAAGjlB,MAAM,CAAC,MAAM0D,YAAP,EAAqBme,WAArB,CAAtB;IACA,IAAIvQ,SAAS,GAAGtR,MAAM,CAAC,OAAO2D,aAAR,EAAuBshB,SAAvB,CAAN,CAAwCtZ,SAAxC,CAAkD6I,QAAlD,CAA2DhR,KAA3D,CAAhB;;IACA,IAAI,CAACqe,WAAW,CAAClW,SAAZ,CAAsB6I,QAAtB,CAA+B,WAA/B,CAAL,EAAkD;MAC9C,IAAIqN,WAAW,CAAC9K,sBAAZ,CAAmC,qBAAnC,EAA0D7Y,MAA1D,IAAoE,CAAxE,EAA2E;QACvE,KAAKka,iBAAL,CAAuB6M,SAAvB,EAAkC3T,SAAlC,EAA6CuQ,WAA7C,EAA0D/Y,CAA1D;MACH;IACJ;EACJ,CATD;;EAUA1D,QAAQ,CAAC3H,SAAT,CAAmB2a,iBAAnB,GAAuC,UAAU6M,SAAV,EAAqBnI,OAArB,EAA8BhF,EAA9B,EAAkChP,CAAlC,EAAqC;IACxE,IAAIvD,KAAK,GAAG,IAAZ;;IACA,IAAIgT,MAAM,GAAG1Y,OAAO,CAAColB,SAAD,EAAY,MAAMzjB,QAAlB,CAApB;IACA,KAAKgF,gBAAL,GAAwB,EAAxB;IACA,IAAIoT,SAAS,GAAG,CAACkD,OAAD,GAAW,MAAX,GAAoB,OAApC;;IACA,IAAI,CAACxc,KAAK,CAACsZ,SAAD,CAAV,EAAuB;MACnBqL,SAAS,CAACja,YAAV,CAAuB,cAAvB,EAAuC4O,SAAvC;IACH;;IACD,IAAI7E,SAAS,GAAG,KAAKyE,aAAL,CAAmBjB,MAAnB,EAA2BuE,OAAO,GAAG,SAAH,GAAe,OAAjD,EAA0DhU,CAA1D,CAAhB;IACA,KAAKkF,OAAL,CAAa,cAAb,EAA6B+G,SAA7B,EAAwC,UAAU0E,YAAV,EAAwB;MAC5D,IAAI,CAACA,YAAY,CAACC,MAAlB,EAA0B;QACtBnU,KAAK,CAAC2f,kBAAN,CAAyBD,SAAzB,EAAoCnI,OAApC,EAA6ChF,EAA7C,EAAiD2B,YAAjD,EAA+D3Q,CAA/D;MACH;IACJ,CAJD;EAKH,CAdD;;EAeA1D,QAAQ,CAAC3H,SAAT,CAAmBynB,kBAAnB,GAAwC,UAAUD,SAAV,EAAqBnI,OAArB,EAA8BhF,EAA9B,EAAkC/C,SAAlC,EAA6CjM,CAA7C,EAAgD;IACpF,IAAI,KAAKnD,cAAL,CAAoBuJ,OAApB,CAA4B4I,EAAE,CAAC1E,YAAH,CAAgB,UAAhB,CAA5B,MAA6D,CAAC,CAAlE,EAAqE;MACjE,KAAKzN,cAAL,CAAoBsH,IAApB,CAAyB6K,EAAE,CAAC1E,YAAH,CAAgB,UAAhB,CAAzB;;MACA,IAAI,KAAKnC,SAAT,EAAoB;QAChB,IAAIY,KAAK,GAAG,KAAK5B,aAAL,CAAmB,KAAKzC,QAAxB,EAAkCsK,EAAE,CAAC1E,YAAH,CAAgB,UAAhB,CAAlC,CAAZ;QACCvB,KAAK,KAAK,IAAX,GAAmB,KAAKsT,YAAL,CAAkBtT,KAAlB,EAAyB,KAAKlM,cAA9B,EAA8C,IAA9C,EAAoD,IAApD,EAA0D,KAA1D,CAAnB,GAAsFkM,KAAK,GAAG,IAA9F;MACH;IACJ;;IACD,KAAKkB,WAAL,CAAiBkS,SAAjB,EAA4BnI,OAAO,GAAG,SAAH,GAAe,OAAlD,EAA2DhU,CAA3D,EAA8D,IAA9D;;IACA,IAAI,KAAKmI,SAAT,EAAoB;MAChB,KAAK2F,qBAAL,CAA2BkB,EAA3B;MACA,KAAKnB,sBAAL,CAA4B9W,OAAO,CAACA,OAAO,CAACiY,EAAD,EAAK,MAAMlW,UAAX,CAAR,EAAgC,MAAMJ,QAAtC,CAAnC;MACA,IAAIqW,OAAO,GAAG,KAAK,CAAnB;;MACA,IAAI9C,SAAS,CAACI,MAAV,KAAqB,OAAzB,EAAkC;QAC9B0C,OAAO,GAAG,IAAV;MACH,CAFD,MAGK,IAAI9C,SAAS,CAACI,MAAV,KAAqB,SAAzB,EAAoC;QACrC0C,OAAO,GAAG,KAAV;MACH;;MACD,KAAKkC,iBAAL,CAAuBjC,EAAvB,EAA2BD,OAA3B;IACH;;IACD,KAAKgF,gBAAL,CAAsBoI,SAAtB,EAAiCnI,OAAjC,EAA0ChU,CAA1C;EACH,CAtBD;EAuBA;AACJ;AACA;;;EACI1D,QAAQ,CAAC3H,SAAT,CAAmBsc,iBAAnB,GAAuC,UAAUjC,EAAV,EAAcD,OAAd,EAAuB;IAC1D,IAAIX,YAAY,GAAGlX,MAAM,CAAC,MAAM4B,UAAP,EAAmBkW,EAAnB,CAAzB;IACA,IAAIsN,WAAW,GAAGtN,EAAE,CAAC1E,YAAH,CAAgB,UAAhB,CAAlB;IACA,IAAI5E,MAAM,GAAG,KAAKpF,MAAlB;;IACA,IAAI,KAAKwG,QAAL,KAAkB,CAAlB,IAAuB,KAAKqB,SAAhC,EAA2C;MACvC,IAAIG,UAAU,GAAG,IAAIhR,WAAJ,CAAgB,KAAKoN,QAArB,EAA+B6D,YAA/B,CAA4C,IAAIhR,KAAJ,GAAYqP,KAAZ,CAAkBlB,MAAM,CAACiB,QAAzB,EAAmC,OAAnC,EAA4C2V,WAA5C,EAAyD,IAAzD,CAA5C,CAAjB;;MACA,KAAK,IAAI7mB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6S,UAAU,CAAClT,MAA/B,EAAuCK,CAAC,EAAxC,EAA4C;QACxC,IAAIgT,QAAQ,GAAGH,UAAU,CAAC7S,CAAD,CAAV,CAAc,KAAK6K,MAAL,CAAY6B,EAA1B,IAAgCmG,UAAU,CAAC7S,CAAD,CAAV,CAAc,KAAK6K,MAAL,CAAY6B,EAA1B,EAA8BuG,QAA9B,EAAhC,GAA2E,IAA1F;QACA,IAAIsL,OAAO,GAAG1L,UAAU,CAAC7S,CAAD,CAAV,CAAc,KAAK6K,MAAL,CAAYkI,SAA1B,IAAuCF,UAAU,CAAC7S,CAAD,CAAV,CAAc,KAAK6K,MAAL,CAAYkI,SAA1B,EAAqCE,QAArC,EAAvC,GAAyF,IAAvG;;QACA,IAAI,KAAK3H,YAAL,CAAkBqF,OAAlB,CAA0BkW,WAA1B,MAA2C,CAAC,CAA5C,IAAiD,KAAKvb,YAAL,CAAkBqF,OAAlB,CAA0BqC,QAA1B,MAAwC,CAAC,CAA9F,EAAiG;UAC7F,KAAK1H,YAAL,CAAkBoD,IAAlB,CAAuBsE,QAAvB;UACA,IAAIe,UAAU,GAAG,KAAKrC,aAAL,CAAmB,KAAKzC,QAAxB,EAAkC+D,QAAlC,CAAjB;UACA,KAAK8T,aAAL,CAAmB/S,UAAnB,EAA+BuF,OAA/B;;UACA,IAAI,KAAKpR,eAAL,CAAqByI,OAArB,CAA6BqC,QAA7B,MAA2C,CAAC,CAAhD,EAAmD;YAC/C,KAAK9K,eAAL,CAAqBiR,MAArB,CAA4B,KAAKjR,eAAL,CAAqByI,OAArB,CAA6BqC,QAA7B,CAA5B,EAAoE,CAApE;UACH;QACJ,CAPD,MAQK,IAAI,KAAK1H,YAAL,CAAkBqF,OAAlB,CAA0BkW,WAA1B,MAA2C,CAAC,CAA5C,IAAiDlO,YAAY,KAAK,IAAlE,IACL,KAAKrN,YAAL,CAAkBqF,OAAlB,CAA0BqC,QAA1B,MAAwC,CAAC,CADxC,EAC2C;UAC5C,KAAK1H,YAAL,CAAkB6N,MAAlB,CAAyB,KAAK7N,YAAL,CAAkBqF,OAAlB,CAA0BqC,QAA1B,CAAzB,EAA8D,CAA9D;;UACA,IAAIuL,OAAO,KAAK,MAAhB,EAAwB;YACpB,KAAK5E,WAAL,CAAiB,KAAK1K,QAAtB,EAAgC,KAAKpE,MAArC,EAA6CmI,QAA7C,EAAuD,WAAvD,EAAoE,IAApE;UACH;;UACD,IAAI,KAAK1H,YAAL,CAAkBqF,OAAlB,CAA0BkW,WAA1B,MAA2C,CAAC,CAA5C,IAAiDlO,YAAY,KAAK,IAAlE,IACA,KAAKzQ,eAAL,CAAqByI,OAArB,CAA6BqC,QAA7B,MAA2C,CAAC,CADhD,EACmD;YAC/C,IAAIqB,UAAU,GAAG,KAAK3C,aAAL,CAAmB,KAAKzC,QAAxB,EAAkC+D,QAAlC,CAAjB;YACA,KAAK8T,aAAL,CAAmBzS,UAAnB,EAA+BiF,OAA/B;;YACA,IAAI,KAAKpR,eAAL,CAAqByI,OAArB,CAA6BqC,QAA7B,MAA2C,CAAC,CAAhD,EAAmD;cAC/C,KAAK9K,eAAL,CAAqBiR,MAArB,CAA4B,KAAKjR,eAAL,CAAqByI,OAArB,CAA6BqC,QAA7B,CAA5B,EAAoE,CAApE;YACH;UACJ;QACJ,CAdI,MAeA;UACD,IAAIe,UAAU,GAAG,KAAKrC,aAAL,CAAmB,KAAKzC,QAAxB,EAAkC+D,QAAlC,CAAjB;UACA,KAAK8T,aAAL,CAAmB/S,UAAnB,EAA+BuF,OAA/B;QACH;MACJ;IACJ,CAjCD,MAkCK,IAAI,KAAKjI,QAAL,KAAkB,CAAlB,IAAuB,CAAC,KAAKqB,SAAjC,EAA4C;MAC7C,IAAI,CAAC4G,OAAL,EAAc;QACV,IAAIzF,WAAW,GAAG,IAAIhS,WAAJ,CAAgB,KAAKoN,QAArB,EAA+B6D,YAA/B,CAA4C,IAAIhR,KAAJ,GAAYqP,KAAZ,CAAkBlB,MAAM,CAAC8C,SAAzB,EAAoC,OAApC,EAA6C,IAA7C,EAAmD,KAAnD,CAA5C,CAAlB;;QACA,KAAK,IAAI/S,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6T,WAAW,CAAClU,MAAhC,EAAwCK,CAAC,EAAzC,EAA6C;UACzC,IAAI0M,EAAE,GAAGmH,WAAW,CAAC7T,CAAD,CAAX,CAAe,KAAK6K,MAAL,CAAY6B,EAA3B,IAAiCmH,WAAW,CAAC7T,CAAD,CAAX,CAAe,KAAK6K,MAAL,CAAY6B,EAA3B,EAA+BuG,QAA/B,EAAjC,GAA6E,IAAtF;;UACA,IAAI,KAAK3H,YAAL,CAAkBqF,OAAlB,CAA0BjE,EAA1B,MAAkC,CAAC,CAAvC,EAA0C;YACtC,KAAKpB,YAAL,CAAkB6N,MAAlB,CAAyB,KAAK7N,YAAL,CAAkBqF,OAAlB,CAA0BjE,EAA1B,CAAzB,EAAwD,CAAxD;UACH;;UACD,KAAKiN,WAAL,CAAiB,KAAK1K,QAAtB,EAAgC,KAAKpE,MAArC,EAA6C6B,EAA7C,EAAiD,WAAjD,EAA8D,IAA9D;QACH;;QACD,KAAKpB,YAAL,GAAoB,EAApB;MACH,CAVD,MAWK;QACD,KAAK,IAAItL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKiP,QAAL,CAActP,MAAlC,EAA0CK,CAAC,EAA3C,EAA+C;UAC3C,IAAI4T,SAAS,GAAG,KAAK3E,QAAL,CAAcjP,CAAd,EAAiB,KAAK6K,MAAL,CAAY6B,EAA7B,IAAmC,KAAKuC,QAAL,CAAcjP,CAAd,EAAiB,KAAK6K,MAAL,CAAY6B,EAA7B,EAAiCuG,QAAjC,EAAnC,GAAiF,IAAjG;;UACA,IAAI,KAAK3H,YAAL,CAAkBqF,OAAlB,CAA0BiD,SAA1B,MAAyC,CAAC,CAA9C,EAAiD;YAC7C,KAAKtI,YAAL,CAAkBoD,IAAlB,CAAuBkF,SAAvB;UACH;QACJ;MACJ;IACJ,CApBI,MAqBA;MACD,IAAIG,UAAU,GAAG,KAAKrC,aAAL,CAAmB,KAAKzC,QAAxB,EAAkC4X,WAAlC,CAAjB;;MACA,IAAI9S,UAAJ,EAAgB;QACZ,KAAKgT,gBAAL,CAAsBhT,UAAtB,EAAkC8S,WAAlC,EAA+ClO,YAA/C,EAA6DW,OAA7D;MACH;IACJ;EACJ,CAjED;;EAkEAzS,QAAQ,CAAC3H,SAAT,CAAmB4nB,aAAnB,GAAmC,UAAU/S,UAAV,EAAsBuF,OAAtB,EAA+B;IAC9D,KAAK,IAAItZ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+T,UAAU,CAACpU,MAA/B,EAAuCK,CAAC,EAAxC,EAA4C;MACxC,IAAIuT,OAAO,GAAGQ,UAAU,CAAC/T,CAAD,CAAV,CAAc,KAAK6K,MAAL,CAAY6B,EAA1B,IAAgCqH,UAAU,CAAC/T,CAAD,CAAV,CAAc,KAAK6K,MAAL,CAAY6B,EAA1B,EAA8BuG,QAA9B,EAAhC,GAA2E,IAAzF;MACA,IAAI+T,YAAY,GAAGjT,UAAU,CAAC/T,CAAD,CAAV,CAAc,KAAK6K,MAAL,CAAYkI,SAA1B,IAAuCgB,UAAU,CAAC/T,CAAD,CAAV,CAAc,KAAK6K,MAAL,CAAYkI,SAA1B,EAAqCE,QAArC,EAAvC,GACf,IADJ;;MAEA,IAAI,KAAK3H,YAAL,CAAkBqF,OAAlB,CAA0B4C,OAA1B,MAAuC,CAAC,CAAxC,IAA6C,CAAC+F,OAAlD,EAA2D;QACvD,KAAKhO,YAAL,CAAkB6N,MAAlB,CAAyB,KAAK7N,YAAL,CAAkBqF,OAAlB,CAA0B4C,OAA1B,CAAzB,EAA6D,CAA7D;MACH;;MACD,IAAI,KAAKjI,YAAL,CAAkBqF,OAAlB,CAA0B4C,OAA1B,MAAuC,CAAC,CAAxC,IAA6C+F,OAAjD,EAA0D;QACtD,KAAKhO,YAAL,CAAkBoD,IAAlB,CAAuB6E,OAAvB;MACH;;MACD,IAAIyT,YAAY,KAAK,MAAjB,IAA2B,CAAC1N,OAAhC,EAAyC;QACrC,KAAKK,WAAL,CAAiB,KAAK1K,QAAtB,EAAgC,KAAKpE,MAArC,EAA6C0I,OAA7C,EAAsD,WAAtD,EAAmE,IAAnE;MACH;;MACD,IAAI6B,aAAa,GAAG,KAAK1D,aAAL,CAAmB,KAAKzC,QAAxB,EAAkCsE,OAAlC,CAApB;;MACA,IAAI6B,aAAa,CAACzV,MAAd,GAAuB,CAA3B,EAA8B;QAC1B,KAAKmnB,aAAL,CAAmB1R,aAAnB,EAAkCkE,OAAlC;MACH;IACJ;EACJ,CAnBD;EAoBA;AACJ;AACA;;;EACIzS,QAAQ,CAAC3H,SAAT,CAAmB6nB,gBAAnB,GAAsC,UAAUhT,UAAV,EAAsB0G,MAAtB,EAA8B9B,YAA9B,EAA4CW,OAA5C,EAAqD;IACvF,KAAK,IAAItZ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG+T,UAAU,CAACpU,MAA/B,EAAuCK,CAAC,EAAxC,EAA4C;MACxC,IAAImV,YAAY,GAAGpB,UAAU,CAAC/T,CAAD,CAAV,CAAc,KAAK6K,MAAL,CAAY6B,EAA1B,IAAgCqH,UAAU,CAAC/T,CAAD,CAAV,CAAc,KAAK6K,MAAL,CAAY6B,EAA1B,EAA8BuG,QAA9B,EAAhC,GAA2E,EAA9F;MACA,IAAIsL,OAAO,GAAGxK,UAAU,CAAC/T,CAAD,CAAV,CAAc,KAAK6K,MAAL,CAAYkI,SAA1B,IAAuCgB,UAAU,CAAC/T,CAAD,CAAV,CAAc,KAAK6K,MAAL,CAAYkI,SAA1B,EAAqCE,QAArC,EAAvC,GAAyF,IAAvG;;MACA,IAAI,KAAKP,SAAT,EAAoB;QAChB,IAAI,KAAKpH,YAAL,CAAkBqF,OAAlB,CAA0B8J,MAA1B,MAAsC,CAAC,CAAvC,IAA4C,KAAKnP,YAAL,CAAkBqF,OAAlB,CAA0BwE,YAA1B,MAA4C,CAAC,CAA7F,EAAgG;UAC5F,KAAK7J,YAAL,CAAkBoD,IAAlB,CAAuByG,YAAvB;;UACA,IAAI,KAAKjN,eAAL,CAAqByI,OAArB,CAA6BwE,YAA7B,MAA+C,CAAC,CAApD,EAAuD;YACnD,KAAKjN,eAAL,CAAqBiR,MAArB,CAA4B,KAAKjR,eAAL,CAAqByI,OAArB,CAA6BwE,YAA7B,CAA5B,EAAwE,CAAxE;UACH;QACJ,CALD,MAMK,IAAI,KAAK7J,YAAL,CAAkBqF,OAAlB,CAA0B8J,MAA1B,MAAsC,CAAC,CAAvC,IAA4C,KAAKnP,YAAL,CAAkBqF,OAAlB,CAA0BwE,YAA1B,MAA4C,CAAC,CAAzF,IAA8F,CAACmE,OAAnG,EAA4G;UAC7G,KAAKhO,YAAL,CAAkB6N,MAAlB,CAAyB,KAAK7N,YAAL,CAAkBqF,OAAlB,CAA0BwE,YAA1B,CAAzB,EAAkE,CAAlE;;UACA,IAAIoJ,OAAO,KAAK,MAAhB,EAAwB;YACpB,KAAK5E,WAAL,CAAiB,KAAK1K,QAAtB,EAAgC,KAAKpE,MAArC,EAA6CsK,YAA7C,EAA2D,WAA3D,EAAwE,IAAxE;UACH;QACJ;MACJ,CAbD,MAcK,IAAI,CAAC,KAAKzC,SAAV,EAAqB;QACtB,IAAI,CAAC4G,OAAL,EAAc;UACV,IAAI,KAAKhO,YAAL,CAAkBqF,OAAlB,CAA0BwE,YAA1B,MAA4C,CAAC,CAAjD,EAAoD;YAChD,KAAK7J,YAAL,CAAkB6N,MAAlB,CAAyB,KAAK7N,YAAL,CAAkBqF,OAAlB,CAA0BwE,YAA1B,CAAzB,EAAkE,CAAlE;UACH;;UACD,KAAKwE,WAAL,CAAiB,KAAK1K,QAAtB,EAAgC,KAAKpE,MAArC,EAA6CsK,YAA7C,EAA2D,WAA3D,EAAwE,IAAxE;UACA,KAAK7J,YAAL,GAAoB,EAApB;QACH,CAND,MAOK;UACD,IAAI,KAAKA,YAAL,CAAkBqF,OAAlB,CAA0BwE,YAA1B,MAA4C,CAAC,CAAjD,EAAoD;YAChD,KAAK7J,YAAL,CAAkBoD,IAAlB,CAAuByG,YAAvB;UACH;QACJ;MACJ;;MACD,IAAIkF,QAAQ,GAAG,KAAK3I,aAAL,CAAmB,CAACqC,UAAU,CAAC/T,CAAD,CAAX,CAAnB,EAAoCmV,YAApC,CAAf;;MACA,IAAIkF,QAAJ,EAAc;QACV,KAAK0M,gBAAL,CAAsB1M,QAAtB,EAAgCI,MAAhC,EAAwC9B,YAAxC,EAAsDW,OAAtD;MACH;IACJ;EACJ,CArCD,CAvpE4C,CA6rE5C;;;EACAzS,QAAQ,CAAC3H,SAAT,CAAmB0nB,YAAnB,GAAkC,UAAUtT,KAAV,EAAiB2T,QAAjB,EAA2BxL,OAA3B,EAAoC3C,UAApC,EAAgDoO,aAAhD,EAA+D;IAC7F,IAAI5T,KAAJ,EAAW;MACP,KAAK,IAAI6T,QAAQ,GAAG,CAApB,EAAuBA,QAAQ,GAAG7T,KAAK,CAAC3T,MAAxC,EAAgDwnB,QAAQ,EAAxD,EAA4D;QACxD,IAAI5T,OAAO,GAAGtR,QAAQ,CAAC,KAAK4I,MAAL,CAAY6B,EAAb,EAAiB4G,KAAK,CAAC6T,QAAD,CAAtB,CAAtB;QACA,IAAI5S,KAAK,GAAG,KAAKxN,OAAL,CAAauH,aAAb,CAA2B,gBAAgBiF,OAAhB,GAA0B,IAArD,CAAZ,CAFwD,CAGxD;;QACA,IAAI2T,aAAa,KAAK,KAAlB,IAA2B,KAAK9f,cAAL,CAAoBuJ,OAApB,CAA4B4C,OAAO,CAACN,QAAR,EAA5B,MAAoD,CAAC,CAApF,EAAuF;UACnF,IAAMsB,KAAK,KAAK,IAAV,IAAkB,CAACxS,KAAK,CAACuR,KAAK,CAAC6T,QAAD,CAAL,CAAgB,KAAKtc,MAAL,CAAYkI,SAA5B,CAAD,CAAxB,IAAoEkU,QAAQ,CAACtW,OAAT,CAAiB4C,OAAO,CAACN,QAAR,EAAjB,MAAyC,CAAC,CAA/G,IACE6F,UAAU,KAAK,CADjB,IACsB2C,OAAO,KAAK,CADvC,EAC2C;YACtCnI,KAAK,CAAC6T,QAAD,CAAL,CAAgB,KAAKtc,MAAL,CAAYkI,SAA5B,MAA2C,KAA3C,IAAoD0I,OAAO,KAAK,CAAjE,GAAsEwL,QAAQ,CAACvY,IAAT,CAAc6E,OAAO,CAACN,QAAR,EAAd,CAAtE,GACM6F,UAAU,GAAG,IADnB;YAEAA,UAAU,GAAIxF,KAAK,CAAC6T,QAAD,CAAL,CAAgB,KAAKtc,MAAL,CAAYkI,SAA5B,MAA2C,KAA3C,IAAoD0I,OAAO,KAAK,CAAjE,GAAsE,CAAtE,GAA0E,IAAvF;UACH;QACJ,CAXuD,CAYxD;;;QACA,IAAIwL,QAAQ,CAACtW,OAAT,CAAiB4C,OAAO,CAACN,QAAR,EAAjB,MAAyC,CAAC,CAA1C,IAA+ClR,KAAK,CAAC0Z,OAAD,CAAxD,EAAmE;UAC/DwL,QAAQ,CAACvY,IAAT,CAAc6E,OAAO,CAACN,QAAR,EAAd;QACH;;QACD,IAAImU,WAAW,GAAGnlB,QAAQ,CAAC,KAAK4I,MAAL,CAAYyI,KAAZ,CAAkBL,QAAlB,EAAD,EAA+BK,KAAK,CAAC6T,QAAD,CAApC,CAA1B,CAhBwD,CAiBxD;;QACA,IAAIllB,QAAQ,CAAC,KAAK4I,MAAL,CAAYsI,WAAb,EAA0BG,KAAK,CAAC6T,QAAD,CAA/B,CAAR,KAAuD,IAAvD,IAA+DC,WAAnE,EAAgF;UAC5E,IAAI1a,EAAE,GAAGzK,QAAQ,CAAC,KAAK4I,MAAL,CAAY6B,EAAb,EAAiB4G,KAAK,CAAC6T,QAAD,CAAtB,CAAjB;UACA,IAAIE,SAAS,GAAG,KAAK,CAArB;;UACA,IAAI,KAAKhW,QAAL,KAAkB,CAAtB,EAAyB;YACrBgW,SAAS,GAAG,KAAK3V,aAAL,CAAmB,KAAKzC,QAAxB,EAAkCvC,EAAE,CAACuG,QAAH,EAAlC,CAAZ;UACH,CAFD,MAGK;YACDoU,SAAS,GAAGD,WAAZ;UACH;;UACD,IAAIC,SAAJ,EAAe;YACVtlB,KAAK,CAACmlB,aAAD,CAAN,GAAyB,KAAKN,YAAL,CAAkBS,SAAlB,EAA6BJ,QAA7B,EAAuCxL,OAAvC,EAAgD3C,UAAhD,CAAzB,GACI,KAAK8N,YAAL,CAAkBS,SAAlB,EAA6BJ,QAA7B,EAAuCxL,OAAvC,EAAgD3C,UAAhD,EAA4DoO,aAA5D,CADJ;YAEApO,UAAU,GAAG,IAAb;UACH;QACJ;;QACDA,UAAU,GAAG,IAAb;MACH;IACJ;EACJ,CAtCD;;EAuCAjS,QAAQ,CAAC3H,SAAT,CAAmBylB,QAAnB,GAA8B,UAAU2C,UAAV,EAAsB/c,CAAtB,EAAyB;IACnD,IAAI+Y,WAAW,GAAG,KAAKC,cAAL,EAAlB;IACA,IAAIhO,IAAI,GAAG9T,MAAM,CAAC,SAASiC,IAAV,EAAgB4f,WAAhB,CAAjB;;IACA,IAAIgE,UAAJ,EAAgB;MACZ,IAAI,CAAC/R,IAAL,EAAW;QACP;MACH,CAFD,MAGK,IAAIA,IAAI,CAACnI,SAAL,CAAe6I,QAAf,CAAwBjT,UAAxB,CAAJ,EAAyC;QAC1C,KAAK6Z,YAAL,CAAkByG,WAAlB,EAA+B/N,IAA/B,EAAqChL,CAArC;MACH,CAFI,MAGA;QACD,KAAKgd,aAAL,CAAmBjE,WAAnB,EAAgC,IAAhC;MACH;IACJ,CAVD,MAWK;MACD,IAAI/N,IAAI,IAAIA,IAAI,CAACnI,SAAL,CAAe6I,QAAf,CAAwBlT,WAAxB,CAAZ,EAAkD;QAC9C,KAAKqb,YAAL,CAAkBkF,WAAlB,EAA+B/N,IAA/B,EAAqChL,CAArC;MACH,CAFD,MAGK;QACD,IAAIuW,QAAQ,GAAGxf,OAAO,CAACA,OAAO,CAACgiB,WAAD,EAAc,MAAMjgB,UAApB,CAAR,EAAyC,MAAMJ,QAA/C,CAAtB;;QACA,IAAI,CAAC6d,QAAL,EAAe;UACX;QACH,CAFD,MAGK;UACD,IAAI,CAACA,QAAQ,CAAC1T,SAAT,CAAmB6I,QAAnB,CAA4B,WAA5B,CAAL,EAA+C;YAC3C,KAAKuR,QAAL,CAAclE,WAAd,EAA2BxC,QAA3B;YACA,KAAKkE,eAAL,CAAqB,IAArB;UACH;QACJ;MACJ;IACJ;EACJ,CA/BD;;EAgCAne,QAAQ,CAAC3H,SAAT,CAAmB2lB,YAAnB,GAAkC,UAAUyB,SAAV,EAAqB;IACnD,IAAIhD,WAAW,GAAG,KAAKC,cAAL,EAAlB;IACA,KAAKgE,aAAL,CAAmBjE,WAAnB,EAAgCgD,SAAhC;EACH,CAHD;;EAIAzf,QAAQ,CAAC3H,SAAT,CAAmB4lB,gBAAnB,GAAsC,UAAU2C,WAAV,EAAuB;IACzD,IAAInE,WAAW,GAAG,KAAKC,cAAL,EAAlB;IACA,IAAImE,QAAQ,GAAGD,WAAW,GAAG,KAAKE,WAAL,EAAH,GAAwB,KAAKC,UAAL,EAAlD;;IACA,IAAI,CAACF,QAAQ,CAACta,SAAT,CAAmB6I,QAAnB,CAA4B,WAA5B,CAAL,EAA+C;MAC3C,KAAKuR,QAAL,CAAclE,WAAd,EAA2BoE,QAA3B;MACA,KAAK1C,eAAL,CAAqByC,WAArB;IACH;EACJ,CAPD;;EAQA5gB,QAAQ,CAAC3H,SAAT,CAAmBqkB,cAAnB,GAAoC,YAAY;IAC5C,IAAIsE,YAAJ;IACA,IAAIC,KAAK,GAAGrmB,MAAM,CAAC,MAAMwB,QAAN,GAAiB,GAAjB,GAAuBuC,KAAxB,EAA+B,KAAKuB,OAApC,CAAlB;;IACA,IAAIhF,KAAK,CAAC+lB,KAAD,CAAT,EAAkB;MACdD,YAAY,GAAGpmB,MAAM,CAAC,MAAMwB,QAAP,EAAiB,KAAK8D,OAAtB,CAArB;IACH;;IACD,OAAOhF,KAAK,CAAC+lB,KAAD,CAAL,GAAgB/lB,KAAK,CAAC8lB,YAAD,CAAL,GAAsB,KAAK9gB,OAAL,CAAaghB,iBAAnC,GAAuDF,YAAvE,GAAuFC,KAA9F;EACH,CAPD;;EAQAjhB,QAAQ,CAAC3H,SAAT,CAAmBqoB,aAAnB,GAAmC,UAAUhO,EAAV,EAAc+M,SAAd,EAAyB;IACxD,IAAIC,QAAQ,GAAGD,SAAS,GAAG,KAAKE,WAAL,CAAiBjN,EAAjB,CAAH,GAA0B,KAAKkN,WAAL,CAAiBlN,EAAjB,CAAlD;IACA,KAAKiO,QAAL,CAAcjO,EAAd,EAAkBgN,QAAlB;IACA,KAAKvB,eAAL,CAAqB,CAACsB,SAAtB;;IACA,IAAIC,QAAQ,CAACnZ,SAAT,CAAmB6I,QAAnB,CAA4B,WAA5B,CAAJ,EAA8C;MAC1C,IAAI+R,SAAS,GAAGzB,QAAQ,CAACyB,SAAzB;;MACA,IAAIzB,QAAQ,CAAC0B,eAAT,IAA4B,IAA5B,IAAoC1B,QAAQ,CAACnZ,SAAT,CAAmB6I,QAAnB,CAA4B,WAA5B,CAAxC,EAAkF;QAC9E,KAAKsR,aAAL,CAAmBhB,QAAnB,EAA6B,IAA7B;MACH,CAFD,MAGK,IAAIA,QAAQ,CAAC2B,WAAT,IAAwB,IAAxB,IAAgC3B,QAAQ,CAACnZ,SAAT,CAAmB6I,QAAnB,CAA4B,kBAA5B,CAApC,EAAqF;QACtF,KAAKsR,aAAL,CAAmBhB,QAAnB,EAA6B,KAA7B;MACH,CAFI,MAGA,IAAIA,QAAQ,CAAC2B,WAAT,IAAwB,IAAxB,IAAgCF,SAAS,CAAC5a,SAAV,CAAoB6I,QAApB,CAA6BtS,QAA7B,CAApC,EAA4E;QAC7E,KAAK4jB,aAAL,CAAmBhB,QAAnB,EAA6B,KAA7B;MACH,CAFI,MAGA;QACD,KAAKgB,aAAL,CAAmBhB,QAAnB,EAA6BD,SAA7B;MACH;IACJ;EACJ,CAnBD;;EAoBAzf,QAAQ,CAAC3H,SAAT,CAAmBsnB,WAAnB,GAAiC,UAAUjN,EAAV,EAAc;IAC3C,IAAIrO,KAAK,GAAG,KAAKkR,MAAL,CAAYzL,OAAZ,CAAoB4I,EAApB,CAAZ;IACA,IAAIgN,QAAJ;;IACA,GAAG;MACCrb,KAAK;MACLqb,QAAQ,GAAG,KAAKnK,MAAL,CAAYlR,KAAZ,CAAX;;MACA,IAAInJ,KAAK,CAACwkB,QAAD,CAAT,EAAqB;QACjB,OAAOhN,EAAP;MACH;IACJ,CAND,QAMS,CAAC5X,SAAS,CAAC4kB,QAAD,CANnB;;IAOA,OAAOA,QAAP;EACH,CAXD;;EAYA1f,QAAQ,CAAC3H,SAAT,CAAmBunB,WAAnB,GAAiC,UAAUlN,EAAV,EAAc;IAC3C,IAAIrO,KAAK,GAAG,KAAKkR,MAAL,CAAYzL,OAAZ,CAAoB4I,EAApB,CAAZ;IACA,IAAI4O,QAAJ;;IACA,GAAG;MACCjd,KAAK;MACLid,QAAQ,GAAG,KAAK/L,MAAL,CAAYlR,KAAZ,CAAX;;MACA,IAAInJ,KAAK,CAAComB,QAAD,CAAT,EAAqB;QACjB,OAAO5O,EAAP;MACH;IACJ,CAND,QAMS,CAAC5X,SAAS,CAACwmB,QAAD,CANnB;;IAOA,OAAOA,QAAP;EACH,CAXD;;EAYAthB,QAAQ,CAAC3H,SAAT,CAAmByoB,WAAnB,GAAiC,YAAY;IACzC,IAAIzc,KAAK,GAAG,CAAZ;IACA,IAAIwc,QAAJ;;IACA,GAAG;MACCA,QAAQ,GAAG,KAAKtL,MAAL,CAAYlR,KAAZ,CAAX;MACAA,KAAK;IACR,CAHD,QAGS,CAACvJ,SAAS,CAAC+lB,QAAD,CAHnB;;IAIA,OAAOA,QAAP;EACH,CARD;;EASA7gB,QAAQ,CAAC3H,SAAT,CAAmB0oB,UAAnB,GAAgC,YAAY;IACxC,IAAI1c,KAAK,GAAG,KAAKkR,MAAL,CAAYzc,MAAZ,GAAqB,CAAjC;IACA,IAAIyoB,OAAJ;;IACA,GAAG;MACCA,OAAO,GAAG,KAAKhM,MAAL,CAAYlR,KAAZ,CAAV;MACAA,KAAK;IACR,CAHD,QAGS,CAACvJ,SAAS,CAACymB,OAAD,CAHnB;;IAIA,OAAOA,OAAP;EACH,CARD;;EASAvhB,QAAQ,CAAC3H,SAAT,CAAmBsoB,QAAnB,GAA8B,UAAUa,OAAV,EAAmB9B,QAAnB,EAA6B;IACvDllB,WAAW,CAAC,CAACgnB,OAAD,CAAD,EAAY,CAAC/kB,KAAD,EAAQkC,KAAR,CAAZ,CAAX;;IACA,IAAI,CAAC+gB,QAAQ,CAACnZ,SAAT,CAAmB6I,QAAnB,CAA4B,WAA5B,CAAL,EAA+C;MAC3C7U,QAAQ,CAAC,CAACmlB,QAAD,CAAD,EAAa,CAACjjB,KAAD,EAAQkC,KAAR,CAAb,CAAR;MACA,KAAKoW,YAAL,CAAkByM,OAAlB,EAA2B9B,QAA3B;IACH;EACJ,CAND;;EAOA1f,QAAQ,CAAC3H,SAAT,CAAmB0c,YAAnB,GAAkC,UAAUyM,OAAV,EAAmB9B,QAAnB,EAA6B;IAC3D,KAAKxf,OAAL,CAAamH,eAAb,CAA6B,uBAA7B;;IACA,IAAIma,OAAJ,EAAa;MACTA,OAAO,CAACna,eAAR,CAAwB,IAAxB;IACH;;IACDqY,QAAQ,CAAC9Z,YAAT,CAAsB,IAAtB,EAA4B,KAAK1F,OAAL,CAAa2F,EAAb,GAAkB,SAA9C;IACA,KAAK3F,OAAL,CAAa0F,YAAb,CAA0B,uBAA1B,EAAmD,KAAK1F,OAAL,CAAa2F,EAAb,GAAkB,SAArE;EACH,CAPD;;EAQA7F,QAAQ,CAAC3H,SAAT,CAAmBopB,OAAnB,GAA6B,YAAY;IACrC,IAAI,CAAC,KAAKzgB,eAAV,EAA2B;MACvBzG,QAAQ,CAAC,CAAC,KAAKmiB,cAAL,EAAD,CAAD,EAA0BjgB,KAA1B,CAAR;IACH;;IACD,KAAKuE,eAAL,GAAuB,KAAvB;EACH,CALD;;EAMAhB,QAAQ,CAAC3H,SAAT,CAAmBqpB,QAAnB,GAA8B,YAAY;IACtClnB,WAAW,CAAC,CAAC,KAAKkiB,cAAL,EAAD,CAAD,EAA0BjgB,KAA1B,CAAX;EACH,CAFD;;EAGAuD,QAAQ,CAAC3H,SAAT,CAAmBspB,WAAnB,GAAiC,UAAUje,CAAV,EAAa;IAC1C,IAAIjL,MAAM,GAAGiL,CAAC,CAACjL,MAAf;IACA,IAAI8N,SAAS,GAAG9N,MAAM,CAAC8N,SAAvB;IACA,IAAIqb,SAAS,GAAGnnB,OAAO,CAAChC,MAAD,EAAS,MAAM2D,QAAf,CAAvB;;IACA,IAAI,CAACwlB,SAAD,IAAcrb,SAAS,CAAC6I,QAAV,CAAmB5S,UAAnB,CAAd,IAAgD+J,SAAS,CAAC6I,QAAV,CAAmBhT,QAAnB,CAApD,EAAkF;MAC9E,KAAK8a,WAAL;MACA;IACH,CAHD,MAIK;MACD,IAAI0K,SAAS,IAAI,CAACA,SAAS,CAACrb,SAAV,CAAoB6I,QAApB,CAA6B,WAA7B,CAAlB,EAA6D;QACzD,KAAKyS,QAAL,CAAcD,SAAd;MACH;IACJ;EACJ,CAbD;;EAcA5hB,QAAQ,CAAC3H,SAAT,CAAmBwpB,QAAnB,GAA8B,UAAUnP,EAAV,EAAc;IACxC,IAAI,CAACA,EAAE,CAACnM,SAAH,CAAa6I,QAAb,CAAsB3S,KAAtB,CAAL,EAAmC;MAC/B,KAAKya,WAAL;MACA3c,QAAQ,CAAC,CAACmY,EAAD,CAAD,EAAOjW,KAAP,CAAR;IACH;EACJ,CALD;;EAMA;;EACAuD,QAAQ,CAAC3H,SAAT,CAAmBypB,YAAnB,GAAkC,UAAUpe,CAAV,EAAa;IAC3C,KAAKwT,WAAL;EACH,CAFD;;EAGAlX,QAAQ,CAAC3H,SAAT,CAAmB6e,WAAnB,GAAiC,YAAY;IACzC,IAAI6K,WAAW,GAAGlnB,SAAS,CAAC,MAAM4B,KAAP,EAAc,KAAKyD,OAAnB,CAA3B;;IACA,IAAI6hB,WAAW,IAAIA,WAAW,CAACjpB,MAA/B,EAAuC;MACnC0B,WAAW,CAACunB,WAAD,EAActlB,KAAd,CAAX;IACH;EACJ,CALD;;EAMA;;EACAuD,QAAQ,CAAC3H,SAAT,CAAmBgb,WAAnB,GAAiC,UAAUF,MAAV,EAAkB6O,MAAlB,EAA0B;IACvD,IAAI,CAAC9mB,KAAK,CAACiY,MAAD,CAAN,IAAkBA,MAAM,CAAC5M,SAAP,CAAiB6I,QAAjB,CAA0BhT,QAA1B,CAAlB,IACA,CAAClB,KAAK,CAACT,OAAO,CAAC0Y,MAAD,EAAS,MAAMlX,OAAf,CAAR,CADN,IAC0CxB,OAAO,CAAC0Y,MAAD,EAAS,MAAMlX,OAAf,CAAP,CAA+BsK,SAA/B,CAAyC6I,QAAzC,CAAkDpT,IAAlD,CAD9C,EACuG;MACnG,IAAI6J,EAAE,GAAGsN,MAAM,CAACnF,YAAP,CAAoB,UAApB,CAAT;MACA,IAAI5D,IAAI,GAAG,KAAK6X,OAAL,CAAa9O,MAAb,EAAqB6O,MAArB,CAAX;MACA,IAAIE,KAAK,GAAGznB,OAAO,CAAC0Y,MAAM,CAACgP,UAAR,EAAoB,MAAM/lB,QAA1B,CAAnB;MACA,IAAIgmB,GAAG,GAAGF,KAAK,GAAGA,KAAK,CAAClU,YAAN,CAAmB,UAAnB,CAAH,GAAoC,IAAnD;MACA,IAAIsB,QAAQ,GAAG6D,MAAM,CAAC5M,SAAP,CAAiB6I,QAAjB,CAA0B1S,MAA1B,CAAf;MACA,IAAI6S,QAAQ,GAAI4D,MAAM,CAACnF,YAAP,CAAoB,eAApB,MAAyC,MAA1C,GAAoD,IAApD,GAA2D,KAA1E;MACA,IAAI1B,WAAW,GAAG6G,MAAM,CAACnF,YAAP,CAAoB,eAApB,MAAyC,IAAzC,GAAgD,IAAhD,GAAuD,CAACpT,MAAM,CAAC,MAAMuB,UAAP,EAAmBgX,MAAnB,CAAN,IAAoCvY,MAAM,CAAC,MAAMsB,WAAP,EAAoBiX,MAApB,CAA3C,KAA2E,IAA3E,GAAkF,IAAlF,GAAyF,KAAlK;MACA,IAAIyB,OAAO,GAAG,IAAd;;MACA,IAAI,KAAK9I,YAAT,EAAuB;QACnB8I,OAAO,GAAGha,MAAM,CAAC,MAAM0D,YAAP,EAAqB6U,MAArB,CAAN,CAAmCnF,YAAnC,CAAgD,cAAhD,CAAV;MACH;;MACD,OAAO;QACHnI,EAAE,EAAEA,EADD;QACKuE,IAAI,EAAEA,IADX;QACiBC,QAAQ,EAAE+X,GAD3B;QACgC9S,QAAQ,EAAEA,QAD1C;QACoDC,QAAQ,EAAEA,QAD9D;QAEHrD,SAAS,EAAE0I,OAFR;QAEiBtI,WAAW,EAAEA;MAF9B,CAAP;IAIH;;IACD,OAAO;MAAEzG,EAAE,EAAE,EAAN;MAAUuE,IAAI,EAAE,EAAhB;MAAoBC,QAAQ,EAAE,EAA9B;MAAkCiF,QAAQ,EAAE,KAA5C;MAAmDC,QAAQ,EAAE,KAA7D;MAAoErD,SAAS,EAAE,EAA/E;MAAmFI,WAAW,EAAE;IAAhG,CAAP;EACH,CApBD;;EAqBAtM,QAAQ,CAAC3H,SAAT,CAAmB4pB,OAAnB,GAA6B,UAAU9O,MAAV,EAAkB6O,MAAlB,EAA0B;IACnD,IAAIA,MAAJ,EAAY;MACR,IAAIpS,QAAQ,GAAG,KAAKgL,aAAL,CAAmBzH,MAAM,CAACnF,YAAP,CAAoB,UAApB,CAAnB,CAAf;MACA,IAAIjD,KAAK,GAAGR,UAAU,CAAC4I,MAAM,CAACnF,YAAP,CAAoB,YAApB,CAAD,CAAtB;MACA,IAAIqU,UAAU,GAAG,KAAKvH,SAAL,CAAe,KAAK9W,MAApB,EAA4B+G,KAA5B,EAAmC,CAAnC,CAAjB;MACA,OAAO3P,QAAQ,CAACinB,UAAU,CAACjY,IAAZ,EAAkBwF,QAAlB,CAAf;IACH;;IACD,OAAOhV,MAAM,CAAC,MAAMyB,QAAP,EAAiB8W,MAAjB,CAAN,CAA+BmP,WAAtC;EACH,CARD;;EASAtiB,QAAQ,CAAC3H,SAAT,CAAmB+gB,cAAnB,GAAoC,UAAUjG,MAAV,EAAkBzP,CAAlB,EAAqB;IACrD,IAAIkM,QAAQ,GAAG,KAAKyD,WAAL,CAAiBF,MAAjB,CAAf;IACA,OAAO;MAAEmB,MAAM,EAAE,KAAV;MAAiBO,YAAY,EAAE3Z,KAAK,CAACwI,CAAD,CAAL,GAAW,KAAX,GAAmB,IAAlD;MAAwDoK,IAAI,EAAEqF,MAA9D;MAAsEvD,QAAQ,EAAEA,QAAhF;MAA0FgH,KAAK,EAAElT;IAAjG,CAAP;EACH,CAHD;;EAIA1D,QAAQ,CAAC3H,SAAT,CAAmBqX,kBAAnB,GAAwC,UAAUvB,IAAV,EAAgBqB,OAAhB,EAAyBC,MAAzB,EAAiC;IACrE,IAAI8S,OAAO,GAAG,KAAKnc,cAAL,CAAoB+H,IAApB,EAA0B,IAA1B,EAAgC,iBAAiBsB,MAAjD,EAAyD,KAAKvP,OAAL,CAAa2F,EAAb,GAAkB,cAA3E,EAA2F,KAAK2c,gBAAhG,EAAkH5a,SAAlH,EAA6H4H,OAA7H,EAAsI,KAAKiT,IAA3I,CAAd;;IACA,IAAIF,OAAJ,EAAa;MACTA,OAAO,GAAGvqB,KAAK,CAACK,SAAN,CAAgBqqB,KAAhB,CAAsBtiB,IAAtB,CAA2BmiB,OAA3B,CAAV;MACAxnB,MAAM,CAACwnB,OAAD,EAAU/S,OAAV,CAAN;IACH;EACJ,CAND;;EAOAxP,QAAQ,CAAC3H,SAAT,CAAmBsqB,eAAnB,GAAqC,UAAUhQ,KAAV,EAAiB;IAClD,KAAKiQ,aAAL,CAAmB,CAAC,iBAAiBjQ,KAAK,CAAC3E,YAAN,CAAmB,UAAnB,CAAlB,CAAnB;EACH,CAFD;;EAGAhO,QAAQ,CAAC3H,SAAT,CAAmBwqB,aAAnB,GAAmC,YAAY;IAC3C,KAAK9e,cAAL,CAAoB,KAAKC,MAAzB;;IACA,IAAIzK,OAAO,CAAC8b,IAAZ,EAAkB;MACd,KAAKnK,SAAL,GAAiB,KAAKhL,OAAL,CAAauH,aAAb,CAA2B,qBAA3B,CAAjB;MACA,KAAKyD,SAAL,CAAe4E,aAAf,CAA6BgT,WAA7B,CAAyC,KAAK5X,SAA9C;IACH,CAHD,MAIK;MACD,KAAKhL,OAAL,CAAawH,SAAb,GAAyB,EAAzB;IACH;;IACD,IAAI,CAACxM,KAAK,CAAC,KAAKkL,cAAN,CAAV,EAAiC;MAC7B,KAAKwc,aAAL;IACH;;IACD,KAAKte,aAAL;IACA,KAAKE,aAAL,CAAmB;MAAED,aAAa,EAAE,EAAjB;MAAqBE,YAAY,EAAE,EAAnC;MAAuCC,aAAa,EAAE;IAAtD,CAAnB,EAA+E,IAA/E;IACA,KAAKnE,cAAL,GAAsB,EAAtB;IACA,KAAK4D,QAAL,GAAgB,KAAhB;IACA,KAAKc,cAAL,CAAoB,IAApB;EACH,CAjBD;;EAkBAjF,QAAQ,CAAC3H,SAAT,CAAmByN,WAAnB,GAAiC,UAAUid,QAAV,EAAoBC,QAApB,EAA8B;IAC3D,IAAI,CAAC9nB,KAAK,CAAC6nB,QAAD,CAAN,IAAoBA,QAAQ,KAAK,EAArC,EAAyC;MACrCvoB,WAAW,CAAC,CAAC,KAAK0F,OAAN,CAAD,EAAiB6iB,QAAQ,CAACE,KAAT,CAAe,GAAf,CAAjB,CAAX;IACH;;IACD,IAAI,CAAC/nB,KAAK,CAAC8nB,QAAD,CAAN,IAAoBA,QAAQ,KAAK,EAArC,EAAyC;MACrCzoB,QAAQ,CAAC,CAAC,KAAK2F,OAAN,CAAD,EAAiB8iB,QAAQ,CAACC,KAAT,CAAe,GAAf,CAAjB,CAAR;IACH;EACJ,CAPD;;EAQAjjB,QAAQ,CAAC3H,SAAT,CAAmB6qB,cAAnB,GAAoC,UAAUxf,CAAV,EAAa;IAC7C,IAAIjL,MAAM,GAAGiL,CAAC,CAACjL,MAAf;;IACA,IAAI,CAACA,MAAD,IAAWA,MAAM,CAAC8N,SAAP,CAAiB6I,QAAjB,CAA0BpT,IAA1B,CAAX,IAA8CvD,MAAM,CAAC8N,SAAP,CAAiB6I,QAAjB,CAA0B5S,UAA1B,CAA9C,IACA/D,MAAM,CAAC8N,SAAP,CAAiB6I,QAAjB,CAA0BhT,QAA1B,CADA,IACuC3D,MAAM,CAAC8N,SAAP,CAAiB6I,QAAjB,CAA0BvS,IAA1B,CADvC,IAEApE,MAAM,CAAC8N,SAAP,CAAiB6I,QAAjB,CAA0BrS,KAA1B,CAFA,IAEoCtE,MAAM,CAAC8N,SAAP,CAAiB6I,QAAjB,CAA0BpS,UAA1B,CAFxC,EAE+E;MAC3E;IACH,CAJD,MAKK;MACD,IAAI2V,KAAK,GAAGlY,OAAO,CAAChC,MAAD,EAAS,MAAM2D,QAAf,CAAnB;MACA,KAAK8hB,aAAL,CAAmBvL,KAAnB,EAA0BjP,CAA1B;IACH;EACJ,CAXD;;EAYA1D,QAAQ,CAAC3H,SAAT,CAAmB6lB,aAAnB,GAAmC,UAAUvL,KAAV,EAAiBjP,CAAjB,EAAoB;IACnD,IAAIvD,KAAK,GAAG,IAAZ;;IACA,IAAIgjB,SAAS,GAAGvoB,MAAM,CAAC,MAAMqC,SAAP,EAAkB,KAAKiD,OAAvB,CAAtB;;IACA,IAAIijB,SAAJ,EAAe;MACXA,SAAS,CAAC1F,IAAV;IACH;;IACD,IAAIjO,OAAO,GAAG5U,MAAM,CAAC,MAAMyB,QAAP,EAAiBsW,KAAjB,CAApB;IACA,KAAKyQ,aAAL,CAAmBzQ,KAAnB;IACA,IAAI0Q,QAAQ,GAAG,KAAKjY,aAAL,CAAmB,OAAnB,EAA4B;MAAEkY,SAAS,EAAErmB,SAAb;MAAwBsmB,KAAK,EAAE;QAAEla,KAAK,EAAE,KAAKsU;MAAd;IAA/B,CAA5B,CAAf;IACA,IAAIhO,SAAS,GAAG,KAAK6T,YAAL,CAAkB7Q,KAAlB,EAAyB,IAAzB,EAA+B0Q,QAAQ,CAACI,SAAxC,CAAhB;IACA,KAAK7a,OAAL,CAAa,aAAb,EAA4B+G,SAA5B,EAAuC,UAAU0E,YAAV,EAAwB;MAC3D,IAAI,CAACA,YAAY,CAACC,MAAlB,EAA0B;QACtB,IAAIoP,QAAQ,GAAGlU,OAAO,CAACmU,WAAR,GAAsB,CAArC;QACA,IAAIjO,KAAK,GAAG,WAAWgO,QAAX,GAAsB,IAAlC;QACAnpB,QAAQ,CAAC,CAACoY,KAAD,CAAD,EAAUzV,OAAV,CAAR;;QACA,IAAI,CAAChC,KAAK,CAACiF,KAAK,CAACiG,cAAP,CAAV,EAAkC;UAC9BjG,KAAK,CAACwiB,eAAN,CAAsBhQ,KAAtB;QACH;;QACDnD,OAAO,CAAC9H,SAAR,GAAoBiI,SAAS,CAACiU,SAA9B;QACA,IAAIpG,MAAM,GAAG5iB,MAAM,CAAC,MAAMqC,SAAP,EAAkBuS,OAAlB,CAAnB;QACArP,KAAK,CAAC0jB,QAAN,GAAiBjoB,KAAK,CAACkoB,WAAN,CAAkB;UAC/B5jB,OAAO,EAAEsd,MADsB;UAE/BuG,UAAU,EAAE;YACRtd,SAAS,EAAEtG,KAAK,CAACsG;UADT;QAFmB,CAAlB,EAKdtG,KAAK,CAACiL,aALQ,CAAjB;;QAMAjL,KAAK,CAAC0jB,QAAN,CAAeG,SAAf,CAAyBpe,YAAzB,CAAsC,OAAtC,EAA+C8P,KAA/C;;QACA8H,MAAM,CAACE,KAAP;QACA,IAAIuG,QAAQ,GAAGzG,MAAf;QACAyG,QAAQ,CAACC,iBAAT,CAA2B,CAA3B,EAA8BD,QAAQ,CAAC5a,KAAT,CAAevQ,MAA7C;;QACAqH,KAAK,CAACgkB,eAAN,CAAsB3G,MAAtB;MACH;IACJ,CAtBD;EAuBH,CAjCD;;EAkCAxd,QAAQ,CAAC3H,SAAT,CAAmB+qB,aAAnB,GAAmC,UAAUzQ,KAAV,EAAiB;IAChD,IAAI9M,EAAE,GAAG8M,KAAK,CAAC3E,YAAN,CAAmB,UAAnB,CAAT;IACA,KAAKoW,QAAL,GAAgB,KAAKxJ,aAAL,CAAmB/U,EAAnB,CAAhB;IACA,IAAIkF,KAAK,GAAGR,UAAU,CAACoI,KAAK,CAAC3E,YAAN,CAAmB,YAAnB,CAAD,CAAtB;IACA,KAAKqW,UAAL,GAAkB,KAAKvJ,SAAL,CAAe,KAAK9W,MAApB,EAA4B+G,KAA5B,EAAmC,CAAnC,CAAlB;IACA,KAAK4S,OAAL,GAAeviB,QAAQ,CAAC,KAAKipB,UAAL,CAAgBja,IAAjB,EAAuB,KAAKga,QAA5B,CAAvB;EACH,CAND;;EAOApkB,QAAQ,CAAC3H,SAAT,CAAmBisB,aAAnB,GAAmC,UAAU5gB,CAAV,EAAa;IAC5C,IAAI,CAAC9I,MAAM,CAAC,MAAMqC,SAAP,EAAkB,KAAKiD,OAAvB,CAAX,EAA4C;MACxC;IACH;;IACD,IAAIzH,MAAM,GAAGiL,CAAC,CAACjL,MAAf;IACA,IAAI8rB,OAAO,GAAG9rB,MAAM,CAAC4Q,KAArB;IACA,IAAImb,MAAM,GAAG/pB,OAAO,CAAChC,MAAD,EAAS,MAAM4D,QAAf,CAApB;IACA,IAAIsW,KAAK,GAAGlY,OAAO,CAAChC,MAAD,EAAS,MAAM2D,QAAf,CAAnB;IACAzB,MAAM,CAAC,KAAKkpB,QAAL,CAAcG,SAAf,CAAN;;IACA,IAAI,KAAKhgB,MAAL,CAAY8D,UAAZ,YAAkC9M,WAAlC,IAAiD,CAAC,KAAK+M,SAA3D,EAAsE;MAClE,KAAK0c,aAAL,CAAmB,QAAnB,EAA6B,IAA7B,EAAmC9R,KAAnC,EAA0C4R,OAA1C,EAAmD,IAAnD,EAAyD,IAAzD,EAA+D,IAA/D;IACH,CAFD,MAGK;MACD,KAAKG,aAAL,CAAmB/R,KAAnB,EAA0B6R,MAA1B,EAAkCD,OAAlC,EAA2C,IAA3C;IACH;EACJ,CAfD;;EAgBAvkB,QAAQ,CAAC3H,SAAT,CAAmBqsB,aAAnB,GAAmC,UAAU/R,KAAV,EAAiB6R,MAAjB,EAAyBD,OAAzB,EAAkCI,OAAlC,EAA2C;IAC1E,IAAIxkB,KAAK,GAAG,IAAZ;;IACA,IAAIwP,SAAS,GAAG,KAAK6T,YAAL,CAAkB7Q,KAAlB,EAAyB4R,OAAzB,EAAkC,IAAlC,CAAhB;IACA,KAAK3b,OAAL,CAAa,YAAb,EAA2B+G,SAA3B,EAAsC,UAAU0E,YAAV,EAAwB;MAC1DkQ,OAAO,GAAGlQ,YAAY,CAACC,MAAb,GAAsBD,YAAY,CAACsJ,OAAnC,GAA6CtJ,YAAY,CAACkQ,OAApE;;MACApkB,KAAK,CAACykB,UAAN,CAAiBjS,KAAjB,EAAwB6R,MAAxB,EAAgCD,OAAhC,EAAyCI,OAAzC;;MACA,IAAItQ,YAAY,CAACsJ,OAAb,KAAyB4G,OAA7B,EAAsC;QAClCpkB,KAAK,CAAC0kB,YAAN;MACH;IACJ,CAND;EAOH,CAVD;;EAWA7kB,QAAQ,CAAC3H,SAAT,CAAmBusB,UAAnB,GAAgC,UAAUjS,KAAV,EAAiB6R,MAAjB,EAAyBD,OAAzB,EAAkCI,OAAlC,EAA2C;IACvE,IAAIG,OAAO,GAAGzpB,QAAQ,CAAC,KAAKgpB,UAAL,CAAgBja,IAAjB,EAAuBma,OAAvB,EAAgC,KAAKH,QAArC,CAAtB;;IACA,IAAI,CAAClpB,KAAK,CAAC,KAAKkL,cAAN,CAAV,EAAiC;MAC7Boe,MAAM,CAACO,SAAP,GAAmB,EAAnB;MACA,IAAItV,MAAM,GAAGkD,KAAK,CAAC3E,YAAN,CAAmB,UAAnB,CAAb;MACA,KAAK0B,kBAAL,CAAwBoV,OAAxB,EAAiCN,MAAjC,EAAyC/U,MAAzC;MACA,KAAKyF,oBAAL;IACH,CALD,MAMK;MACDsP,MAAM,CAACO,SAAP,GAAmBR,OAAnB;IACH;;IACD,IAAII,OAAJ,EAAa;MACTnqB,WAAW,CAAC,CAACmY,KAAD,CAAD,EAAUzV,OAAV,CAAX;MACAsnB,MAAM,CAAC9G,KAAP;IACH;;IACD,IAAI,KAAK1I,aAAT,EAAwB;MACpB,KAAKQ,aAAL,CAAmB7C,KAAnB;IACH;EACJ,CAlBD;;EAmBA3S,QAAQ,CAAC3H,SAAT,CAAmBiC,UAAnB,GAAgC,UAAU+X,GAAV,EAAe;IAC3C,IAAInX,KAAK,CAACmX,GAAD,CAAT,EAAgB;MACZ,OAAO,IAAP;IACH,CAFD,MAGK,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;MAC9B,OAAO,KAAKnS,OAAL,CAAauH,aAAb,CAA2B,gBAAgB4K,GAAhB,GAAsB,IAAjD,CAAP;IACH,CAFI,MAGA,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;MAC9B,OAAO/X,UAAU,CAAC+X,GAAD,CAAjB;IACH,CAFI,MAGA;MACD,OAAO,IAAP;IACH;EACJ,CAbD;;EAcArS,QAAQ,CAAC3H,SAAT,CAAmBglB,KAAnB,GAA2B,UAAUhL,GAAV,EAAe;IACtC,IAAInX,KAAK,CAACmX,GAAD,CAAT,EAAgB;MACZ,OAAO,IAAP;IACH,CAFD,MAGK,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;MAC9B,OAAOA,GAAP;IACH,CAFI,MAGA,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;MAC9B,OAAQ/X,UAAU,CAAC+X,GAAD,CAAX,CAAkBrE,YAAlB,CAA+B,UAA/B,CAAP;IACH,CAFI,MAGA;MACD,OAAO,IAAP;IACH;EACJ,CAbD;;EAcAhO,QAAQ,CAAC3H,SAAT,CAAmBmrB,YAAnB,GAAkC,UAAU7Q,KAAV,EAAiB4R,OAAjB,EAA0B/G,MAA1B,EAAkC;IAChE,IAAIrP,IAAI,GAAG,KAAKkF,WAAL,CAAiBV,KAAjB,CAAX;IACA,OAAO;MAAE2B,MAAM,EAAE,KAAV;MAAiBiQ,OAAO,EAAEA,OAA1B;MAAmCzW,IAAI,EAAE6E,KAAzC;MAAgD/C,QAAQ,EAAEzB,IAA1D;MAAgEwP,OAAO,EAAE,KAAKA,OAA9E;MAAuFiG,SAAS,EAAEpG;IAAlG,CAAP;EACH,CAHD;;EAIAxd,QAAQ,CAAC3H,SAAT,CAAmBuiB,aAAnB,GAAmC,UAAU/U,EAAV,EAAc;IAC7C,IAAI2H,UAAJ;;IACA,IAAItS,KAAK,CAAC2K,EAAD,CAAT,EAAe;MACX,OAAO2H,UAAP;IACH,CAFD,MAGK,IAAI,KAAKhD,QAAL,KAAkB,CAAtB,EAAyB;MAC1B,KAAK,IAAIrR,CAAC,GAAG,CAAR,EAAWmiB,MAAM,GAAG,KAAKlT,QAAL,CAActP,MAAvC,EAA+CK,CAAC,GAAGmiB,MAAnD,EAA2DniB,CAAC,EAA5D,EAAgE;QAC5D,IAAIsW,MAAM,GAAGrU,QAAQ,CAAC,KAAK4I,MAAL,CAAY6B,EAAb,EAAiB,KAAKuC,QAAL,CAAcjP,CAAd,CAAjB,CAArB;;QACA,IAAI,CAAC+B,KAAK,CAAC,KAAKkN,QAAL,CAAcjP,CAAd,CAAD,CAAN,IAA4B,CAAC+B,KAAK,CAACuU,MAAD,CAAlC,IAA8CA,MAAM,CAACrD,QAAP,OAAsBvG,EAAxE,EAA4E;UACxE,OAAO,KAAKuC,QAAL,CAAcjP,CAAd,CAAP;QACH;MACJ;IACJ,CAPI,MAQA;MACD,OAAO,KAAK6rB,kBAAL,CAAwB,KAAK5c,QAA7B,EAAuC,KAAKpE,MAA5C,EAAoD6B,EAApD,CAAP;IACH;;IACD,OAAO2H,UAAP;EACH,CAjBD;;EAkBAxN,QAAQ,CAAC3H,SAAT,CAAmB2sB,kBAAnB,GAAwC,UAAU9J,GAAV,EAAe9R,MAAf,EAAuBvD,EAAvB,EAA2B;IAC/D,IAAIof,OAAJ;;IACA,IAAI/pB,KAAK,CAACggB,GAAD,CAAT,EAAgB;MACZ,OAAO+J,OAAP;IACH;;IACD,KAAK,IAAI9rB,CAAC,GAAG,CAAR,EAAWmiB,MAAM,GAAGJ,GAAG,CAACpiB,MAA7B,EAAqCK,CAAC,GAAGmiB,MAAzC,EAAiDniB,CAAC,EAAlD,EAAsD;MAClD,IAAIsW,MAAM,GAAGrU,QAAQ,CAACgO,MAAM,CAACvD,EAAR,EAAYqV,GAAG,CAAC/hB,CAAD,CAAf,CAArB;;MACA,IAAI+hB,GAAG,CAAC/hB,CAAD,CAAH,IAAUsW,MAAV,IAAoBA,MAAM,CAACrD,QAAP,OAAsBvG,EAA9C,EAAkD;QAC9C,OAAOqV,GAAG,CAAC/hB,CAAD,CAAV;MACH,CAFD,MAGK,IAAI,OAAOiQ,MAAM,CAACqD,KAAd,KAAwB,QAAxB,IAAoC,CAACvR,KAAK,CAACE,QAAQ,CAACgO,MAAM,CAACqD,KAAR,EAAeyO,GAAG,CAAC/hB,CAAD,CAAlB,CAAT,CAA9C,EAAgF;QACjF,IAAIqT,SAAS,GAAGpR,QAAQ,CAACgO,MAAM,CAACqD,KAAR,EAAeyO,GAAG,CAAC/hB,CAAD,CAAlB,CAAxB;QACA8rB,OAAO,GAAG,KAAKD,kBAAL,CAAwBxY,SAAxB,EAAmC,KAAKyO,cAAL,CAAoB7R,MAApB,CAAnC,EAAgEvD,EAAhE,CAAV;;QACA,IAAIof,OAAO,KAAKrd,SAAhB,EAA2B;UACvB;QACH;MACJ,CANI,MAOA,IAAI,KAAK5D,MAAL,CAAY8D,UAAZ,YAAkC9M,WAAlC,IAAiD,CAACE,KAAK,CAACE,QAAQ,CAAC,OAAD,EAAU8f,GAAG,CAAC/hB,CAAD,CAAb,CAAT,CAA3D,EAAwF;QACzF,IAAIsT,KAAK,GAAG,OAAZ;QACAwY,OAAO,GAAG,KAAKD,kBAAL,CAAwB5pB,QAAQ,CAACqR,KAAD,EAAQyO,GAAG,CAAC/hB,CAAD,CAAX,CAAhC,EAAiD,KAAK8hB,cAAL,CAAoB7R,MAApB,CAAjD,EAA8EvD,EAA9E,CAAV;;QACA,IAAIof,OAAO,KAAKrd,SAAhB,EAA2B;UACvB;QACH;MACJ;IACJ;;IACD,OAAOqd,OAAP;EACH,CA1BD;;EA2BAjlB,QAAQ,CAAC3H,SAAT,CAAmBmN,cAAnB,GAAoC,UAAU0f,MAAV,EAAkB;IAClD,IAAIA,MAAM,IAAI,CAAC,KAAK9f,QAApB,EAA8B;MAC1B,KAAK+f,cAAL;IACH,CAFD,MAGK;MACD,KAAKC,WAAL;IACH;EACJ,CAPD;;EAQAplB,QAAQ,CAAC3H,SAAT,CAAmB8sB,cAAnB,GAAoC,YAAY;IAC5C,IAAIhlB,KAAK,GAAG,IAAZ;;IACA,IAAIklB,UAAJ;IACA,IAAIlP,KAAK,GAAG,IAAZ;IACA,KAAKmP,OAAL,GAAe,IAAIlrB,SAAJ,CAAc,KAAK8F,OAAnB,EAA4B;MACvCqlB,cAAc,EAAE,IADuB;MACjBC,gBAAgB,EAAE,IADD;MAEvCC,QAAQ,EAAE,KAAKA,QAFwB;MAGvCC,UAAU,EAAE,MAAM5oB,QAHqB;MAIvC6oB,MAAM,EAAE,UAAUjiB,CAAV,EAAa;QACjBvD,KAAK,CAACulB,UAAN,GAAmBhiB,CAAC,CAACkiB,MAAF,CAASntB,MAA5B;QACA,IAAIotB,QAAQ,GAAGprB,OAAO,CAAC0F,KAAK,CAACulB,UAAP,EAAmB,MAAM1pB,IAAzB,CAAtB;QACA,IAAI8pB,QAAQ,GAAGrrB,OAAO,CAAC0F,KAAK,CAACulB,UAAP,EAAmB,MAAM5oB,QAAzB,CAAtB;QACAqD,KAAK,CAAC4lB,MAAN,GAAetrB,OAAO,CAAC0F,KAAK,CAACulB,UAAP,EAAmB,MAAMtpB,QAAzB,CAAtB;;QACA,IAAI+D,KAAK,CAAC+F,aAAN,IAAuB,CAAC4f,QAAxB,IAAoC3lB,KAAK,CAACulB,UAAN,CAAiBnf,SAAjB,CAA2B6I,QAA3B,CAAoCtR,OAApC,CAAxC,EAAsF;UAClFgoB,QAAQ,GAAG3lB,KAAK,CAACulB,UAAN,CAAiBjQ,kBAA5B;QACH;;QACD,IAAI,CAACtV,KAAK,CAACulB,UAAP,IAAqB,CAAChiB,CAAC,CAACxD,OAAF,CAAU8lB,UAAV,CAAqBH,QAArB,CAAtB,IAAwD,CAACC,QAAzD,IACA3lB,KAAK,CAACulB,UAAN,CAAiBnf,SAAjB,CAA2B6I,QAA3B,CAAoCpT,IAApC,CADA,IAC6CmE,KAAK,CAACulB,UAAN,CAAiBnf,SAAjB,CAA2B6I,QAA3B,CAAoC5S,UAApC,CAD7C,IAEA2D,KAAK,CAACulB,UAAN,CAAiBnf,SAAjB,CAA2B6I,QAA3B,CAAoChT,QAApC,CAFA,IAEiD+D,KAAK,CAAC4lB,MAAN,CAAaxf,SAAb,CAAuB6I,QAAvB,CAAgC,WAAhC,CAFrD,EAEmG;UAC/F,OAAO,KAAP;QACH;;QACD,IAAI6W,QAAQ,GAAIH,QAAQ,CAACI,SAAT,CAAmB,IAAnB,CAAhB;;QACA,IAAIhrB,KAAK,CAACN,MAAM,CAAC,SAASiC,IAAV,EAAgBopB,QAAhB,CAAP,CAAT,EAA4C;UACxC,IAAIvX,IAAI,GAAGyH,KAAK,CAAC/K,aAAN,CAAoB,KAApB,EAA2B;YAAEkY,SAAS,EAAEzmB,IAAI,GAAG,GAAP,GAAaV;UAA1B,CAA3B,CAAX;UACA8pB,QAAQ,CAACrX,YAAT,CAAsBF,IAAtB,EAA4BuX,QAAQ,CAACE,QAAT,CAAkB,CAAlB,CAA5B;QACH;;QACD,IAAIpgB,QAAQ,GAAG1I,QAAQ,GAAG,GAAX,GAAiBrB,IAAjB,GAAwB,GAAxB,GAA8BmE,KAAK,CAAC4F,QAApC,GAA+C,GAA/C,IAAsD5F,KAAK,CAACsG,SAAN,GAAkBtJ,GAAlB,GAAwB,EAA9E,CAAf;QACAkoB,UAAU,GAAGlP,KAAK,CAAC/K,aAAN,CAAoB,KAApB,EAA2B;UAAEkY,SAAS,EAAEvd;QAAb,CAA3B,CAAb;QACAsf,UAAU,CAACha,WAAX,CAAuB4a,QAAvB;QACA,IAAIG,IAAI,GAAGjmB,KAAK,CAACoE,aAAN,CAAoBzL,MAA/B;;QACA,IAAIstB,IAAI,GAAG,CAAP,IAAYjmB,KAAK,CAACgP,mBAAlB,IAAyChP,KAAK,CAAC4lB,MAAN,CAAaxf,SAAb,CAAuB6I,QAAvB,CAAgC1S,MAAhC,CAA7C,EAAsF;UAClF,IAAI2pB,KAAK,GAAGlQ,KAAK,CAAC/K,aAAN,CAAoB,MAApB,EAA4B;YAAEkY,SAAS,EAAEnlB,SAAb;YAAwBuJ,SAAS,EAAE,KAAK0e;UAAxC,CAA5B,CAAZ;UACAf,UAAU,CAACha,WAAX,CAAuBgb,KAAvB;QACH;;QACD9e,QAAQ,CAAC+e,IAAT,CAAcjb,WAAd,CAA0Bga,UAA1B;QACA9d,QAAQ,CAAC+e,IAAT,CAAc5Q,KAAd,CAAoB6Q,MAApB,GAA6B,EAA7B;QACApmB,KAAK,CAACqmB,QAAN,GAAiBrmB,KAAK,CAACkT,WAAN,CAAkBlT,KAAK,CAAC4lB,MAAxB,CAAjB;QACA,OAAOV,UAAP;MACH,CAlCsC;MAmCvCoB,SAAS,EAAE,UAAU/iB,CAAV,EAAa;QACpBnJ,QAAQ,CAAC,CAAC4F,KAAK,CAACD,OAAP,CAAD,EAAkB3C,QAAlB,CAAR;QACA,IAAImpB,QAAQ,GAAGjsB,OAAO,CAACiJ,CAAC,CAACjL,MAAH,EAAW,cAAX,CAAtB;QACA,IAAIsS,KAAJ;;QACA,IAAI2b,QAAJ,EAAc;UACV3b,KAAK,GAAG4b,QAAQ,CAACD,QAAQ,CAAC1Y,YAAT,CAAsB,YAAtB,CAAD,EAAsC,EAAtC,CAAhB;QACH;;QACD,IAAI2B,SAAS,GAAGxP,KAAK,CAACymB,YAAN,CAAmBljB,CAAC,CAACkT,KAArB,EAA4BzW,KAA5B,EAAmC,IAAnC,EAAyCuD,CAAC,CAACjL,MAA3C,EAAmD,IAAnD,EAAyD4sB,UAAzD,EAAqEta,KAArE,CAAhB;;QACA,IAAI4E,SAAS,CAACkX,WAAV,CAAsBtgB,SAAtB,CAAgC6I,QAAhC,CAAyClS,OAAzC,CAAJ,EAAuD;UACnDiD,KAAK,CAACmlB,OAAN,CAAcwB,UAAd,CAAyBpjB,CAAC,CAACkT,KAA3B;;UACAzW,KAAK,CAAC4mB,gBAAN,CAAuB1B,UAAvB;QACH,CAHD,MAIK;UACDllB,KAAK,CAACyI,OAAN,CAAc,eAAd,EAA+B+G,SAA/B,EAA0C,UAAU0E,YAAV,EAAwB;YAC9D,IAAIA,YAAY,CAACC,MAAjB,EAAyB;cACrBnU,KAAK,CAACmlB,OAAN,CAAcwB,UAAd,CAAyBpjB,CAAC,CAACkT,KAA3B;;cACAzW,KAAK,CAAC4mB,gBAAN,CAAuB1B,UAAvB;YACH,CAHD,MAIK;cACDllB,KAAK,CAACmB,eAAN,GAAwB,IAAxB;YACH;UACJ,CARD;QASH;MACJ,CA1DsC;MA2DvC0lB,IAAI,EAAE,UAAUtjB,CAAV,EAAa;QACfvD,KAAK,CAACmlB,OAAN,CAAc9gB,aAAd,CAA4B;UAAEyiB,QAAQ,EAAE;YAAErI,GAAG,EAAG,CAAC1jB,KAAK,CAACwI,CAAC,CAACkT,KAAF,CAAQsQ,aAAT,CAAN,IAAiC3tB,OAAO,CAACwjB,QAA1C,GAAsD,EAAtD,GAA2D,CAAC;UAAnE;QAAZ,CAA5B;;QACA5c,KAAK,CAACgnB,UAAN,CAAiBzjB,CAAjB,EAAoB2hB,UAApB;MACH,CA9DsC;MA+DvC+B,QAAQ,EAAE,UAAU1jB,CAAV,EAAa;QACnBlJ,WAAW,CAAC,CAAC2F,KAAK,CAACD,OAAP,CAAD,EAAkB3C,QAAlB,CAAX;;QACA4C,KAAK,CAACknB,gBAAN;;QACA,IAAIC,UAAU,GAAG5jB,CAAC,CAACjL,MAAnB;QACA,IAAI8uB,mBAAmB,GAAG,KAA1B;QACA,IAAIC,QAAQ,GAAI/sB,OAAO,CAAC6sB,UAAD,EAAa,MAAMhqB,SAAnB,CAAvB;QACA,IAAImqB,eAAe,GAAG,IAAtB;;QACA,IAAI,CAACH,UAAD,IAAe,CAACE,QAApB,EAA8B;UAC1B7sB,MAAM,CAAC+I,CAAC,CAACiiB,MAAH,CAAN;UACApe,QAAQ,CAAC+e,IAAT,CAAc5Q,KAAd,CAAoB6Q,MAApB,GAA6B,EAA7B;UACAkB,eAAe,GAAG,KAAlB;QACH;;QACD,IAAIf,QAAQ,GAAGjsB,OAAO,CAAC6sB,UAAD,EAAa,cAAb,CAAtB;QACA,IAAIvc,KAAJ;;QACA,IAAI2b,QAAJ,EAAc;UACV3b,KAAK,GAAG4b,QAAQ,CAACD,QAAQ,CAAC1Y,YAAT,CAAsB,YAAtB,CAAD,EAAsC,EAAtC,CAAhB;QACH;;QACD,IAAI2B,SAAS,GAAGxP,KAAK,CAACymB,YAAN,CAAmBljB,CAAC,CAACkT,KAArB,EAA4BzW,KAA5B,EAAmCmnB,UAAnC,EAA+CA,UAA/C,EAA2D,IAA3D,EAAiE5jB,CAAC,CAACiiB,MAAnE,EAA2E5a,KAA3E,CAAhB;;QACA4E,SAAS,CAAC4X,mBAAV,GAAgCA,mBAAhC;;QACApnB,KAAK,CAACyI,OAAN,CAAc,cAAd,EAA8B+G,SAA9B,EAAyC,UAAU0E,YAAV,EAAwB;UAC7DlU,KAAK,CAACunB,UAAN,GAAmBrT,YAAY,CAACsT,iBAAhC;UACAxnB,KAAK,CAACG,aAAN,GAAsB+T,YAAY,CAACkT,mBAAnC;;UACA,IAAIlT,YAAY,CAACC,MAAjB,EAAyB;YACrB,IAAI5Q,CAAC,CAACiiB,MAAF,CAASxD,UAAb,EAAyB;cACrBxnB,MAAM,CAAC+I,CAAC,CAACiiB,MAAH,CAAN;YACH;;YACDpe,QAAQ,CAAC+e,IAAT,CAAc5Q,KAAd,CAAoB6Q,MAApB,GAA6B,EAA7B;YACAkB,eAAe,GAAG,KAAlB;UACH;;UACDtnB,KAAK,CAACmB,eAAN,GAAwB,KAAxB;QACH,CAXD;MAYH;IA9FsC,CAA5B,CAAf;IAgGA,KAAKsmB,OAAL,GAAe,IAAIvtB,SAAJ,CAAc,KAAK6F,OAAnB,EAA4B;MACvC2nB,GAAG,EAAE,UAAUnkB,CAAV,EAAa;QACd,IAAI,CAACxI,KAAK,CAACwI,CAAD,CAAN,IAAa,CAACA,CAAC,CAACjL,MAAF,CAAS8N,SAAT,CAAmB6I,QAAnB,CAA4B5R,OAA5B,CAAlB,EAAwD;UACpD+J,QAAQ,CAAC+e,IAAT,CAAc5Q,KAAd,CAAoB6Q,MAApB,GAA6B,aAA7B;QACH;MACJ,CALsC;MAMvCuB,IAAI,EAAE,UAAUpkB,CAAV,EAAa;QACf6D,QAAQ,CAAC+e,IAAT,CAAc5Q,KAAd,CAAoB6Q,MAApB,GAA6B,EAA7B;MACH,CARsC;MASvCwB,IAAI,EAAE,UAAUrkB,CAAV,EAAa;QACfvD,KAAK,CAAC6nB,UAAN,CAAiBtkB,CAAjB;MACH;IAXsC,CAA5B,CAAf;EAaH,CAjHD;;EAkHA1D,QAAQ,CAAC3H,SAAT,CAAmB0uB,gBAAnB,GAAsC,UAAU1B,UAAV,EAAsB;IACxD1qB,MAAM,CAAC0qB,UAAD,CAAN;IACA7qB,WAAW,CAAC,CAAC,KAAK0F,OAAN,CAAD,EAAiB3C,QAAjB,CAAX;IACA,KAAK+D,eAAL,GAAuB,KAAvB;EACH,CAJD;;EAKAtB,QAAQ,CAAC3H,SAAT,CAAmB8uB,UAAnB,GAAgC,UAAUzjB,CAAV,EAAa2hB,UAAb,EAAyB;IACrD,IAAImC,QAAQ,GAAG/sB,OAAO,CAACiJ,CAAC,CAACjL,MAAH,EAAW,MAAM6E,SAAjB,CAAtB;IACA,IAAI2qB,QAAQ,GAAGxtB,OAAO,CAACiJ,CAAC,CAACjL,MAAH,EAAW,MAAMqE,QAAjB,CAAtB;IACA,IAAI4R,IAAI,GAAG9T,MAAM,CAAC,SAASiC,IAAV,EAAgBwoB,UAAhB,CAAjB;IACA7qB,WAAW,CAAC,CAACkU,IAAD,CAAD,EAAS,CAACjR,MAAD,EAASC,QAAT,EAAmBC,OAAnB,EAA4BC,MAA5B,CAAT,CAAX;IACA,KAAKypB,gBAAL;IACA9f,QAAQ,CAAC+e,IAAT,CAAc5Q,KAAd,CAAoB6Q,MAApB,GAA6B,EAA7B;IACA,IAAIhgB,SAAS,GAAG7C,CAAC,CAACjL,MAAF,CAAS8N,SAAzB;;IACA,IAAI,KAAKL,aAAL,IAAsB,CAAC+hB,QAAvB,IAAmC,CAAC/sB,KAAK,CAACqL,SAAD,CAAzC,IAAwDA,SAAS,CAAC6I,QAAV,CAAmBtR,OAAnB,CAA5D,EAAyF;MACrFmqB,QAAQ,GAAGvkB,CAAC,CAACjL,MAAF,CAASgd,kBAApB;IACH;;IACD,IAAI+R,QAAJ,EAAc;MACV,IAAIU,MAAM,GAAGztB,OAAO,CAACiJ,CAAC,CAACjL,MAAH,EAAW,MAAM2D,QAAjB,CAApB;MACA,IAAIgb,YAAY,GAAG3c,OAAO,CAACiJ,CAAC,CAACjL,MAAH,EAAW,MAAM6F,YAAjB,CAA1B;MACA,IAAImb,QAAQ,GAAGhf,OAAO,CAACiJ,CAAC,CAACjL,MAAH,EAAW,MAAMyD,WAAjB,CAAtB;MACA,IAAIqc,MAAM,GAAG9d,OAAO,CAACiJ,CAAC,CAACjL,MAAH,EAAW,MAAM0D,UAAjB,CAApB;;MACA,IAAI,CAACqrB,QAAQ,CAACjhB,SAAT,CAAmB6I,QAAnB,CAA4BpT,IAA5B,CAAD,IAAuCisB,QAAQ,IAC9C,CAACC,MAAM,CAAClC,UAAP,CAAkB,KAAKD,MAAvB,CAAD,IAAmC,CAAC,KAAKoC,YAAL,CAAkB,KAAKpC,MAAvB,EAA+BmC,MAA/B,CADzC,EACmF;QAC/E,IAAI,KAAKpnB,WAAL,IAAoBonB,MAAxB,EAAgC;UAC5B,IAAIE,cAAc,GAAGxtB,MAAM,CAAC,KAAKsL,aAAL,GAAqB,MAAMpI,OAA3B,GAAqC,MAAMhB,QAA5C,EAAsDorB,MAAtD,CAA3B;;UACA,IAAKxkB,CAAC,IAAK,CAAC6U,MAAD,IAAW,CAACkB,QAAlB,IAA+B/V,CAAC,CAACkT,KAAF,CAAQyR,OAAR,GAAkB,CAAjD,IAAsD,CAACjR,YAAxD,IAA4EmB,MAAM,IAAI7U,CAAC,CAACkT,KAAF,CAAQyR,OAAR,GAAkB,CAA7B,IAAoC5O,QAAQ,IAAI/V,CAAC,CAACkT,KAAF,CAAQ0R,OAAR,GAAkB,CAAjJ,EAAuJ;YACnJ,IAAIjkB,KAAK,GAAG,KAAK6B,aAAL,GAAsB,CAAtB,GAA4B,CAAxC;YACA,KAAKqiB,eAAL,CAAqBL,MAArB,EAA6BxZ,IAA7B,EAAmCrK,KAAnC;UACH,CAHD,MAIK,IAAKX,CAAC,IAAK,CAAC6U,MAAD,IAAW,CAACkB,QAAlB,IAA+B,CAACrC,YAAhC,IAAgDgR,cAAhD,IAAkE1kB,CAAC,CAACkT,KAAF,CAAQyR,OAAR,GAAkBD,cAAc,CAACxS,YAAf,GAA8B,EAAnH,IAA4H2C,MAAM,IAAI7U,CAAC,CAACkT,KAAF,CAAQyR,OAAR,GAAkB,EAA7B,IAAqC5O,QAAQ,IAAI/V,CAAC,CAACkT,KAAF,CAAQ0R,OAAR,GAAkB,EAAlM,EAAwM;YACzM,IAAIjkB,KAAK,GAAG,KAAK6B,aAAL,GAAsB,CAAtB,GAA4B,CAAxC;YACA,KAAKqiB,eAAL,CAAqBL,MAArB,EAA6BxZ,IAA7B,EAAmCrK,KAAnC;UACH,CAHI,MAIA;YACD9J,QAAQ,CAAC,CAACmU,IAAD,CAAD,EAASjR,MAAT,CAAR;UACH;QACJ,CAbD,MAcK;UACD,IAAKyqB,MAAM,IAAIxkB,CAAV,IAAgB,CAAC6U,MAAD,IAAW,CAACkB,QAA5B,IAA0C/V,CAAC,CAACkT,KAAF,CAAQyR,OAAR,GAAkB,CAA5D,IAAkE,CAACjR,YAApE,IAAwFmB,MAAM,IAAI7U,CAAC,CAACkT,KAAF,CAAQyR,OAAR,GAAkB,CAA7B,IAAoC5O,QAAQ,IAAI/V,CAAC,CAACkT,KAAF,CAAQ0R,OAAR,GAAkB,CAA7J,EAAmK;YAC/J,IAAIjkB,KAAK,GAAG,KAAK6B,aAAL,GAAsB,CAAtB,GAA4B,CAAxC;YACA,KAAKqiB,eAAL,CAAqBL,MAArB,EAA6BxZ,IAA7B,EAAmCrK,KAAnC;UACH,CAHD,MAIK,IAAK6jB,MAAM,IAAIxkB,CAAV,IAAgB,CAAC6U,MAAD,IAAW,CAACkB,QAA5B,IAA0C/V,CAAC,CAACjL,MAAF,CAASmd,YAAT,GAAwB,CAAxB,IAA6BlS,CAAC,CAACkT,KAAF,CAAQyR,OAAR,GAAmB3kB,CAAC,CAACjL,MAAF,CAASmd,YAAT,GAAwB,EAAlH,IAA0H,CAACwB,YAA5H,IAAgJmB,MAAM,IAAI7U,CAAC,CAACkT,KAAF,CAAQyR,OAAR,GAAkB,EAA7B,IAAqC5O,QAAQ,IAAI/V,CAAC,CAACkT,KAAF,CAAQ0R,OAAR,GAAkB,EAAtN,EAA6N;YAC9N,IAAIjkB,KAAK,GAAG,KAAK6B,aAAL,GAAsB,CAAtB,GAA4B,CAAxC;YACA,KAAKqiB,eAAL,CAAqBL,MAArB,EAA6BxZ,IAA7B,EAAmCrK,KAAnC;UACH,CAHI,MAIA;YACD9J,QAAQ,CAAC,CAACmU,IAAD,CAAD,EAASjR,MAAT,CAAR;UACH;QACJ;MACJ,CA7BD,MA8BK,IAAIiG,CAAC,CAACjL,MAAF,CAAS0kB,QAAT,KAAsB,IAAtB,IAA+B,CAAC+K,MAAM,CAAClC,UAAP,CAAkB,KAAKD,MAAvB,CAAD,IAAmC,CAAC,KAAKoC,YAAL,CAAkB,KAAKpC,MAAvB,EAA+BmC,MAA/B,CAAvE,EAAgH;QACjH3tB,QAAQ,CAAC,CAACmU,IAAD,CAAD,EAAShR,QAAT,CAAR;QACA,KAAK8qB,gBAAL,CAAsB9kB,CAAtB;MACH,CAHI,MAIA,IAAIA,CAAC,CAACjL,MAAF,CAAS8N,SAAT,CAAmB6I,QAAnB,CAA4B5R,OAA5B,CAAJ,EAA0C;QAC3CjD,QAAQ,CAAC,CAACmU,IAAD,CAAD,EAAShR,QAAT,CAAR;MACH,CAFI,MAGA;QACDnD,QAAQ,CAAC,CAACmU,IAAD,CAAD,EAAS/Q,OAAT,CAAR;MACH;IACJ,CA7CD,MA8CK;MACDpD,QAAQ,CAAC,CAACmU,IAAD,CAAD,EAAS9Q,MAAT,CAAR;MACA2J,QAAQ,CAAC+e,IAAT,CAAc5Q,KAAd,CAAoB6Q,MAApB,GAA6B,aAA7B;IACH;;IACD,IAAIG,QAAQ,GAAGjsB,OAAO,CAACiJ,CAAC,CAACjL,MAAH,EAAW,cAAX,CAAtB;IACA,IAAIsS,KAAJ;;IACA,IAAI2b,QAAJ,EAAc;MACV3b,KAAK,GAAG4b,QAAQ,CAACD,QAAQ,CAAC1Y,YAAT,CAAsB,YAAtB,CAAD,EAAsC,EAAtC,CAAhB;IACH;;IACD,IAAI2B,SAAS,GAAG,KAAKiX,YAAL,CAAkBljB,CAAC,CAACkT,KAApB,EAA2B,IAA3B,EAAiClT,CAAC,CAACjL,MAAnC,EAA2CiL,CAAC,CAACjL,MAA7C,EAAqD,IAArD,EAA2D4sB,UAA3D,EAAuEta,KAAvE,CAAhB;;IACA,IAAI4E,SAAS,CAAC8Y,aAAd,EAA6B;MACzBjuB,WAAW,CAAC,CAACkU,IAAD,CAAD,EAASiB,SAAS,CAAC8Y,aAAnB,CAAX;IACH;;IACD,KAAK7f,OAAL,CAAa,cAAb,EAA6B+G,SAA7B;;IACA,IAAIA,SAAS,CAAC8Y,aAAd,EAA6B;MACzBluB,QAAQ,CAAC,CAACmU,IAAD,CAAD,EAASiB,SAAS,CAAC8Y,aAAnB,CAAR;IACH;EACJ,CA1ED;;EA2EAzoB,QAAQ,CAAC3H,SAAT,CAAmBkwB,eAAnB,GAAqC,UAAUL,MAAV,EAAkBxZ,IAAlB,EAAwBrK,KAAxB,EAA+B;IAChE9J,QAAQ,CAAC,CAACmU,IAAD,CAAD,EAAShR,QAAT,CAAR;IACA,IAAIgrB,MAAM,GAAG,KAAKtd,aAAL,CAAmB,KAAnB,EAA0B;MAAEkY,SAAS,EAAE9lB;IAAb,CAA1B,CAAb;IACA0qB,MAAM,CAACtZ,YAAP,CAAoB8Z,MAApB,EAA4BR,MAAM,CAAC/B,QAAP,CAAgB9hB,KAAhB,CAA5B;EACH,CAJD;EAKA;;;EACArE,QAAQ,CAAC3H,SAAT,CAAmB2vB,UAAnB,GAAgC,UAAUtkB,CAAV,EAAa;IACzC,IAAI2kB,OAAO,GAAG3kB,CAAC,CAACkT,KAAF,CAAQyR,OAAtB;IACA,IAAIf,UAAU,GAAG5jB,CAAC,CAACjL,MAAnB;IACA,IAAI6sB,OAAJ;IACA,IAAIva,KAAJ;IACA,IAAIgd,IAAI,GAAG,KAAX;IACA,IAAIY,YAAJ;IACAA,YAAY,GAAGjlB,CAAC,CAAC8iB,QAAF,CAAWoC,SAA1B;;IACA,KAAK,IAAIzvB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwvB,YAAY,CAACE,aAAb,CAA2B/vB,MAA/C,EAAuDK,CAAC,EAAxD,EAA4D;MACxD,IAAIwvB,YAAY,CAACE,aAAb,CAA2B1vB,CAA3B,aAAyC8H,UAA7C,EAAyD;QACrDqkB,OAAO,GAAGqD,YAAY,CAACE,aAAb,CAA2B1vB,CAA3B,CAAV;QACA;MACH;IACJ;;IACD,IAAImsB,OAAO,IAAIA,OAAO,CAACI,UAAvB,EAAmC;MAC/B,IAAIA,UAAU,GAAGJ,OAAO,CAACI,UAAzB;MACA,IAAIK,MAAM,GAAItrB,OAAO,CAACirB,UAAD,EAAa,MAAMtpB,QAAnB,CAArB;MACA,IAAI8rB,MAAM,GAAIztB,OAAO,CAAC6sB,UAAD,EAAa,MAAMlrB,QAAnB,CAArB;;MACA,IAAI8rB,MAAM,IAAI,IAAV,IAAkBZ,UAAU,CAAC/gB,SAAX,CAAqB6I,QAArB,CAA8BpT,IAA9B,CAAtB,EAA2D;QACvDksB,MAAM,GAAGZ,UAAU,CAACpG,iBAApB;MACH;;MACDvmB,MAAM,CAAC+I,CAAC,CAAColB,cAAH,CAAN;MACAvhB,QAAQ,CAAC+e,IAAT,CAAc5Q,KAAd,CAAoB6Q,MAApB,GAA6B,EAA7B;;MACA,IAAI,CAAC2B,MAAD,IAAWA,MAAM,CAAClC,UAAP,CAAkBD,MAAlB,CAAX,IAAwC,KAAKoC,YAAL,CAAkBpC,MAAlB,EAA0BmC,MAA1B,CAA5C,EAA+E;QAC3E,IAAI,KAAKlkB,MAAL,CAAY8D,UAAZ,YAAkC9M,WAAlC,KAAkD,KAAtD,EAA6D;UACzD,KAAKsF,aAAL,GAAqB,KAArB;QACH;;QACD;MACH;;MACD,IAAIglB,OAAO,CAACnW,mBAAR,IAA+B4W,MAAM,CAACxf,SAAP,CAAiB6I,QAAjB,CAA0B1S,MAA1B,CAAnC,EAAsE;QAClE,IAAIkU,MAAM,GAAG/V,SAAS,CAAC,MAAM6B,MAAP,EAAe4oB,OAAO,CAACplB,OAAvB,CAAtB;;QACA,IAAIwD,CAAC,CAACjL,MAAF,CAASmd,YAAT,IAAyB,EAAzB,IAA+ByS,OAAO,GAAG3kB,CAAC,CAACjL,MAAF,CAASmd,YAAT,GAAwB,EAAjE,IAAuEyS,OAAO,GAAG,CAArF,EAAwF;UACpF,KAAK,IAAIlvB,CAAC,GAAGyX,MAAM,CAAC9X,MAAP,GAAgB,CAA7B,EAAgCK,CAAC,IAAI,CAArC,EAAwCA,CAAC,EAAzC,EAA6C;YACzC,IAAI+uB,MAAM,CAAClC,UAAP,CAAkBpV,MAAM,CAACzX,CAAD,CAAxB,KAAgC,KAAKgvB,YAAL,CAAkBvX,MAAM,CAACzX,CAAD,CAAxB,EAA6B+uB,MAA7B,CAApC,EAA0E;cACtE;YACH;;YACD,KAAKa,UAAL,CAAgBzB,UAAhB,EAA4B1W,MAAM,CAACzX,CAAD,CAAlC,EAAuC+uB,MAAvC,EAA+CxkB,CAA/C,EAAkD4hB,OAAlD,EAA2D+C,OAA3D;UACH;QACJ,CAPD,MAQK;UACD,KAAK,IAAIlvB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyX,MAAM,CAAC9X,MAA3B,EAAmCK,CAAC,EAApC,EAAwC;YACpC,IAAI+uB,MAAM,CAAClC,UAAP,CAAkBpV,MAAM,CAACzX,CAAD,CAAxB,KAAgC,KAAKgvB,YAAL,CAAkBvX,MAAM,CAACzX,CAAD,CAAxB,EAA6B+uB,MAA7B,CAApC,EAA0E;cACtE;YACH;;YACD,KAAKa,UAAL,CAAgBzB,UAAhB,EAA4B1W,MAAM,CAACzX,CAAD,CAAlC,EAAuC+uB,MAAvC,EAA+CxkB,CAA/C,EAAkD4hB,OAAlD,EAA2D+C,OAA3D;UACH;QACJ;MACJ,CAlBD,MAmBK;QACD,KAAKU,UAAL,CAAgBzB,UAAhB,EAA4BvB,MAA5B,EAAoCmC,MAApC,EAA4CxkB,CAA5C,EAA+C4hB,OAA/C,EAAwD+C,OAAxD;MACH;;MACDtd,KAAK,GAAG4b,QAAQ,CAACZ,MAAM,CAAC/X,YAAP,CAAoB,YAApB,CAAD,EAAoC,EAApC,CAAhB;MACA+Z,IAAI,GAAG,IAAP;IACH;;IACD,IAAI,KAAK/jB,MAAL,CAAY8D,UAAZ,YAAkC9M,WAAlC,KAAkD,KAAtD,EAA6D;MACzD,KAAKsF,aAAL,GAAqB,KAArB;IACH;;IACD,KAAKsI,OAAL,CAAa,aAAb,EAA4B,KAAKge,YAAL,CAAkBljB,CAAC,CAACkT,KAApB,EAA2B0O,OAA3B,EAAoCgC,UAApC,EAAgD5jB,CAAC,CAACjL,MAAlD,EAA0DiL,CAAC,CAAC8iB,QAAF,CAAWwC,cAArE,EAAqF,IAArF,EAA2Fje,KAA3F,EAAkGgd,IAAlG,CAA5B;;IACA,IAAIzC,OAAO,CAACplB,OAAR,CAAgB2F,EAAhB,KAAuB,KAAK3F,OAAL,CAAa2F,EAAxC,EAA4C;MACxCyf,OAAO,CAACT,YAAR;IACH;;IACD,KAAKA,YAAL;EACH,CA9DD;;EA+DA7kB,QAAQ,CAAC3H,SAAT,CAAmB0wB,UAAnB,GAAgC,UAAUzB,UAAV,EAAsBvB,MAAtB,EAA8BmC,MAA9B,EAAsCxkB,CAAtC,EAAyC4hB,OAAzC,EAAkD+C,OAAlD,EAA2D;IACvF,IAAIjR,YAAY,GAAG3c,OAAO,CAAC6sB,UAAD,EAAa,MAAMhpB,YAAnB,CAA1B;IACA,IAAImb,QAAQ,GAAGhf,OAAO,CAACiJ,CAAC,CAACjL,MAAH,EAAW,MAAMyD,WAAjB,CAAtB;IACA,IAAIqc,MAAM,GAAG9d,OAAO,CAACiJ,CAAC,CAACjL,MAAH,EAAW,MAAM0D,UAAjB,CAApB;;IACA,IAAI,CAAC4pB,MAAM,CAACxf,SAAP,CAAiB6I,QAAjB,CAA0B,WAA1B,CAAD,IAA2C,CAACgI,YAA5C,KAA8DmB,MAAM,IAAI7U,CAAC,CAACkT,KAAF,CAAQyR,OAAR,GAAkB,CAA7B,IAAoC5O,QAAQ,IAAI/V,CAAC,CAACkT,KAAF,CAAQ0R,OAAR,GAAkB,CAAlE,IAAyE/P,MAAM,IAAI7U,CAAC,CAACkT,KAAF,CAAQyR,OAAR,GAAkB,EAArG,IAA6G5O,QAAQ,IAAI/V,CAAC,CAACkT,KAAF,CAAQ0R,OAAR,GAAkB,EAA3I,IAAmJ,CAAC/P,MAAD,IAAW,CAACkB,QAA5N,CAAJ,EAA4O;MACxO,IAAI6N,UAAU,CAACnK,QAAX,KAAwB,IAA5B,EAAkC;QAC9B,KAAK8L,iBAAL,CAAuBlD,MAAvB,EAA+BmC,MAA/B,EAAuCxkB,CAAvC,EAA0C4hB,OAA1C;MACH,CAFD,MAGK,IAAIgC,UAAU,CAACpG,iBAAX,IAAgCoG,UAAU,CAAC/gB,SAAX,CAAqB6I,QAArB,CAA8BpT,IAA9B,CAApC,EAAyE;QAC1E,IAAIsrB,UAAU,CAACpG,iBAAX,CAA6B/D,QAA7B,KAA0C,IAA9C,EAAoD;UAChD,KAAK8L,iBAAL,CAAuBlD,MAAvB,EAA+BmC,MAA/B,EAAuCxkB,CAAvC,EAA0C4hB,OAA1C;QACH;MACJ,CAJI,MAKA,IAAKgC,UAAU,CAAC/gB,SAAX,CAAqB6I,QAArB,CAA8B,oBAA9B,CAAD,IAA0DkY,UAAU,CAAC/gB,SAAX,CAAqB6I,QAArB,CAA8B,mBAA9B,CAA9D,EAAmH;QACpH,KAAK6Z,iBAAL,CAAuBlD,MAAvB,EAA+BmC,MAA/B,EAAuCxkB,CAAvC,EAA0C4hB,OAA1C;MACH,CAFI,MAGA;QACD,KAAK4D,eAAL,CAAqBnD,MAArB,EAA6BmC,MAA7B,EAAqC5C,OAArC,EAA8C,IAA9C,EAAoD5hB,CAApD,EAAuD2kB,OAAvD;MACH;IACJ,CAfD,MAgBK;MACD,KAAKa,eAAL,CAAqBnD,MAArB,EAA6BmC,MAA7B,EAAqC5C,OAArC,EAA8C,IAA9C,EAAoD5hB,CAApD,EAAuD2kB,OAAvD,EAAgE,IAAhE;IACH;EACJ,CAvBD;;EAwBAroB,QAAQ,CAAC3H,SAAT,CAAmB4wB,iBAAnB,GAAuC,UAAUlD,MAAV,EAAkBmC,MAAlB,EAA0BxkB,CAA1B,EAA6B4hB,OAA7B,EAAsC;IACzE,IAAI6D,MAAM,GAAG1uB,OAAO,CAACytB,MAAD,EAAS,MAAM1rB,UAAf,CAApB;IACA,IAAI4sB,YAAY,GAAG3uB,OAAO,CAACsrB,MAAD,EAAS,MAAMvpB,UAAf,CAA1B;IACA,IAAI6sB,YAAY,GAAG5uB,OAAO,CAAC2uB,YAAD,EAAe,MAAMhtB,QAArB,CAA1B;IACA,IAAIktB,GAAJ;;IACA,IAAI5lB,CAAC,CAACjL,MAAF,CAASmd,YAAT,GAAwB,CAAxB,IAA6BlS,CAAC,CAACkT,KAAF,CAAQyR,OAAR,GAAkB3kB,CAAC,CAACjL,MAAF,CAASmd,YAAT,GAAwB,CAA3E,EAA8E;MAC1E0T,GAAG,GAAG,KAAN;IACH,CAFD,MAGK,IAAI5lB,CAAC,CAACkT,KAAF,CAAQyR,OAAR,GAAkB,CAAtB,EAAyB;MAC1BiB,GAAG,GAAG,IAAN;IACH,CAFI,MAGA,IAAI5lB,CAAC,CAACjL,MAAF,CAAS8N,SAAT,CAAmB6I,QAAnB,CAA4B,mBAA5B,KAAqD1L,CAAC,CAACjL,MAAF,CAAS8N,SAAT,CAAmB6I,QAAnB,CAA4B,oBAA5B,CAAzD,EAA6G;MAC9G,IAAK1L,CAAC,CAACkT,KAAF,CAAQyR,OAAR,GAAkB,CAAnB,IAA0B3kB,CAAC,CAACkT,KAAF,CAAQ0R,OAAR,GAAkB,CAAhD,EAAoD;QAChDgB,GAAG,GAAG,IAAN;MACH,CAFD,MAGK,IAAK5lB,CAAC,CAACkT,KAAF,CAAQyR,OAAR,GAAkB,EAAnB,IAA2B3kB,CAAC,CAACkT,KAAF,CAAQ0R,OAAR,GAAkB,EAAjD,EAAsD;QACvDgB,GAAG,GAAG,KAAN;MACH;IACJ;;IACD,IAAK5lB,CAAC,CAACjL,MAAF,CAAS8N,SAAT,CAAmB6I,QAAnB,CAA4B,mBAA5B,CAAD,IAAuD1L,CAAC,CAACjL,MAAF,CAAS8N,SAAT,CAAmB6I,QAAnB,CAA4B,oBAA5B,CAA3D,EAA+G;MAC3G,IAAI3W,MAAM,GAAGiL,CAAC,CAACjL,MAAF,CAASgC,OAAT,CAAiB,IAAjB,CAAb;MACA0uB,MAAM,CAACva,YAAP,CAAoBmX,MAApB,EAA4BuD,GAAG,GAAG7wB,MAAH,GAAYA,MAAM,CAACgd,kBAAlD;IACH,CAHD,MAIK;MACD0T,MAAM,CAACva,YAAP,CAAoBmX,MAApB,EAA4BuD,GAAG,GAAG5lB,CAAC,CAACjL,MAAL,GAAciL,CAAC,CAACjL,MAAF,CAASgd,kBAAtD;IACH;;IACD,KAAK8T,QAAL,CAAcxD,MAAd,EAAsBmC,MAAtB,EAA8BiB,MAA9B,EAAsCG,GAAtC,EAA2ChE,OAA3C;IACA,KAAKkE,aAAL,CAAmBJ,YAAnB,EAAiCC,YAAjC;IACA,KAAKI,eAAL,CAAqB1D,MAArB;;IACA,IAAIT,OAAO,CAACplB,OAAR,CAAgB2F,EAAhB,KAAuB,KAAK3F,OAAL,CAAa2F,EAAxC,EAA4C;MACxC,KAAKoL,UAAL;IACH,CAFD,MAGK;MACDqU,OAAO,CAACoE,cAAR;MACA,KAAKA,cAAL;IACH;EACJ,CApCD;;EAqCA1pB,QAAQ,CAAC3H,SAAT,CAAmB6wB,eAAnB,GAAqC,UAAUnD,MAAV,EAAkBmC,MAAlB,EAA0B5C,OAA1B,EAAmCjhB,KAAnC,EAA0CX,CAA1C,EAA6C4a,GAA7C,EAAkD5G,OAAlD,EAA2D;IAC5F,IAAI0R,YAAY,GAAG3uB,OAAO,CAACsrB,MAAD,EAAS,MAAMvpB,UAAf,CAA1B;IACA,IAAI6sB,YAAY,GAAG5uB,OAAO,CAAC2uB,YAAD,EAAe,MAAMhtB,QAArB,CAA1B;IACA,IAAIutB,YAAY,GAAGlvB,OAAO,CAACytB,MAAD,EAAS,MAAM1rB,UAAf,CAA1B;IACA,IAAI4rB,cAAJ;;IACA,IAAI1kB,CAAC,IAAIA,CAAC,CAACjL,MAAX,EAAmB;MACf2vB,cAAc,GAAGxtB,MAAM,CAAC,KAAKsL,aAAL,GAAqB,MAAMpI,OAA3B,GAAqC,MAAMhB,QAA5C,EAAsDorB,MAAtD,CAAvB;IACH;;IACD,IAAIxkB,CAAC,IAAK4a,GAAG,GAAG,CAAZ,IAAkB,CAAC5G,OAAvB,EAAgC;MAC5BiS,YAAY,CAAC/a,YAAb,CAA0BmX,MAA1B,EAAkCmC,MAAlC;MACA,KAAKqB,QAAL,CAAcxD,MAAd,EAAsBmC,MAAtB,EAA8ByB,YAA9B,EAA4C,IAA5C,EAAkDrE,OAAlD;IACH,CAHD,MAIK,IAAI5hB,CAAC,IAAKA,CAAC,CAACjL,MAAF,CAASmd,YAAT,GAAwB,CAAxB,IAA6B0I,GAAG,GAAI5a,CAAC,CAACjL,MAAF,CAASmd,YAAT,GAAwB,EAAlE,IAA0E,CAAC8B,OAA3E,IAAsF,CAAC,KAAK5W,WAAhG,EAA6G;MAC9G6oB,YAAY,CAAC/a,YAAb,CAA0BmX,MAA1B,EAAkCmC,MAAM,CAACzS,kBAAzC;MACA,KAAK8T,QAAL,CAAcxD,MAAd,EAAsBmC,MAAtB,EAA8ByB,YAA9B,EAA4C,KAA5C,EAAmDrE,OAAnD;IACH,CAHI,MAIA,IAAI,KAAKxkB,WAAL,IAAoBsnB,cAApB,IAAsC9J,GAAG,GAAG8J,cAAc,CAACxS,YAAf,GAA8B,EAA1E,IAAgF,CAAC8B,OAArF,EAA8F;MAC/FiS,YAAY,CAAC/a,YAAb,CAA0BmX,MAA1B,EAAkCmC,MAAM,CAACzS,kBAAzC;MACA,KAAK8T,QAAL,CAAcxD,MAAd,EAAsBmC,MAAtB,EAA8ByB,YAA9B,EAA4C,KAA5C,EAAmDrE,OAAnD;IACH,CAHI,MAIA;MACD,IAAI6D,MAAM,GAAG,KAAKS,YAAL,CAAkB1B,MAAlB,CAAb;MACA,IAAI2B,OAAO,GAAGV,MAAM,CAAC3b,UAAP,CAAkBnJ,KAAlB,CAAd;MACA8kB,MAAM,CAACva,YAAP,CAAoBmX,MAApB,EAA4B8D,OAA5B;MACA,KAAKN,QAAL,CAAcxD,MAAd,EAAsB8D,OAAtB,EAA+BV,MAA/B,EAAuC,IAAvC,EAA6C7D,OAA7C;IACH;;IACD,KAAKkE,aAAL,CAAmBJ,YAAnB,EAAiCC,YAAjC;IACA,KAAKI,eAAL,CAAqB1D,MAArB;;IACA,IAAIT,OAAO,CAACplB,OAAR,CAAgB2F,EAAhB,KAAuB,KAAK3F,OAAL,CAAa2F,EAAxC,EAA4C;MACxC,KAAKoL,UAAL;IACH,CAFD,MAGK;MACDqU,OAAO,CAACoE,cAAR;MACA,KAAKA,cAAL;IACH;EACJ,CAnCD;;EAoCA1pB,QAAQ,CAAC3H,SAAT,CAAmBkxB,QAAnB,GAA8B,UAAUxD,MAAV,EAAkBmC,MAAlB,EAA0BiB,MAA1B,EAAkCG,GAAlC,EAAuChE,OAAvC,EAAgD;IAC1E,IAAIwE,YAAY,GAAGrvB,OAAO,CAAC0uB,MAAD,EAAS,MAAM/sB,QAAf,CAA1B;IACA,IAAIyJ,EAAE,GAAG,KAAKwX,KAAL,CAAW0I,MAAX,CAAT;IACA,IAAIgE,WAAW,GAAGzE,OAAO,CAAC0E,gBAAR,CAAyB1E,OAAO,CAACld,QAAjC,EAA2Ckd,OAAO,CAACthB,MAAnD,EAA2D6B,EAA3D,EAA+D,IAA/D,EAAqE,IAArE,EAA2E,IAA3E,CAAlB;IACA,IAAIokB,KAAK,GAAG,KAAK5M,KAAL,CAAW6K,MAAX,CAAZ;IACA,IAAI7jB,KAAK,GAAG,KAAK6lB,UAAL,CAAgB,KAAK9hB,QAArB,EAA+B,KAAKpE,MAApC,EAA4CimB,KAA5C,CAAZ;IACA,IAAI9O,QAAQ,GAAG,KAAKkC,KAAL,CAAWyM,YAAX,CAAf;;IACA,IAAI,KAAKtf,QAAL,KAAkB,CAAtB,EAAyB;MACrB,KAAKsI,WAAL,CAAiB,KAAK1K,QAAtB,EAAgC,KAAKpE,MAArC,EAA6CmX,QAA7C,EAAuD,aAAvD,EAAsE,IAAtE;MACA,IAAImD,GAAG,GAAGpjB,KAAK,CAACmJ,KAAD,CAAL,GAAe,KAAK+D,QAAL,CAActP,MAA7B,GAAuCwwB,GAAG,GAAGjlB,KAAH,GAAWA,KAAK,GAAG,CAAvE;;MACA,IAAInJ,KAAK,CAACigB,QAAD,CAAL,IAAmB,CAAC,KAAKhG,MAA7B,EAAqC;QACjC,OAAO4U,WAAW,CAAC,CAAD,CAAX,CAAe,KAAK/lB,MAAL,CAAYqG,QAA3B,CAAP;MACH,CAFD,MAGK;QACD,IAAI8f,OAAO,GAAG,KAAK7hB,cAAL,GAAsBiC,UAAU,CAAC4Q,QAAD,CAAhC,GAA6CA,QAA3D;QACA9f,QAAQ,CAAC,KAAK2I,MAAL,CAAYqG,QAAb,EAAuB8f,OAAvB,EAAgCJ,WAAW,CAAC,CAAD,CAA3C,CAAR;MACH;;MACD,KAAK3hB,QAAL,CAAckK,MAAd,CAAqBgM,GAArB,EAA0B,CAA1B,EAA6ByL,WAAW,CAAC,CAAD,CAAxC;;MACA,IAAIzE,OAAO,CAACplB,OAAR,CAAgB2F,EAAhB,KAAuB,KAAK3F,OAAL,CAAa2F,EAAxC,EAA4C;QACxC,IAAI2G,SAAS,GAAG8Y,OAAO,CAAC8E,gBAAR,CAAyBvkB,EAAzB,CAAhB;QACAyY,GAAG;;QACH,KAAK,IAAInlB,CAAC,GAAG,CAAR,EAAWoU,GAAG,GAAGf,SAAS,CAAC1T,MAAhC,EAAwCK,CAAC,GAAGoU,GAA5C,EAAiDpU,CAAC,EAAlD,EAAsD;UAClD,KAAKiP,QAAL,CAAckK,MAAd,CAAqBgM,GAArB,EAA0B,CAA1B,EAA6B9R,SAAS,CAACrT,CAAD,CAAtC;UACAmlB,GAAG;QACN;;QACDgH,OAAO,CAAC5a,WAAR,GAAsB4a,OAAO,CAAC3a,cAAR,CAAuB2a,OAAO,CAACld,QAA/B,EAAyCkd,OAAO,CAACthB,MAAR,CAAeqG,QAAxD,CAAtB;MACH;;MACD,KAAKK,WAAL,GAAmB,KAAKC,cAAL,CAAoB,KAAKvC,QAAzB,EAAmC,KAAKpE,MAAL,CAAYqG,QAA/C,CAAnB;IACH,CArBD,MAsBK;MACD,KAAKggB,YAAL,CAAkB,KAAKjiB,QAAvB,EAAiC,KAAKpE,MAAtC,EAA8CmX,QAA9C,EAAwD4O,WAAxD,EAAqET,GAAG,GAAGjlB,KAAH,GAAWA,KAAK,GAAG,CAA3F;IACH;EACJ,CAhCD;;EAiCArE,QAAQ,CAAC3H,SAAT,CAAmBuxB,YAAnB,GAAkC,UAAU1B,MAAV,EAAkB;IAChD,IAAIoC,QAAQ,GAAG1vB,MAAM,CAAC,SAASiC,IAAV,EAAgBqrB,MAAhB,CAArB;;IACA,IAAIoC,QAAQ,IAAIA,QAAQ,CAAC/jB,SAAT,CAAmB6I,QAAnB,CAA4BjT,UAA5B,CAAZ,IAAuD,KAAKmE,aAAL,KAAuB,IAAlF,EAAwF;MACpF,KAAK0V,YAAL,CAAkBkS,MAAlB,EAA0BoC,QAA1B,EAAoC,IAApC;IACH;;IACD,IAAInB,MAAM,GAAGvuB,MAAM,CAAC,MAAM4B,UAAP,EAAmB0rB,MAAnB,CAAnB;;IACA,IAAI,KAAK5nB,aAAL,KAAuB,IAAvB,IAA+B,CAAC6oB,MAAhC,IAA0CmB,QAA9C,EAAwD;MACpD,KAAK9e,gBAAL,CAAsB0c,MAAtB;IACH;;IACDiB,MAAM,GAAGvuB,MAAM,CAAC,MAAM4B,UAAP,EAAmB0rB,MAAnB,CAAf;;IACA,IAAI,CAAChtB,KAAK,CAACiuB,MAAD,CAAN,IAAkB,KAAK7oB,aAAL,KAAuB,IAA7C,EAAmD;MAC/C6oB,MAAM,CAACzT,KAAP,CAAaoD,OAAb,GAAuB,MAAvB;IACH;;IACD,IAAI,CAAC5d,KAAK,CAACiuB,MAAD,CAAN,IAAkB,KAAK7oB,aAAL,KAAuB,KAA7C,EAAoD;MAChD6oB,MAAM,CAACzT,KAAP,CAAaoD,OAAb,GAAuB,OAAvB;IACH;;IACD,IAAI5d,KAAK,CAACiuB,MAAD,CAAL,IAAiB,KAAK7oB,aAAL,KAAuB,IAA5C,EAAkD;MAC9C,IAAIpF,KAAK,CAACovB,QAAD,CAAT,EAAqB;QACjB7uB,QAAQ,CAAC8uB,YAAT,CAAsB,KAAKnf,aAA3B,EAA0C8c,MAA1C,EAAkD/rB,UAAlD,EAA8D,KAAKgH,cAAnE;MACH;;MACD,IAAIuL,IAAI,GAAG9T,MAAM,CAAC,SAASiC,IAAV,EAAgBqrB,MAAhB,CAAjB;;MACA,IAAIxZ,IAAJ,EAAU;QACNA,IAAI,CAACnI,SAAL,CAAeC,GAAf,CAAmB,mBAAnB;MACH;;MACD2iB,MAAM,GAAG1tB,QAAQ,CAAC+uB,UAAT,CAAoB,KAAKpf,aAAzB,EAAwC,EAAxC,EAA4C,IAA5C,EAAkD,KAAKjI,cAAvD,CAAT;MACA+kB,MAAM,CAAC7c,WAAP,CAAmB8d,MAAnB;;MACA,IAAIza,IAAJ,EAAU;QACNlU,WAAW,CAAC,CAACkU,IAAD,CAAD,EAASxS,WAAT,CAAX;MACH,CAFD,MAGK;QACDT,QAAQ,CAAC8uB,YAAT,CAAsB,KAAKnf,aAA3B,EAA0C8c,MAA1C,EAAkD/rB,UAAlD,EAA8D,KAAKgH,cAAnE;MACH;;MACD+kB,MAAM,CAACtiB,YAAP,CAAoB,eAApB,EAAqC,OAArC;MACAujB,MAAM,CAACzT,KAAP,CAAaoD,OAAb,GAAuB,MAAvB;IACH;;IACD,IAAI5d,KAAK,CAACiuB,MAAD,CAAT,EAAmB;MACf,KAAKvgB,OAAL,CAAa,eAAb,EAA8B,KAAKwQ,cAAL,CAAoB8O,MAApB,EAA4B,IAA5B,CAA9B;;MACA,IAAIhtB,KAAK,CAACovB,QAAD,CAAT,EAAqB;QACjB7uB,QAAQ,CAAC8uB,YAAT,CAAsB,KAAKnf,aAA3B,EAA0C8c,MAA1C,EAAkDhsB,WAAlD,EAA+D,KAAKiH,cAApE;MACH;;MACD,IAAIuL,IAAI,GAAG9T,MAAM,CAAC,SAASiC,IAAV,EAAgBqrB,MAAhB,CAAjB;;MACA,IAAIxZ,IAAJ,EAAU;QACNlU,WAAW,CAAC,CAACkU,IAAD,CAAD,EAASvS,UAAT,CAAX;MACH,CAFD,MAGK;QACDV,QAAQ,CAAC8uB,YAAT,CAAsB,KAAKnf,aAA3B,EAA0C8c,MAA1C,EAAkDhsB,WAAlD,EAA+D,KAAKiH,cAApE;QACAuL,IAAI,GAAG9T,MAAM,CAAC,SAASiC,IAAV,EAAgBqrB,MAAhB,CAAb;QACA1tB,WAAW,CAAC,CAACkU,IAAD,CAAD,EAASvS,UAAT,CAAX;MACH;;MACDgtB,MAAM,GAAG1tB,QAAQ,CAAC+uB,UAAT,CAAoB,KAAKpf,aAAzB,EAAwC,EAAxC,EAA4C,IAA5C,EAAkD,KAAKjI,cAAvD,CAAT;MACA+kB,MAAM,CAAC7c,WAAP,CAAmB8d,MAAnB;MACA,KAAKjQ,SAAL,CAAegP,MAAf;MACA,KAAKtf,OAAL,CAAa,cAAb,EAA6B,KAAKwQ,cAAL,CAAoB8O,MAApB,EAA4B,IAA5B,CAA7B;IACH;;IACD,OAAOiB,MAAP;EACH,CAvDD;;EAwDAnpB,QAAQ,CAAC3H,SAAT,CAAmBmxB,aAAnB,GAAmC,UAAUJ,YAAV,EAAwBC,YAAxB,EAAsC;IACrE,IAAIA,YAAY,IAAID,YAAY,CAACqB,iBAAb,KAAmC,CAAvD,EAA0D;MACtD,IAAIC,QAAQ,GAAG9vB,MAAM,CAAC,SAASiC,IAAV,EAAgBwsB,YAAhB,CAArB;MACA1uB,MAAM,CAACyuB,YAAD,CAAN;MACAzuB,MAAM,CAAC+vB,QAAD,CAAN;MACA,IAAIvP,QAAQ,GAAG,KAAKkC,KAAL,CAAWgM,YAAX,CAAf;MACA,KAAKvW,WAAL,CAAiB,KAAK1K,QAAtB,EAAgC,KAAKpE,MAArC,EAA6CmX,QAA7C,EAAuD,aAAvD,EAAsE,KAAtE;MACA,KAAKxB,YAAL,CAAkB0P,YAAlB,EAAgC,IAAhC;IACH;EACJ,CATD;;EAUArpB,QAAQ,CAAC3H,SAAT,CAAmBoxB,eAAnB,GAAqC,UAAU1D,MAAV,EAAkB;IACnD,IAAIhb,KAAK,GAAG,KAAKqP,OAAL,CAAa2L,MAAb,EAAqB,MAAMvpB,UAA3B,EAAuC1D,MAAnD;IACAitB,MAAM,CAACngB,YAAP,CAAoB,YAApB,EAAkC,KAAKmF,KAAvC;IACA,KAAK4f,oBAAL,CAA0B/vB,MAAM,CAAC,MAAM4B,UAAP,EAAmBupB,MAAnB,CAAhC,EAA4Dhb,KAAK,GAAG,CAApE;EACH,CAJD;;EAKA/K,QAAQ,CAAC3H,SAAT,CAAmBsyB,oBAAnB,GAA0C,UAAUzqB,OAAV,EAAmB6K,KAAnB,EAA0B;IAChE,IAAI,CAAC7P,KAAK,CAACgF,OAAD,CAAV,EAAqB;MACjB,IAAI4Q,MAAM,GAAG5Q,OAAO,CAACsN,UAArB;;MACA,KAAK,IAAIrU,CAAC,GAAG,CAAR,EAAWoU,GAAG,GAAGuD,MAAM,CAAChY,MAA7B,EAAqCK,CAAC,GAAGoU,GAAzC,EAA8CpU,CAAC,EAA/C,EAAmD;QAC/C,IAAIwZ,KAAK,GAAG7B,MAAM,CAAC3X,CAAD,CAAlB;QACAwZ,KAAK,CAAC/M,YAAN,CAAmB,YAAnB,EAAiC,KAAKmF,KAAtC;QACA,KAAK4f,oBAAL,CAA0B/vB,MAAM,CAAC,MAAM4B,UAAP,EAAmBmW,KAAnB,CAAhC,EAA2D5H,KAAK,GAAG,CAAnE;MACH;IACJ;EACJ,CATD;;EAUA/K,QAAQ,CAAC3H,SAAT,CAAmBmwB,gBAAnB,GAAsC,UAAU9kB,CAAV,EAAa;IAC/C,IAAI4lB,GAAJ;;IACA,IAAI5lB,CAAC,CAACkT,KAAF,CAAQyR,OAAR,GAAkB3kB,CAAC,CAACjL,MAAF,CAASmd,YAAT,GAAwB,CAA9C,EAAiD;MAC7C0T,GAAG,GAAG,KAAN;IACH,CAFD,MAGK,IAAI5lB,CAAC,CAACkT,KAAF,CAAQyR,OAAR,GAAkB,CAAtB,EAAyB;MAC1BiB,GAAG,GAAG,IAAN;IACH;;IACD,IAAIZ,MAAM,GAAG,KAAKtd,aAAL,CAAmB,KAAnB,EAA0B;MAAEkY,SAAS,EAAE9lB;IAAb,CAA1B,CAAb;IACA,IAAI6G,KAAK,GAAG,KAAK6B,aAAL,GAAsBojB,GAAG,GAAG,CAAH,GAAO,CAAhC,GAAsCA,GAAG,GAAG,CAAH,GAAO,CAA5D;IACA5lB,CAAC,CAACjL,MAAF,CAASmW,YAAT,CAAsB8Z,MAAtB,EAA8BhlB,CAAC,CAACjL,MAAF,CAAS0tB,QAAT,CAAkB9hB,KAAlB,CAA9B;EACH,CAXD;;EAYArE,QAAQ,CAAC3H,SAAT,CAAmBgvB,gBAAnB,GAAsC,YAAY;IAC9C,IAAIuD,MAAM,GAAGhwB,MAAM,CAAC,MAAM4C,OAAP,CAAnB;;IACA,IAAIotB,MAAJ,EAAY;MACRjwB,MAAM,CAACiwB,MAAD,CAAN;IACH;EACJ,CALD;;EAMA5qB,QAAQ,CAAC3H,SAAT,CAAmB+sB,WAAnB,GAAiC,YAAY;IACzC,IAAI,KAAKE,OAAL,IAAgB,KAAKsC,OAAzB,EAAkC;MAC9B,KAAKtC,OAAL,CAAauF,OAAb;MACA,KAAKjD,OAAL,CAAaiD,OAAb;IACH;EACJ,CALD;;EAMA7qB,QAAQ,CAAC3H,SAAT,CAAmBuuB,YAAnB,GAAkC,UAAUhQ,KAAV,EAAiBsE,GAAjB,EAAsBoM,UAAtB,EAAkC7uB,MAAlC,EAA0CqyB,QAA1C,EAAoD7E,QAApD,EAA8Dlb,KAA9D,EAAqEgd,IAArE,EAA2E;IACzG,IAAIG,MAAM,GAAGZ,UAAU,GAAG7sB,OAAO,CAAC6sB,UAAD,EAAa,MAAMlrB,QAAnB,CAAV,GAAyC,IAAhE;IACA,IAAI2uB,QAAQ,GAAG7C,MAAM,GAAG,KAAK7U,WAAL,CAAiB6U,MAAjB,CAAH,GAA8B,IAAnD;IACA,IAAIrB,WAAW,GAAG3L,GAAG,GAAGA,GAAG,CAAC6K,MAAP,GAAgB+E,QAArC;IACA,IAAIE,eAAe,GAAG9P,GAAG,GAAGA,GAAG,CAACsL,QAAP,GAAkB,IAA3C;IACA,IAAIyE,SAAS,GAAG3D,UAAU,GAAG,KAAKlN,OAAL,CAAakN,UAAb,EAAyB,MAAMlrB,QAA/B,CAAH,GAA8C,IAAxE;IACA,IAAI8uB,YAAY,GAAGhQ,GAAG,CAAC6K,MAAJ,CAAWjW,aAA9B;IACA,IAAI4X,UAAU,GAAGxM,GAAG,CAAC6K,MAAJ,GAAatrB,OAAO,CAACywB,YAAD,EAAe,MAAM9uB,QAArB,CAApB,GAAqD,IAAtE;IACA,IAAI+uB,YAAY,GAAG,IAAnB;IACA,IAAIC,UAAU,GAAG,IAAjB;IACA,IAAIC,OAAO,GAAG,CAAC3tB,QAAD,EAAWD,MAAX,EAAmBE,OAAnB,EAA4BC,MAA5B,CAAd;IACA,IAAI0tB,SAAS,GAAG,IAAhB;IACA,IAAIxd,IAAI,GAAIia,IAAI,KAAK,IAAV,GAAkBlB,WAAlB,GAAgCqB,MAA3C;IACA,IAAI7jB,KAAK,GAAGyJ,IAAI,GAAGrT,OAAO,CAACqT,IAAD,EAAO,gBAAP,CAAV,GAAqC,IAArD;IACA,IAAI3U,CAAC,GAAG,CAAR;IACA,IAAIoyB,QAAQ,GAAG,IAAf;IACA7D,UAAU,GAAIxM,GAAG,CAAC6K,MAAJ,IAAc2B,UAAU,KAAK,IAA9B,GAAsCjtB,OAAO,CAACywB,YAAD,EAAe,MAAMlvB,IAArB,CAA7C,GAA0E0rB,UAAvF;IACAA,UAAU,GAAIK,IAAI,KAAK,IAAV,GAAkB,KAAKL,UAAvB,GAAoCA,UAAjD;;IACA,IAAIzB,QAAJ,EAAc;MACV,OAAO9sB,CAAC,GAAG,CAAX,EAAc;QACV,IAAIyB,MAAM,CAAC,MAAMiC,IAAP,EAAaopB,QAAb,CAAN,CAA6B1f,SAA7B,CAAuC6I,QAAvC,CAAgDic,OAAO,CAAClyB,CAAD,CAAvD,CAAJ,EAAiE;UAC7DmyB,SAAS,GAAGD,OAAO,CAAClyB,CAAD,CAAnB;UACA;QACH;;QACDA,CAAC;MACJ;IACJ;;IACD,IAAIkL,KAAJ,EAAW;MACP,IAAImnB,OAAO,GAAG,CAAd;;MACA,KAAKryB,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGkL,KAAK,CAAComB,iBAAtB,EAAyCtxB,CAAC,EAA1C,EAA8C;QAC1CqyB,OAAO,GAAIzD,IAAI,KAAK,IAAT,IAAiB1jB,KAAK,CAAC8hB,QAAN,CAAehtB,CAAf,MAAsB0tB,WAAvC,IAAsDqB,MAAM,KAAKrB,WAAlE,GAAiF,EAAE2E,OAAnF,GAA6FA,OAAvG;;QACA,IAAKzD,IAAI,KAAK,IAAT,IAAiB1jB,KAAK,CAAC8hB,QAAN,CAAehtB,CAAf,EAAkBoN,SAAlB,CAA4B6I,QAA5B,CAAqC,SAArC,CAAtB,EAAwE;UACpEgc,UAAU,GAAIxU,KAAK,CAACyR,OAAN,IAAiB,EAAlB,GAAwBlvB,CAAC,GAAG,CAA5B,GAAgCA,CAA7C;UACA;QACH,CAHD,MAIK,IAAIkL,KAAK,CAAC8hB,QAAN,CAAehtB,CAAf,MAAsB2U,IAA1B,EAAgC;UACjCsd,UAAU,GAAIxU,KAAK,CAACyR,OAAN,IAAiB,EAAlB,GAAwBlvB,CAAxB,GAA4BA,CAAzC;UACA;QACH;MACJ;;MACDiyB,UAAU,GAAII,OAAO,KAAK,CAAb,GAAkB,EAAEJ,UAApB,GAAiCA,UAA9C;MACAG,QAAQ,GAAID,SAAS,IAAI,WAAd,GAA6B,QAA7B,GAA0C1U,KAAK,CAACyR,OAAN,GAAgB,CAAjB,GAAsB,QAAtB,GAAiC,OAArF;IACH;;IACD,IAAIf,UAAJ,EAAgB;MACZ,IAAI2D,SAAS,CAACnyB,MAAV,KAAqB,CAAzB,EAA4B;QACxBqyB,YAAY,GAAG,IAAf;MACH,CAFD,MAGK,IAAI7D,UAAU,CAAC/gB,SAAX,CAAqB6I,QAArB,CAA8BhT,QAA9B,CAAJ,EAA6C;QAC9C+uB,YAAY,GAAGF,SAAS,CAAC,CAAD,CAAxB;MACH,CAFI,MAGA;QACDE,YAAY,GAAGF,SAAS,CAAC,CAAD,CAAxB;MACH;IACJ;;IACD,IAAI/C,MAAM,KAAKrB,WAAf,EAA4B;MACxBsE,YAAY,GAAGjD,MAAf;IACH;;IACD,IAAIZ,UAAU,IAAI7uB,MAAM,CAACmd,YAAP,IAAuB,EAArC,IAA2CgB,KAAK,CAACyR,OAAN,GAAgB5vB,MAAM,CAACmd,YAAP,GAAsB,EAAjF,IAAuFgB,KAAK,CAACyR,OAAN,GAAgB,CAA3G,EAA8G;MAC1G8C,YAAY,GAAGjD,MAAf;;MACA,IAAIH,IAAI,KAAK,IAAb,EAAmB;QACfhd,KAAK,GAAG,EAAEA,KAAV;QACA,IAAI0gB,QAAQ,GAAGN,YAAY,GAAGvwB,MAAM,CAAC,gBAAD,EAAmBuwB,YAAnB,CAAT,GAA4C,IAAvE;QACAC,UAAU,GAAIK,QAAD,GAAaA,QAAQ,CAACtF,QAAT,CAAkBrtB,MAA/B,GAAwC,CAArD;;QACA,IAAI,EAAE,KAAKkL,MAAL,CAAY8D,UAAZ,YAAkC9M,WAApC,KAAoDywB,QAAQ,KAAK,IAAjE,IAAyEN,YAA7E,EAA2F;UACvF,IAAIO,QAAQ,GAAGP,YAAY,CAACQ,YAAb,CAA0B,UAA1B,IACX,KAAK9gB,aAAL,CAAmB,KAAK7G,MAAL,CAAY8D,UAA/B,EAA2CqjB,YAAY,CAACnd,YAAb,CAA0B,UAA1B,EAAsC5B,QAAtC,EAA3C,CADW,GACoF,IADnG;UAEAgf,UAAU,GAAIM,QAAD,GAAaA,QAAQ,CAAC5yB,MAAtB,GAA+B,CAA5C;QACH;MACJ;IACJ;;IACD,OAAO;MACHwb,MAAM,EAAE,KADL;MAEHsX,UAAU,EAAE3F,QAFT;MAGHrP,KAAK,EAAEA,KAHJ;MAIHiQ,WAAW,EAAEA,WAJV;MAKHmE,eAAe,EAAEA,eALd;MAMHa,WAAW,EAAE3D,MANV;MAOH4D,eAAe,EAAEf,QAPd;MAQHgB,SAAS,EAAEX,UARR;MASHY,SAAS,EAAEjhB,KATR;MAUH4c,iBAAiB,EAAED,UAVhB;MAWHJ,UAAU,EAAE6D,YAXT;MAYH1C,aAAa,EAAE6C,SAZZ;MAaH7yB,MAAM,EAAEA,MAbL;MAcH8yB,QAAQ,EAAEA;IAdP,CAAP;EAgBH,CAtFD;;EAuFAvrB,QAAQ,CAAC3H,SAAT,CAAmB4zB,UAAnB,GAAgC,UAAUC,KAAV,EAAiB;IAC7C,IAAI3e,GAAG,GAAG,KAAKgI,MAAL,CAAYzc,MAAtB;;IACA,IAAIozB,KAAJ,EAAW;MACP,KAAK,IAAI/yB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoU,GAApB,EAAyBpU,CAAC,EAA1B,EAA8B;QAC1B,KAAK+V,aAAL,CAAmB,KAAKqG,MAAL,CAAYpc,CAAZ,CAAnB;MACH;IACJ,CAJD,MAKK;MACD,KAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoU,GAApB,EAAyBpU,CAAC,EAA1B,EAA8B;QAC1B,IAAIgzB,MAAM,GAAGvxB,MAAM,CAAC,MAAMkD,OAAP,EAAgB,KAAKyX,MAAL,CAAYpc,CAAZ,CAAhB,CAAnB;QACAwB,MAAM,CAACwxB,MAAD,CAAN;MACH;IACJ;EACJ,CAbD;;EAcAnsB,QAAQ,CAAC3H,SAAT,CAAmB6W,aAAnB,GAAmC,UAAUP,IAAV,EAAgB;IAC/C,IAAIwd,MAAM,GAAG,KAAK/gB,aAAL,CAAmB,KAAnB,EAA0B;MAAEkY,SAAS,EAAExlB;IAAb,CAA1B,CAAb;IACA6Q,IAAI,CAACC,YAAL,CAAkBud,MAAlB,EAA0Bxd,IAAI,CAACnB,UAAL,CAAgB,CAAhB,CAA1B;EACH,CAHD;;EAIAxN,QAAQ,CAAC3H,SAAT,CAAmB+zB,cAAnB,GAAoC,UAAUF,KAAV,EAAiB;IACjD,IAAIA,KAAJ,EAAW;MACP,IAAI9O,MAAM,GAAGviB,SAAS,CAAC,MAAMuB,QAAN,GAAiB,8BAAlB,EAAkD,KAAK8D,OAAvD,CAAtB;;MACA,KAAK,IAAIwJ,EAAE,GAAG,CAAT,EAAY2iB,QAAQ,GAAGjP,MAA5B,EAAoC1T,EAAE,GAAG2iB,QAAQ,CAACvzB,MAAlD,EAA0D4Q,EAAE,EAA5D,EAAgE;QAC5D,IAAI2I,GAAG,GAAGga,QAAQ,CAAC3iB,EAAD,CAAlB;QACA2I,GAAG,CAACzM,YAAJ,CAAiB,eAAjB,EAAkC,OAAlC;MACH;IACJ,CAND,MAOK;MACD,IAAIwX,MAAM,GAAGviB,SAAS,CAAC,MAAMuB,QAAN,GAAiB,yBAAlB,EAA6C,KAAK8D,OAAlD,CAAtB;;MACA,KAAK,IAAIyJ,EAAE,GAAG,CAAT,EAAY2iB,QAAQ,GAAGlP,MAA5B,EAAoCzT,EAAE,GAAG2iB,QAAQ,CAACxzB,MAAlD,EAA0D6Q,EAAE,EAA5D,EAAgE;QAC5D,IAAI0I,GAAG,GAAGia,QAAQ,CAAC3iB,EAAD,CAAlB;QACA0I,GAAG,CAAChL,eAAJ,CAAoB,eAApB;MACH;IACJ;EACJ,CAfD;;EAgBArH,QAAQ,CAAC3H,SAAT,CAAmBk0B,eAAnB,GAAqC,UAAUrsB,OAAV,EAAmB6K,KAAnB,EAA0ByhB,kBAA1B,EAA8C;IAC/E,IAAIzhB,KAAK,GAAG,CAAR,IAAa,CAAC7P,KAAK,CAACgF,OAAD,CAAvB,EAAkC;MAC9B,IAAI4Q,MAAM,GAAG,KAAK2b,eAAL,CAAqBD,kBAArB,EAAyCtsB,OAAO,CAACsN,UAAjD,CAAb;;MACA,KAAK,IAAIrU,CAAC,GAAG,CAAR,EAAWoU,GAAG,GAAGuD,MAAM,CAAChY,MAA7B,EAAqCK,CAAC,GAAGoU,GAAzC,EAA8CpU,CAAC,EAA/C,EAAmD;QAC/C,IAAIwZ,KAAK,GAAG7B,MAAM,CAAC3X,CAAD,CAAlB;QACA,IAAIuV,IAAI,GAAG9T,MAAM,CAAC,MAAMsB,WAAP,EAAoBtB,MAAM,CAAC,MAAMkC,QAAP,EAAiB6V,KAAjB,CAA1B,CAAjB;;QACA,IAAI,CAACzX,KAAK,CAACwT,IAAD,CAAV,EAAkB;UACd,KAAK6I,YAAL,CAAkB5E,KAAlB,EAAyBjE,IAAzB,EAA+B,IAA/B;QACH;;QACD,KAAK6d,eAAL,CAAqB3xB,MAAM,CAAC,MAAM4B,UAAP,EAAmBmW,KAAnB,CAA3B,EAAsD5H,KAAK,GAAG,CAA9D,EAAiEyhB,kBAAjE;MACH;IACJ;EACJ,CAZD;;EAaAxsB,QAAQ,CAAC3H,SAAT,CAAmBq0B,gBAAnB,GAAsC,UAAUF,kBAAV,EAA8B;IAChE,IAAIjR,MAAM,GAAG,KAAKkR,eAAL,CAAqBD,kBAArB,EAAyC3xB,SAAS,CAAC,MAAMqB,WAAP,EAAoB,KAAKgE,OAAzB,CAAlD,CAAb;;IACA,KAAK,IAAI/G,CAAC,GAAG,CAAR,EAAWoU,GAAG,GAAGgO,MAAM,CAACziB,MAA7B,EAAqCK,CAAC,GAAGoU,GAAzC,EAA8CpU,CAAC,EAA/C,EAAmD;MAC/C,IAAIuV,IAAI,GAAG6M,MAAM,CAACpiB,CAAD,CAAjB;MACA,IAAIwZ,KAAK,GAAGlY,OAAO,CAACiU,IAAD,EAAO,MAAMtS,QAAb,CAAnB;MACA,KAAKmb,YAAL,CAAkB5E,KAAlB,EAAyBjE,IAAzB,EAA+B,IAA/B;IACH;EACJ,CAPD;;EAQA1O,QAAQ,CAAC3H,SAAT,CAAmBs0B,aAAnB,GAAmC,UAAUzsB,OAAV,EAAmB6K,KAAnB,EAA0ByhB,kBAA1B,EAA8C;IAC7E,IAAIzhB,KAAK,GAAG,CAAR,IAAa,CAAC7P,KAAK,CAACgF,OAAD,CAAvB,EAAkC;MAC9B,IAAI8Q,MAAM,GAAG,KAAKyb,eAAL,CAAqBD,kBAArB,EAAyCtsB,OAAO,CAACsN,UAAjD,CAAb;;MACA,KAAK,IAAIrU,CAAC,GAAG,CAAR,EAAWoU,GAAG,GAAGyD,MAAM,CAAClY,MAA7B,EAAqCK,CAAC,GAAGoU,GAAzC,EAA8CpU,CAAC,EAA/C,EAAmD;QAC/C,IAAIwZ,KAAK,GAAG3B,MAAM,CAAC7X,CAAD,CAAlB;QACA,IAAIuV,IAAI,GAAG9T,MAAM,CAAC,MAAMuB,UAAP,EAAmBvB,MAAM,CAAC,MAAMkC,QAAP,EAAiB6V,KAAjB,CAAzB,CAAjB;;QACA,IAAI,CAACzX,KAAK,CAACwT,IAAD,CAAV,EAAkB;UACd,KAAKsH,YAAL,CAAkBrD,KAAlB,EAAyBjE,IAAzB,EAA+B,IAA/B;QACH;;QACD,KAAKie,aAAL,CAAmB/xB,MAAM,CAAC,MAAM4B,UAAP,EAAmBmW,KAAnB,CAAzB,EAAoD5H,KAAK,GAAG,CAA5D,EAA+DyhB,kBAA/D;MACH;IACJ;EACJ,CAZD;;EAaAxsB,QAAQ,CAAC3H,SAAT,CAAmBu0B,cAAnB,GAAoC,UAAUJ,kBAAV,EAA8B;IAC9D,IAAIK,MAAM,GAAG,KAAKJ,eAAL,CAAqBD,kBAArB,EAAyC3xB,SAAS,CAAC,MAAMsB,UAAP,EAAmB,KAAK+D,OAAxB,CAAlD,CAAb;;IACA,KAAK,IAAI/G,CAAC,GAAG,CAAR,EAAWoU,GAAG,GAAGsf,MAAM,CAAC/zB,MAA7B,EAAqCK,CAAC,GAAGoU,GAAzC,EAA8CpU,CAAC,EAA/C,EAAmD;MAC/C,IAAIuV,IAAI,GAAGme,MAAM,CAAC1zB,CAAD,CAAjB;MACA,IAAIwZ,KAAK,GAAGlY,OAAO,CAACiU,IAAD,EAAO,MAAMtS,QAAb,CAAnB;MACA,KAAK4Z,YAAL,CAAkBrD,KAAlB,EAAyBjE,IAAzB,EAA+B,IAA/B,EAAqC,IAArC;IACH;EACJ,CAPD;;EAQA1O,QAAQ,CAAC3H,SAAT,CAAmBo0B,eAAnB,GAAqC,UAAUD,kBAAV,EAA8Brb,KAA9B,EAAqC;IACtE,IAAI2b,MAAM,GAAG90B,KAAK,CAACK,SAAN,CAAgBqqB,KAAhB,CAAsBtiB,IAAtB,CAA2B+Q,KAA3B,CAAb;;IACA,IAAIqb,kBAAJ,EAAwB;MACpB,KAAK,IAAIrzB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2zB,MAAM,CAACh0B,MAA3B,EAAmCK,CAAC,EAApC,EAAwC;QACpC,IAAI,CAAC2B,SAAS,CAACgyB,MAAM,CAAC3zB,CAAD,CAAP,CAAd,EAA2B;UACvB2zB,MAAM,CAACxa,MAAP,CAAcnZ,CAAd,EAAiB,CAAjB;UACAA,CAAC;QACJ;MACJ;IACJ;;IACD,OAAO2zB,MAAP;EACH,CAXD;;EAYA9sB,QAAQ,CAAC3H,SAAT,CAAmB00B,UAAnB,GAAgC,UAAUjf,IAAV,EAAgB;IAC5C,IAAIsb,YAAY,GAAG3uB,OAAO,CAACqT,IAAD,EAAO,MAAMtR,UAAb,CAA1B;IACA,IAAI6sB,YAAY,GAAG5uB,OAAO,CAAC2uB,YAAD,EAAe,MAAMhtB,QAArB,CAA1B;;IACA,IAAI,CAAClB,KAAK,CAAC,KAAKkL,cAAN,CAAV,EAAiC;MAC7B,KAAKuc,eAAL,CAAqB7U,IAArB;IACH;;IACDnT,MAAM,CAACmT,IAAD,CAAN;IACA,KAAK0b,aAAL,CAAmBJ,YAAnB,EAAiCC,YAAjC;IACA,KAAK2D,UAAL,CAAgBlf,IAAhB;EACH,CATD;;EAUA9N,QAAQ,CAAC3H,SAAT,CAAmBqxB,cAAnB,GAAoC,YAAY;IAC5C,KAAKzY,UAAL;IACA,KAAKgc,mBAAL;IACA,KAAKC,mBAAL;EACH,CAJD;;EAKAltB,QAAQ,CAAC3H,SAAT,CAAmB4Y,UAAnB,GAAgC,YAAY;IACxC,KAAKsE,MAAL,GAAcvd,KAAK,CAACK,SAAN,CAAgBqqB,KAAhB,CAAsBtiB,IAAtB,CAA2BvF,SAAS,CAAC,MAAMuB,QAAP,EAAiB,KAAK8D,OAAtB,CAApC,CAAd;EACH,CAFD;;EAGAF,QAAQ,CAAC3H,SAAT,CAAmB40B,mBAAnB,GAAyC,YAAY;IACjD,KAAKzoB,aAAL,CAAmB;MAAED,aAAa,EAAE;IAAjB,CAAnB,EAA0C,IAA1C;IACA,IAAIqM,MAAM,GAAG/V,SAAS,CAAC,MAAM6B,MAAP,EAAe,KAAKwD,OAApB,CAAtB;IACA,KAAKwW,gBAAL,CAAsB9F,MAAtB;EACH,CAJD;;EAKA5Q,QAAQ,CAAC3H,SAAT,CAAmB60B,mBAAnB,GAAyC,YAAY;IACjD,KAAK1oB,aAAL,CAAmB;MAAEE,aAAa,EAAE;IAAjB,CAAnB,EAA0C,IAA1C;IACA,IAAIsM,MAAM,GAAGnW,SAAS,CAAC,wBAAD,EAA2B,KAAKqF,OAAhC,CAAtB;;IACA,KAAK,IAAI/G,CAAC,GAAG,CAAR,EAAWoU,GAAG,GAAGyD,MAAM,CAAClY,MAA7B,EAAqCK,CAAC,GAAGoU,GAAzC,EAA8CpU,CAAC,EAA/C,EAAmD;MAC/C,KAAK+f,SAAL,CAAelI,MAAM,CAAC7X,CAAD,CAArB;IACH;EACJ,CAND;;EAOA6G,QAAQ,CAAC3H,SAAT,CAAmB20B,UAAnB,GAAgC,UAAUlf,IAAV,EAAgB;IAC5C,IAAI,KAAKtD,QAAL,KAAkB,CAAtB,EAAyB;MACrB,IAAI2iB,EAAE,GAAG,IAAInyB,WAAJ,CAAgB,KAAKoN,QAArB,CAAT;MACA,IAAIvC,EAAE,GAAG,KAAKwX,KAAL,CAAWvP,IAAX,CAAT;MACA,IAAIK,IAAI,GAAG,EAAX;MACA,IAAIif,KAAK,GAAG,KAAK9kB,cAAL,GAAsBiC,UAAU,CAAC1E,EAAD,CAAhC,GAAuCA,EAAnD;MACAsI,IAAI,CAAC,KAAKnK,MAAL,CAAY6B,EAAb,CAAJ,GAAuBunB,KAAvB;MACAD,EAAE,CAAChzB,MAAH,CAAU,KAAK6J,MAAL,CAAY6B,EAAtB,EAA0BsI,IAA1B;MACA,KAAKic,gBAAL,CAAsBvkB,EAAtB;IACH,CARD,MASK;MACD,IAAIA,EAAE,GAAG,KAAKwX,KAAL,CAAWvP,IAAX,CAAT;MACA,KAAKkc,gBAAL,CAAsB,KAAK5hB,QAA3B,EAAqC,KAAKpE,MAA1C,EAAkD6B,EAAlD,EAAsD,IAAtD,EAA4D,IAA5D,EAAkE,IAAlE;IACH;EACJ,CAdD;;EAeA7F,QAAQ,CAAC3H,SAAT,CAAmB+xB,gBAAnB,GAAsC,UAAUjP,QAAV,EAAoB;IACtD,IAAIrK,MAAM,GAAG,KAAKuK,aAAL,CAAmB,KAAK3Q,WAAxB,EAAqCyQ,QAArC,EAA+C,KAA/C,CAAb;IACA,IAAI3O,SAAS,GAAG,EAAhB;;IACA,IAAIsE,MAAJ,EAAY;MACR,KAAK,IAAI3X,CAAC,GAAG,CAAR,EAAWoU,GAAG,GAAGuD,MAAM,CAAChY,MAA7B,EAAqCK,CAAC,GAAGoU,GAAzC,EAA8CpU,CAAC,EAA/C,EAAmD;QAC/C,IAAIg0B,EAAE,GAAG,IAAInyB,WAAJ,CAAgB,KAAKoN,QAArB,CAAT;QACA,IAAIvC,EAAE,GAAGzK,QAAQ,CAAC,KAAK4I,MAAL,CAAY6B,EAAb,EAAiBiL,MAAM,CAAC3X,CAAD,CAAvB,CAAR,CAAoCiT,QAApC,EAAT;QACA,IAAI+B,IAAI,GAAG,EAAX;QACA,IAAIkf,MAAM,GAAG,KAAK/kB,cAAL,GAAsBiC,UAAU,CAAC1E,EAAD,CAAhC,GAAuCA,EAApD;QACAsI,IAAI,CAAC,KAAKnK,MAAL,CAAY6B,EAAb,CAAJ,GAAuBwnB,MAAvB;QACA,IAAIzd,QAAQ,GAAGud,EAAE,CAAChzB,MAAH,CAAU,KAAK6J,MAAL,CAAY6B,EAAtB,EAA0BsI,IAA1B,CAAf;QACA3B,SAAS,CAAC3E,IAAV,CAAe+H,QAAQ,CAAC,CAAD,CAAvB;QACA,KAAKwa,gBAAL,CAAsBvkB,EAAtB;MACH;IACJ;;IACD,OAAO2G,SAAP;EACH,CAhBD;;EAiBAxM,QAAQ,CAAC3H,SAAT,CAAmBi1B,aAAnB,GAAmC,UAAUnc,KAAV,EAAiBvK,QAAjB,EAA2B2mB,QAA3B,EAAqC;IACpE,KAAK,IAAIp0B,CAAC,GAAG,CAAR,EAAWoU,GAAG,GAAG4D,KAAK,CAACrY,MAA5B,EAAoCK,CAAC,GAAGoU,GAAxC,EAA6CpU,CAAC,EAA9C,EAAkD;MAC9C,IAAIwZ,KAAK,GAAG,KAAKrY,UAAL,CAAgB6W,KAAK,CAAChY,CAAD,CAArB,CAAZ;;MACA,IAAI+B,KAAK,CAACyX,KAAD,CAAT,EAAkB;QACd;MACH;;MACD,IAAIjE,IAAI,GAAG9T,MAAM,CAAC,MAAMgM,QAAP,EAAiBhM,MAAM,CAAC,MAAMkC,QAAP,EAAiB6V,KAAjB,CAAvB,CAAjB;;MACA,IAAI,CAACzX,KAAK,CAACwT,IAAD,CAAV,EAAkB;QACd6e,QAAQ,GAAG,KAAKvX,YAAL,CAAkBrD,KAAlB,EAAyBjE,IAAzB,EAA+B,IAA/B,CAAH,GAA0C,KAAK6I,YAAL,CAAkB5E,KAAlB,EAAyBjE,IAAzB,EAA+B,IAA/B,CAAlD;MACH;IACJ;EACJ,CAXD;;EAYA1O,QAAQ,CAAC3H,SAAT,CAAmBm1B,aAAnB,GAAmC,UAAUrc,KAAV,EAAiB+W,MAAjB,EAAyB7jB,KAAzB,EAAgCopB,QAAhC,EAA0CC,OAA1C,EAAmD;IAClF,IAAIvc,KAAK,CAACrY,MAAN,KAAiB,CAArB,EAAwB;MACpB;IACH;;IACD,IAAI8X,MAAM,GAAG,KAAK3F,aAAL,CAAmBkG,KAAnB,CAAb;IACA,IAAIpG,KAAK,GAAGmd,MAAM,GAAG3d,UAAU,CAAC2d,MAAM,CAACla,YAAP,CAAoB,YAApB,CAAD,CAAV,GAAgD,CAAnD,GAAuD,CAAzE;;IACA,IAAIyf,QAAJ,EAAc;MACV,KAAKE,YAAL,CAAkB5iB,KAAlB;IACH;;IACD,IAAI2H,EAAE,GAAGjX,QAAQ,CAACmyB,sBAAT,CAAgC,KAAKxiB,aAArC,EAAoDwF,MAApD,EAA4D,KAAKzN,cAAjE,EAAiF4H,KAAjF,CAAT;IACA,IAAIoe,MAAJ;;IACA,IAAI,CAACuE,OAAL,EAAc;MACVvE,MAAM,GAAGjB,MAAM,GAAG,KAAK0B,YAAL,CAAkB1B,MAAlB,CAAH,GAA+BttB,MAAM,CAAC,MAAM4B,UAAP,EAAmB,KAAK0D,OAAxB,CAApD;IACH,CAFD,MAGK;MACDipB,MAAM,GAAGuE,OAAT;IACH;;IACD,IAAIG,OAAO,GAAG1E,MAAM,CAAC3b,UAAP,CAAkBnJ,KAAlB,CAAd;;IACA,IAAIwpB,OAAO,IAAI,KAAK1jB,SAAL,KAAmB,MAAlC,EAA0C;MACtC,KAAK,IAAIhR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuZ,EAAE,CAAC5Z,MAAvB,EAA+BK,CAAC,EAAhC,EAAoC;QAChCgwB,MAAM,CAACva,YAAP,CAAoB8D,EAAE,CAACvZ,CAAD,CAAtB,EAA2B00B,OAA3B;MACH;IACJ;;IACD,IAAI,CAACA,OAAD,KAAc,KAAK1jB,SAAL,KAAmB,WAApB,IAAqC,KAAKA,SAAL,KAAmB,YAArE,CAAJ,EAAyF;MACrF,IAAI2G,MAAM,GAAGqY,MAAM,CAAC3b,UAApB;;MACA,KAAK,IAAIrU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuZ,EAAE,CAAC5Z,MAAvB,EAA+BK,CAAC,EAAhC,EAAoC;QAChC,KAAK,IAAI8U,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6C,MAAM,CAAChY,MAA3B,EAAmCmV,CAAC,EAApC,EAAwC;UACpC,IAAI6f,WAAW,GAAI,KAAK3jB,SAAL,KAAmB,WAApB,GAAmC2G,MAAM,CAAC7C,CAAD,CAAN,CAAUqU,WAAV,CAAsByL,WAAtB,KAAsCrb,EAAE,CAACvZ,CAAD,CAAF,CAAM4rB,SAAN,CAAgBgJ,WAAhB,EAAzE,GAAyGjd,MAAM,CAAC7C,CAAD,CAAN,CAAUqU,WAAV,CAAsByL,WAAtB,KAAsCrb,EAAE,CAACvZ,CAAD,CAAF,CAAM4rB,SAAN,CAAgBgJ,WAAhB,EAAjK;;UACA,IAAID,WAAJ,EAAiB;YACb3E,MAAM,CAACva,YAAP,CAAoB8D,EAAE,CAACvZ,CAAD,CAAtB,EAA2B2X,MAAM,CAAC7C,CAAD,CAAjC;YACA;UACH;;UACDkb,MAAM,CAACva,YAAP,CAAoB8D,EAAE,CAACvZ,CAAD,CAAtB,EAA2B2X,MAAM,CAACA,MAAM,CAAChY,MAAR,CAAjC;QACH;MACJ;IACJ;;IACD,IAAI+M,EAAE,GAAG,KAAKwX,KAAL,CAAW6K,MAAX,CAAT;;IACA,IAAI,KAAK1d,QAAL,KAAkB,CAAtB,EAAyB;MACrB,KAAKsI,WAAL,CAAiB,KAAK1K,QAAtB,EAAgC,KAAKpE,MAArC,EAA6C6B,EAA7C,EAAiD,aAAjD,EAAgE,IAAhE;MACA,IAAIokB,KAAK,GAAG,KAAK5M,KAAL,CAAWwQ,OAAX,CAAZ;MACA,IAAIvP,GAAG,GAAGpjB,KAAK,CAAC+uB,KAAD,CAAL,GAAe,KAAK7hB,QAAL,CAActP,MAA7B,GAAsC,KAAKoxB,UAAL,CAAgB,KAAK9hB,QAArB,EAA+B,KAAKpE,MAApC,EAA4CimB,KAA5C,CAAhD;;MACA,KAAK,IAAIhc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGkD,KAAK,CAACrY,MAA1B,EAAkCmV,CAAC,EAAnC,EAAuC;QACnC,IAAI,CAAC/S,KAAK,CAAC2K,EAAD,CAAV,EAAgB;UACZ,IAAIwnB,MAAM,GAAG,KAAK/kB,cAAL,GAAsBiC,UAAU,CAAC1E,EAAD,CAAhC,GAAuCA,EAApD;UACAxK,QAAQ,CAAC,KAAK2I,MAAL,CAAYqG,QAAb,EAAuBgjB,MAAvB,EAA+Blc,KAAK,CAAClD,CAAD,CAApC,CAAR;QACH;;QACD,KAAK7F,QAAL,CAAckK,MAAd,CAAqBgM,GAArB,EAA0B,CAA1B,EAA6BnN,KAAK,CAAClD,CAAD,CAAlC;QACAqQ,GAAG;MACN;IACJ,CAZD,MAaK;MACD,KAAK+L,YAAL,CAAkB,KAAKjiB,QAAvB,EAAiC,KAAKpE,MAAtC,EAA8C6B,EAA9C,EAAkDsL,KAAlD,EAAyD9M,KAAzD;IACH;;IACD,KAAKqH,YAAL,CAAkByd,MAAlB;EACH,CAtDD;;EAuDAnpB,QAAQ,CAAC3H,SAAT,CAAmBs1B,YAAnB,GAAkC,UAAU5iB,KAAV,EAAiB;IAC/C,IAAI3B,MAAM,GAAI2B,KAAK,KAAK,CAAX,GAAgB,KAAK/G,MAArB,GAA8B,KAAKsW,cAAL,CAAoB,KAAKtW,MAAzB,EAAiC+G,KAAK,GAAG,CAAzC,EAA4C,CAA5C,CAA3C;IACA,KAAKhH,cAAL,CAAoBqF,MAApB;EACH,CAHD;;EAIApJ,QAAQ,CAAC3H,SAAT,CAAmB0L,cAAnB,GAAoC,UAAUqF,MAAV,EAAkB;IAClD,IAAII,IAAI,GAAG,KAAKC,mBAAL,CAAyBL,MAAzB,CAAX;IACA,KAAKjG,cAAL,CAAoBa,MAApB,GAA6BwF,IAA7B;IACA,KAAKrG,cAAL,CAAoBa,MAApB,CAA2BgqB,GAA3B,GAAiCxkB,IAAI,CAACtR,cAAL,CAAoB,aAApB,IAAqCsR,IAAI,CAACykB,WAA1C,GAAwD,aAAzF;EACH,CAJD;;EAKAjuB,QAAQ,CAAC3H,SAAT,CAAmB6xB,UAAnB,GAAgC,UAAUhP,GAAV,EAAe9R,MAAf,EAAuBvD,EAAvB,EAA2B;IACvD,IAAIyY,GAAG,GAAG,IAAV;;IACA,KAAK,IAAInlB,CAAC,GAAG,CAAR,EAAWmiB,MAAM,GAAGJ,GAAG,CAACpiB,MAA7B,EAAqCK,CAAC,GAAGmiB,MAAzC,EAAiDniB,CAAC,EAAlD,EAAsD;MAClD,IAAI4U,MAAM,GAAG3S,QAAQ,CAACgO,MAAM,CAACvD,EAAR,EAAYqV,GAAG,CAAC/hB,CAAD,CAAf,CAArB;;MACA,IAAI+hB,GAAG,CAAC/hB,CAAD,CAAH,IAAU4U,MAAV,IAAoBA,MAAM,CAAC3B,QAAP,OAAsBvG,EAA9C,EAAkD;QAC9C,OAAO1M,CAAP;MACH,CAFD,MAGK,IAAI,OAAOiQ,MAAM,CAACqD,KAAd,KAAwB,QAAxB,IAAoC,CAACvR,KAAK,CAACE,QAAQ,CAACgO,MAAM,CAACqD,KAAR,EAAeyO,GAAG,CAAC/hB,CAAD,CAAlB,CAAT,CAA9C,EAAgF;QACjF,IAAIgV,IAAI,GAAG/S,QAAQ,CAACgO,MAAM,CAACqD,KAAR,EAAeyO,GAAG,CAAC/hB,CAAD,CAAlB,CAAnB;QACAmlB,GAAG,GAAG,KAAK4L,UAAL,CAAgB/b,IAAhB,EAAsB,KAAK8M,cAAL,CAAoB7R,MAApB,CAAtB,EAAmDvD,EAAnD,CAAN;;QACA,IAAIyY,GAAG,KAAK,IAAZ,EAAkB;UACd;QACH;MACJ,CANI,MAOA,IAAI,KAAKta,MAAL,CAAY8D,UAAZ,YAAkC9M,WAAlC,IAAiD,CAACE,KAAK,CAACE,QAAQ,CAAC,OAAD,EAAU8f,GAAG,CAAC/hB,CAAD,CAAb,CAAT,CAA3D,EAAwF;QACzF,IAAIqX,KAAK,GAAGpV,QAAQ,CAAC,OAAD,EAAU8f,GAAG,CAAC/hB,CAAD,CAAb,CAApB;QACAmlB,GAAG,GAAG,KAAK4L,UAAL,CAAgB1Z,KAAhB,EAAuB,KAAKyK,cAAL,CAAoB7R,MAApB,CAAvB,EAAoDvD,EAApD,CAAN;;QACA,IAAIyY,GAAG,KAAK,IAAZ,EAAkB;UACd;QACH;MACJ;IACJ;;IACD,OAAOA,GAAP;EACH,CAvBD;;EAwBAte,QAAQ,CAAC3H,SAAT,CAAmBgyB,YAAnB,GAAkC,UAAUnP,GAAV,EAAe9R,MAAf,EAAuBvD,EAAvB,EAA2BsI,IAA3B,EAAiC9J,KAAjC,EAAwC;IACtE,IAAI6pB,OAAJ;;IACA,IAAIhzB,KAAK,CAAC2K,EAAD,CAAT,EAAe;MACXxB,KAAK,GAAGnJ,KAAK,CAACmJ,KAAD,CAAL,GAAe6W,GAAG,CAACpiB,MAAnB,GAA4BuL,KAApC;;MACA,KAAK,IAAIsM,CAAC,GAAG,CAAR,EAAWpD,GAAG,GAAGY,IAAI,CAACrV,MAA3B,EAAmC6X,CAAC,GAAGpD,GAAvC,EAA4CoD,CAAC,EAA7C,EAAiD;QAC7CuK,GAAG,CAAC5I,MAAJ,CAAWjO,KAAX,EAAkB,CAAlB,EAAqB8J,IAAI,CAACwC,CAAD,CAAzB;QACAtM,KAAK;MACR;;MACD,OAAO6pB,OAAP;IACH;;IACD,KAAK,IAAI/0B,CAAC,GAAG,CAAR,EAAWmiB,MAAM,GAAGJ,GAAG,CAACpiB,MAA7B,EAAqCK,CAAC,GAAGmiB,MAAzC,EAAiDniB,CAAC,EAAlD,EAAsD;MAClD,IAAI4U,MAAM,GAAG3S,QAAQ,CAACgO,MAAM,CAACvD,EAAR,EAAYqV,GAAG,CAAC/hB,CAAD,CAAf,CAArB;;MACA,IAAI+hB,GAAG,CAAC/hB,CAAD,CAAH,IAAU4U,MAAV,IAAoBA,MAAM,CAAC3B,QAAP,OAAsBvG,EAA9C,EAAkD;QAC9C,IAAK,OAAOuD,MAAM,CAACqD,KAAd,KAAwB,QAAxB,IAAqCyO,GAAG,CAAC/hB,CAAD,CAAH,CAAOjB,cAAP,CAAsBkR,MAAM,CAACqD,KAA7B,KAAuCyO,GAAG,CAAC/hB,CAAD,CAAH,CAAOiQ,MAAM,CAACqD,KAAd,MAAyB,IAAtG,IACE,KAAKzI,MAAL,CAAY8D,UAAZ,YAAkC9M,WAAnC,IAAmDkgB,GAAG,CAAC/hB,CAAD,CAAH,CAAOjB,cAAP,CAAsB,OAAtB,CADxD,EACyF;UACrF,IAAIQ,GAAG,GAAI,OAAO0Q,MAAM,CAACqD,KAAd,KAAwB,QAAzB,GAAqCrD,MAAM,CAACqD,KAA5C,GAAoD,OAA9D;UACA,IAAID,SAAS,GAAGpR,QAAQ,CAAC1C,GAAD,EAAMwiB,GAAG,CAAC/hB,CAAD,CAAT,CAAxB;;UACA,IAAI+B,KAAK,CAACsR,SAAD,CAAT,EAAsB;YAClBA,SAAS,GAAG,EAAZ;UACH;;UACDnI,KAAK,GAAGnJ,KAAK,CAACmJ,KAAD,CAAL,GAAemI,SAAS,CAAC1T,MAAzB,GAAkCuL,KAA1C;;UACA,KAAK,IAAIsM,CAAC,GAAG,CAAR,EAAWpD,GAAG,GAAGY,IAAI,CAACrV,MAA3B,EAAmC6X,CAAC,GAAGpD,GAAvC,EAA4CoD,CAAC,EAA7C,EAAiD;YAC7CnE,SAAS,CAAC8F,MAAV,CAAiBjO,KAAjB,EAAwB,CAAxB,EAA2B8J,IAAI,CAACwC,CAAD,CAA/B;YACAtM,KAAK;UACR;QACJ,CAZD,MAaK;UACD,IAAI3L,GAAG,GAAI,OAAO0Q,MAAM,CAACqD,KAAd,KAAwB,QAAzB,GAAqCrD,MAAM,CAACqD,KAA5C,GAAoD,OAA9D;UACAyO,GAAG,CAAC/hB,CAAD,CAAH,CAAOT,GAAP,IAAcyV,IAAd;QACH;;QACD,OAAO,IAAP;MACH,CAnBD,MAoBK,IAAI,OAAO/E,MAAM,CAACqD,KAAd,KAAwB,QAAxB,IAAoC,CAACvR,KAAK,CAACE,QAAQ,CAACgO,MAAM,CAACqD,KAAR,EAAeyO,GAAG,CAAC/hB,CAAD,CAAlB,CAAT,CAA9C,EAAgF;QACjF,IAAIg1B,QAAQ,GAAG/yB,QAAQ,CAACgO,MAAM,CAACqD,KAAR,EAAeyO,GAAG,CAAC/hB,CAAD,CAAlB,CAAvB;QACA+0B,OAAO,GAAG,KAAK7D,YAAL,CAAkB8D,QAAlB,EAA4B,KAAKlT,cAAL,CAAoB7R,MAApB,CAA5B,EAAyDvD,EAAzD,EAA6DsI,IAA7D,EAAmE9J,KAAnE,CAAV;;QACA,IAAI6pB,OAAO,KAAKtmB,SAAhB,EAA2B;UACvB;QACH;MACJ,CANI,MAOA,IAAK,KAAK5D,MAAL,CAAY8D,UAAZ,YAAkC9M,WAAnC,IAAmD,CAACE,KAAK,CAACE,QAAQ,CAAC,OAAD,EAAU8f,GAAG,CAAC/hB,CAAD,CAAb,CAAT,CAA7D,EAA0F;QAC3F,IAAIqT,SAAS,GAAGpR,QAAQ,CAAC,OAAD,EAAU8f,GAAG,CAAC/hB,CAAD,CAAb,CAAxB;QACA+0B,OAAO,GAAG,KAAK7D,YAAL,CAAkB7d,SAAlB,EAA6B,KAAKyO,cAAL,CAAoB7R,MAApB,CAA7B,EAA0DvD,EAA1D,EAA8DsI,IAA9D,EAAoE9J,KAApE,CAAV;;QACA,IAAI6pB,OAAO,KAAKtmB,SAAhB,EAA2B;UACvB;QACH;MACJ;IACJ;;IACD,OAAOsmB,OAAP;EACH,CAhDD;;EAiDAluB,QAAQ,CAAC3H,SAAT,CAAmBwiB,eAAnB,GAAqC,UAAU1J,KAAV,EAAiB;IAClD,IAAIzQ,UAAU,GAAG,KAAK0tB,QAAL,CAAcjd,KAAd,CAAjB;IACA,IAAIkd,OAAO,GAAG,KAAKC,YAAL,CAAkB5tB,UAAlB,CAAd;IACA,KAAKD,QAAL,GAAgB,EAAhB;;IACA,KAAK,IAAItH,CAAC,GAAG,CAAR,EAAWoU,GAAG,GAAG8gB,OAAO,CAACv1B,MAA9B,EAAsCK,CAAC,GAAGoU,GAA1C,EAA+CpU,CAAC,EAAhD,EAAoD;MAChD,IAAI0M,EAAE,GAAGwoB,OAAO,CAACl1B,CAAD,CAAP,CAAW,KAAK6K,MAAL,CAAY6B,EAAvB,EAA2BuG,QAA3B,EAAT;;MACA,IAAIvG,EAAE,IAAI,KAAKrF,WAAL,CAAiBsJ,OAAjB,CAAyBjE,EAAzB,MAAiC,CAAC,CAA5C,EAA+C;QAC3C,KAAKrF,WAAL,CAAiBqH,IAAjB,CAAsBhC,EAAtB;MACH;;MACD,IAAI8M,KAAK,GAAG,KAAKrY,UAAL,CAAgBuL,EAAhB,CAAZ;;MACA,IAAI8M,KAAJ,EAAW;QACPA,KAAK,CAAC/M,YAAN,CAAmB,eAAnB,EAAoC,MAApC;QACArL,QAAQ,CAAC,CAACoY,KAAD,CAAD,EAAUzU,OAAV,CAAR;MACH;IACJ;EACJ,CAfD;;EAgBA8B,QAAQ,CAAC3H,SAAT,CAAmBk2B,cAAnB,GAAoC,UAAUpd,KAAV,EAAiB;IACjD,IAAIqd,QAAQ,GAAG,KAAKJ,QAAL,CAAcjd,KAAd,CAAf;;IACA,KAAK,IAAIhY,CAAC,GAAG,CAAR,EAAWoU,GAAG,GAAGihB,QAAQ,CAAC11B,MAA/B,EAAuCK,CAAC,GAAGoU,GAA3C,EAAgDpU,CAAC,EAAjD,EAAqD;MACjD,IAAIwZ,KAAK,GAAG,KAAKrY,UAAL,CAAgBk0B,QAAQ,CAACr1B,CAAD,CAAxB,CAAZ;MACA,IAAI0M,EAAE,GAAG2oB,QAAQ,CAACr1B,CAAD,CAAjB;;MACA,IAAI0M,EAAE,IAAI,KAAKrF,WAAL,CAAiBsJ,OAAjB,CAAyBjE,EAAzB,MAAiC,CAAC,CAA5C,EAA+C;QAC3C,KAAKrF,WAAL,CAAiB8R,MAAjB,CAAwB,KAAK9R,WAAL,CAAiBsJ,OAAjB,CAAyBjE,EAAzB,CAAxB,EAAsD,CAAtD;MACH;;MACD,IAAI8M,KAAJ,EAAW;QACPA,KAAK,CAACtL,eAAN,CAAsB,eAAtB;QACA7M,WAAW,CAAC,CAACmY,KAAD,CAAD,EAAUzU,OAAV,CAAX;MACH;IACJ;EACJ,CAbD;;EAcA8B,QAAQ,CAAC3H,SAAT,CAAmB+1B,QAAnB,GAA8B,UAAUjd,KAAV,EAAiB;IAC3C,IAAIkd,OAAO,GAAG,EAAd;;IACA,KAAK,IAAIl1B,CAAC,GAAG,CAAR,EAAWoU,GAAG,GAAG4D,KAAK,CAACrY,MAA5B,EAAoCK,CAAC,GAAGoU,GAAxC,EAA6CpU,CAAC,EAA9C,EAAkD;MAC9C,IAAI0M,EAAE,GAAG,KAAK,CAAd;;MACA,IAAI,OAAOsL,KAAK,CAAChY,CAAD,CAAZ,IAAmB,QAAvB,EAAiC;QAC7B0M,EAAE,GAAIsL,KAAK,CAAChY,CAAD,CAAN,GAAagY,KAAK,CAAChY,CAAD,CAAL,CAASiT,QAAT,EAAb,GAAmC,IAAxC;MACH,CAFD,MAGK,IAAI,OAAO+E,KAAK,CAAChY,CAAD,CAAZ,KAAoB,QAAxB,EAAkC;QACnC0M,EAAE,GAAGsL,KAAK,CAAChY,CAAD,CAAL,GAAWgY,KAAK,CAAChY,CAAD,CAAL,CAAS6U,YAAT,CAAsB,UAAtB,EAAkC5B,QAAlC,EAAX,GAA0D,IAA/D;MACH;;MACD,IAAIiiB,OAAO,CAACvkB,OAAR,CAAgBjE,EAAhB,KAAuB,CAAC,CAA5B,EAA+B;QAC3BwoB,OAAO,CAACxmB,IAAR,CAAahC,EAAb;MACH;IACJ;;IACD,OAAOwoB,OAAP;EACH,CAfD;;EAgBAruB,QAAQ,CAAC3H,SAAT,CAAmBi2B,YAAnB,GAAkC,UAAUxgB,IAAV,EAAgB;IAC9C,IAAI3N,KAAK,GAAG,IAAZ;;IACA,IAAI,KAAKqK,QAAL,KAAkB,CAAtB,EAAyB;MACrB,KAAK/J,QAAL,GAAgB,KAAK2H,QAAL,CAAcqmB,MAAd,CAAqB,UAAUtgB,IAAV,EAAgB;QACjD,OAAOL,IAAI,CAAChE,OAAL,CAAaqE,IAAI,CAAChO,KAAK,CAAC6D,MAAN,CAAa6B,EAAd,CAAJ,GAAwBsI,IAAI,CAAChO,KAAK,CAAC6D,MAAN,CAAa6B,EAAd,CAAJ,CAAsBuG,QAAtB,EAAxB,GAA2D,IAAxE,MAAkF,CAAC,CAA1F;MACH,CAFe,CAAhB;IAGH,CAJD,MAKK,IAAI,KAAK5B,QAAL,KAAkB,CAAtB,EAAyB;MAC1B,KAAK,IAAImG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKvI,QAAL,CAActP,MAAlC,EAA0C6X,CAAC,EAA3C,EAA+C;QAC3C,IAAI9K,EAAE,GAAG,KAAKuC,QAAL,CAAcuI,CAAd,EAAiB,KAAK3M,MAAL,CAAY6B,EAA7B,IAAmC,KAAKuC,QAAL,CAAcuI,CAAd,EAAiB,KAAK3M,MAAL,CAAY6B,EAA7B,EAAiCuG,QAAjC,EAAnC,GAAiF,IAA1F;;QACA,IAAI0B,IAAI,CAAChE,OAAL,CAAajE,EAAb,MAAqB,CAAC,CAA1B,EAA6B;UACzB,KAAKpF,QAAL,CAAcoH,IAAd,CAAmB,KAAKO,QAAL,CAAcuI,CAAd,CAAnB;QACH;;QACD,IAAIzD,UAAU,GAAG9R,QAAQ,CAAC,KAAK4I,MAAL,CAAYyI,KAAZ,CAAkBL,QAAlB,EAAD,EAA+B,KAAKhE,QAAL,CAAcuI,CAAd,CAA/B,CAAzB;;QACA,IAAIzD,UAAJ,EAAgB;UACZ,KAAKwhB,iBAAL,CAAuBxhB,UAAvB,EAAmCY,IAAnC;QACH;MACJ;IACJ;;IACD,OAAO,KAAKrN,QAAZ;EACH,CApBD;;EAqBAT,QAAQ,CAAC3H,SAAT,CAAmBq2B,iBAAnB,GAAuC,UAAUtmB,QAAV,EAAoB+I,KAApB,EAA2B;IAC9D,KAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGvI,QAAQ,CAACtP,MAA7B,EAAqC6X,CAAC,EAAtC,EAA0C;MACtC,IAAI9K,EAAE,GAAGuC,QAAQ,CAACuI,CAAD,CAAR,CAAY,KAAK3M,MAAL,CAAY6B,EAAxB,IAA8BuC,QAAQ,CAACuI,CAAD,CAAR,CAAY,KAAK3M,MAAL,CAAY6B,EAAxB,EAA4BuG,QAA5B,EAA9B,GAAuE,IAAhF;;MACA,IAAI+E,KAAK,CAACrH,OAAN,CAAcjE,EAAd,MAAsB,CAAC,CAA3B,EAA8B;QAC1B,KAAKpF,QAAL,CAAcoH,IAAd,CAAmBO,QAAQ,CAACuI,CAAD,CAA3B;MACH;;MACD,IAAIzD,UAAU,GAAG9R,QAAQ,CAAC,KAAK4I,MAAL,CAAYyI,KAAZ,CAAkBL,QAAlB,EAAD,EAA+BhE,QAAQ,CAACuI,CAAD,CAAvC,CAAzB;;MACA,IAAIzD,UAAJ,EAAgB;QACZ,KAAKwhB,iBAAL,CAAuBxhB,UAAvB,EAAmCiE,KAAnC;MACH;IACJ;EACJ,CAXD;;EAYAnR,QAAQ,CAAC3H,SAAT,CAAmBiM,aAAnB,GAAmC,YAAY;IAC3C,IAAI+N,GAAG,GAAG5X,OAAO,CAAC,KAAKyF,OAAN,EAAe,MAAMrB,MAArB,CAAjB;IACA,KAAK4P,UAAL,GAAkBvT,KAAK,CAACmX,GAAD,CAAL,GAAa,EAAb,GAAkBvT,KAApC;EACH,CAHD;;EAIAkB,QAAQ,CAAC3H,SAAT,CAAmBs2B,iBAAnB,GAAuC,YAAY;IAC/C,KAAKC,WAAL,CAAiB,KAAKxmB,QAAtB,EAAgC,KAAKpE,MAArC,EAA6C,CAAC,UAAD,EAAa,UAAb,CAA7C;IACA,IAAI6qB,QAAQ,GAAG,KAAKtqB,aAApB;;IACA,KAAK,IAAIuqB,CAAC,GAAG,CAAR,EAAWC,MAAM,GAAGF,QAAQ,CAAC/1B,MAAlC,EAA0Cg2B,CAAC,GAAGC,MAA9C,EAAsDD,CAAC,EAAvD,EAA2D;MACvD,KAAKhc,WAAL,CAAiB,KAAK1K,QAAtB,EAAgC,KAAKpE,MAArC,EAA6C6qB,QAAQ,CAACC,CAAD,CAArD,EAA0D,UAA1D,EAAsE,IAAtE;IACH;;IACD,IAAIE,MAAM,GAAG,KAAKtqB,aAAlB;;IACA,KAAK,IAAIiM,CAAC,GAAG,CAAR,EAAWse,OAAO,GAAGD,MAAM,CAACl2B,MAAjC,EAAyC6X,CAAC,GAAGse,OAA7C,EAAsDte,CAAC,EAAvD,EAA2D;MACvD,KAAKmC,WAAL,CAAiB,KAAK1K,QAAtB,EAAgC,KAAKpE,MAArC,EAA6CgrB,MAAM,CAACre,CAAD,CAAnD,EAAwD,UAAxD,EAAoE,IAApE;IACH;;IACD,IAAI,KAAK7E,YAAT,EAAuB;MACnB,KAAK8iB,WAAL,CAAiB,KAAKxmB,QAAtB,EAAgC,KAAKpE,MAArC,EAA6C,CAAC,WAAD,CAA7C;MACA,IAAIkrB,MAAM,GAAG,KAAKzqB,YAAlB;;MACA,KAAK,IAAI0qB,CAAC,GAAG,CAAR,EAAWF,OAAO,GAAGC,MAAM,CAACp2B,MAAjC,EAAyCq2B,CAAC,GAAGF,OAA7C,EAAsDE,CAAC,EAAvD,EAA2D;QACvD,KAAKrc,WAAL,CAAiB,KAAK1K,QAAtB,EAAgC,KAAKpE,MAArC,EAA6CkrB,MAAM,CAACC,CAAD,CAAnD,EAAwD,WAAxD,EAAqE,IAArE;MACH;IACJ;EACJ,CAjBD;;EAkBAnvB,QAAQ,CAAC3H,SAAT,CAAmBu2B,WAAnB,GAAiC,UAAU1T,GAAV,EAAe9R,MAAf,EAAuBgmB,KAAvB,EAA8B;IAC3D,IAAIl0B,KAAK,CAACggB,GAAD,CAAL,IAAchgB,KAAK,CAACkO,MAAD,CAAvB,EAAiC;MAC7B;IACH;;IACD,KAAK,IAAIjQ,CAAC,GAAG,CAAR,EAAWmiB,MAAM,GAAGJ,GAAG,CAACpiB,MAA7B,EAAqCK,CAAC,GAAGmiB,MAAzC,EAAiDniB,CAAC,EAAlD,EAAsD;MAClD,KAAK,IAAI8U,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmhB,KAAK,CAACt2B,MAA1B,EAAkCmV,CAAC,EAAnC,EAAuC;QACnC,IAAIohB,KAAK,GAAG,KAAKC,aAAL,CAAmBlmB,MAAnB,EAA2BgmB,KAAK,CAACnhB,CAAD,CAAhC,CAAZ;;QACA,IAAI,CAAC/S,KAAK,CAACggB,GAAG,CAAC/hB,CAAD,CAAH,CAAOk2B,KAAP,CAAD,CAAV,EAA2B;UACvB,OAAOnU,GAAG,CAAC/hB,CAAD,CAAH,CAAOk2B,KAAP,CAAP;QACH;MACJ;;MACD,IAAI,OAAOjmB,MAAM,CAACqD,KAAd,KAAwB,QAAxB,IAAoC,CAACvR,KAAK,CAACE,QAAQ,CAACgO,MAAM,CAACqD,KAAR,EAAeyO,GAAG,CAAC/hB,CAAD,CAAlB,CAAT,CAA9C,EAAgF;QAC5E,KAAKy1B,WAAL,CAAiBxzB,QAAQ,CAACgO,MAAM,CAACqD,KAAR,EAAeyO,GAAG,CAAC/hB,CAAD,CAAlB,CAAzB,EAAiD,KAAK8hB,cAAL,CAAoB7R,MAApB,CAAjD,EAA8EgmB,KAA9E;MACH,CAFD,MAGK,IAAI,KAAKprB,MAAL,CAAY8D,UAAZ,YAAkC9M,WAAlC,IAAiD,CAACE,KAAK,CAACE,QAAQ,CAAC,OAAD,EAAU8f,GAAG,CAAC/hB,CAAD,CAAb,CAAT,CAA3D,EAAwF;QACzF,KAAKy1B,WAAL,CAAiBxzB,QAAQ,CAAC,OAAD,EAAU8f,GAAG,CAAC/hB,CAAD,CAAb,CAAzB,EAA4C,KAAK8hB,cAAL,CAAoB7R,MAApB,CAA5C,EAAyEgmB,KAAzE;MACH;IACJ;EACJ,CAlBD;;EAmBApvB,QAAQ,CAAC3H,SAAT,CAAmBi3B,aAAnB,GAAmC,UAAUlmB,MAAV,EAAkBmmB,SAAlB,EAA6B;IAC5D,QAAQA,SAAR;MACI,KAAK,UAAL;QACI,OAAO,CAACr0B,KAAK,CAACkO,MAAM,CAACkG,QAAR,CAAN,GAA0BlG,MAAM,CAACkG,QAAjC,GAA4C,UAAnD;;MACJ,KAAK,UAAL;QACI,OAAO,CAACpU,KAAK,CAACkO,MAAM,CAACmG,QAAR,CAAN,GAA0BnG,MAAM,CAACmG,QAAjC,GAA4C,UAAnD;;MACJ,KAAK,WAAL;QACI,OAAO,CAACrU,KAAK,CAACkO,MAAM,CAAC8C,SAAR,CAAN,GAA2B9C,MAAM,CAAC8C,SAAlC,GAA8C,WAArD;;MACJ,KAAK,aAAL;QACI,OAAO,CAAChR,KAAK,CAACkO,MAAM,CAACkD,WAAR,CAAN,GAA6BlD,MAAM,CAACkD,WAApC,GAAkD,aAAzD;;MACJ;QACI,OAAOijB,SAAP;IAVR;EAYH,CAbD;;EAcAvvB,QAAQ,CAAC3H,SAAT,CAAmBya,WAAnB,GAAiC,UAAUoI,GAAV,EAAe9R,MAAf,EAAuBvD,EAAvB,EAA2BnN,GAA3B,EAAgC2Q,KAAhC,EAAuC;IACpE,IAAImE,UAAJ;;IACA,IAAItS,KAAK,CAAC2K,EAAD,CAAT,EAAe;MACX;IACH,CAFD,MAGK,IAAI,KAAK2E,QAAL,KAAkB,CAAtB,EAAyB;MAC1B,IAAI4iB,KAAK,GAAG,KAAK9kB,cAAL,GAAsBiC,UAAU,CAAC1E,EAAD,CAAhC,GAAuCA,EAAnD;MACA,IAAImG,UAAU,GAAG,IAAIhR,WAAJ,CAAgB,KAAKoN,QAArB,EAA+B6D,YAA/B,CAA4C,IAAIhR,KAAJ,GAAYqP,KAAZ,CAAkBlB,MAAM,CAACvD,EAAzB,EAA6B,OAA7B,EAAsCunB,KAAtC,EAA6C,KAA7C,CAA5C,CAAjB;MACA/xB,QAAQ,CAAC,KAAKi0B,aAAL,CAAmBlmB,MAAnB,EAA2B1Q,GAA3B,CAAD,EAAkC2Q,KAAlC,EAAyC2C,UAAU,CAAC,CAAD,CAAnD,CAAR;IACH,CAJI,MAKA;MACD,KAAKge,gBAAL,CAAsB9O,GAAtB,EAA2B9R,MAA3B,EAAmCvD,EAAnC,EAAuCnN,GAAvC,EAA4C2Q,KAA5C;IACH;EACJ,CAbD;;EAcArJ,QAAQ,CAAC3H,SAAT,CAAmB2xB,gBAAnB,GAAsC,UAAU9O,GAAV,EAAe9R,MAAf,EAAuBvD,EAAvB,EAA2BnN,GAA3B,EAAgC2Q,KAAhC,EAAuClP,MAAvC,EAA+C;IACjF,IAAI4vB,WAAJ;;IACA,IAAI7uB,KAAK,CAACggB,GAAD,CAAT,EAAgB;MACZ,OAAO6O,WAAP;IACH;;IACD,KAAK,IAAI5wB,CAAC,GAAG,CAAR,EAAWmiB,MAAM,GAAGJ,GAAG,CAACpiB,MAA7B,EAAqCK,CAAC,GAAGmiB,MAAzC,EAAiDniB,CAAC,EAAlD,EAAsD;MAClD,IAAI4U,MAAM,GAAG3S,QAAQ,CAACgO,MAAM,CAACvD,EAAR,EAAYqV,GAAG,CAAC/hB,CAAD,CAAf,CAArB;;MACA,IAAI+hB,GAAG,CAAC/hB,CAAD,CAAH,IAAU4U,MAAV,IAAoBA,MAAM,CAAC3B,QAAP,OAAsBvG,EAA9C,EAAkD;QAC9C,IAAI1L,MAAJ,EAAY;UACR4vB,WAAW,GAAG7O,GAAG,CAAC5I,MAAJ,CAAWnZ,CAAX,EAAc,CAAd,CAAd;QACH,CAFD,MAGK;UACDkC,QAAQ,CAAC,KAAKi0B,aAAL,CAAmBlmB,MAAnB,EAA2B1Q,GAA3B,CAAD,EAAkC2Q,KAAlC,EAAyC6R,GAAG,CAAC/hB,CAAD,CAA5C,CAAR;UACA4wB,WAAW,GAAG,EAAd;QACH;;QACD,OAAOA,WAAP;MACH,CATD,MAUK,IAAI,OAAO3gB,MAAM,CAACqD,KAAd,KAAwB,QAAxB,IAAoC,CAACvR,KAAK,CAACE,QAAQ,CAACgO,MAAM,CAACqD,KAAR,EAAeyO,GAAG,CAAC/hB,CAAD,CAAlB,CAAT,CAA9C,EAAgF;QACjF,IAAIqT,SAAS,GAAGpR,QAAQ,CAACgO,MAAM,CAACqD,KAAR,EAAeyO,GAAG,CAAC/hB,CAAD,CAAlB,CAAxB;QACA4wB,WAAW,GAAG,KAAKC,gBAAL,CAAsBxd,SAAtB,EAAiC,KAAKyO,cAAL,CAAoB7R,MAApB,CAAjC,EAA8DvD,EAA9D,EAAkEnN,GAAlE,EAAuE2Q,KAAvE,EAA8ElP,MAA9E,CAAd;;QACA,IAAI4vB,WAAW,KAAKniB,SAApB,EAA+B;UAC3B;QACH;MACJ,CANI,MAOA,IAAI,KAAK5D,MAAL,CAAY8D,UAAZ,YAAkC9M,WAAlC,IAAiD,CAACE,KAAK,CAACE,QAAQ,CAAC,OAAD,EAAU8f,GAAG,CAAC/hB,CAAD,CAAb,CAAT,CAA3D,EAAwF;QACzF,IAAI+T,UAAU,GAAG9R,QAAQ,CAAC,OAAD,EAAU8f,GAAG,CAAC/hB,CAAD,CAAb,CAAzB;QACA4wB,WAAW,GAAG,KAAKC,gBAAL,CAAsB9c,UAAtB,EAAkC,KAAK+N,cAAL,CAAoB7R,MAApB,CAAlC,EAA+DvD,EAA/D,EAAmEnN,GAAnE,EAAwE2Q,KAAxE,EAA+ElP,MAA/E,CAAd;;QACA,IAAI4vB,WAAW,KAAKniB,SAApB,EAA+B;UAC3B;QACH;MACJ;IACJ;;IACD,OAAOmiB,WAAP;EACH,CAjCD;;EAkCA/pB,QAAQ,CAAC3H,SAAT,CAAmBwsB,YAAnB,GAAkC,YAAY;IAC1C,KAAK3P,oBAAL;IACA,IAAIvF,SAAS,GAAG;MAAExB,IAAI,EAAE,KAAK/F;IAAb,CAAhB;IACA,KAAKQ,OAAL,CAAa,mBAAb,EAAkC+G,SAAlC;EACH,CAJD;;EAKA3P,QAAQ,CAAC3H,SAAT,CAAmB8rB,eAAnB,GAAqC,UAAU3G,MAAV,EAAkB;IACnDzjB,YAAY,CAACyM,GAAb,CAAiBgX,MAAjB,EAAyB,MAAzB,EAAiC,KAAK8G,aAAtC,EAAqD,IAArD;EACH,CAFD;;EAGAtkB,QAAQ,CAAC3H,SAAT,CAAmBiN,iBAAnB,GAAuC,UAAU4f,MAAV,EAAkB;IACrD,IAAI/kB,KAAK,GAAG,IAAZ;;IACA,IAAI+kB,MAAM,IAAI,CAAC,KAAK9f,QAApB,EAA8B;MAC1B,IAAIoqB,OAAO,GAAG,IAAd;MACA,KAAKC,YAAL,GAAoB,IAAIt0B,KAAJ,CAAU,KAAK+E,OAAf,EAAwB;QACxCwvB,GAAG,EAAE,UAAUhsB,CAAV,EAAa;UACd,IAAIvD,KAAK,CAACwvB,cAAN,CAAqBjsB,CAArB,KAA2BA,CAAC,CAACksB,QAAF,KAAe,CAA9C,EAAiD;YAC7ClsB,CAAC,CAACmT,aAAF,CAAgB+G,cAAhB;YACA4R,OAAO,CAACtM,cAAR,CAAuBxf,CAAC,CAACmT,aAAzB;UACH;QACJ;MANuC,CAAxB,CAApB;IAQH,CAVD,MAWK;MACD,IAAI,KAAK4Y,YAAT,EAAuB;QACnB,KAAKA,YAAL,CAAkB5E,OAAlB;MACH;IACJ;EACJ,CAlBD;;EAmBA7qB,QAAQ,CAAC3H,SAAT,CAAmBw3B,cAAnB,GAAoC,UAAU3K,MAAV,EAAkB;IAClD,IAAIA,MAAJ,EAAY;MACR,IAAI4K,OAAO,GAAG,IAAd;MACA,KAAKC,aAAL,GAAqB,IAAI50B,KAAJ,CAAU,KAAK+E,OAAf,EAAwB;QACzCwvB,GAAG,EAAE,UAAUhsB,CAAV,EAAa;UACdosB,OAAO,CAACnZ,YAAR,CAAqBjT,CAArB;QACH;MAHwC,CAAxB,CAArB;IAKH,CAPD,MAQK;MACD,IAAI,KAAKqsB,aAAT,EAAwB;QACpB,KAAKA,aAAL,CAAmBlF,OAAnB;MACH;IACJ;EACJ,CAdD;;EAeA7qB,QAAQ,CAAC3H,SAAT,CAAmB23B,iBAAnB,GAAuC,UAAU9K,MAAV,EAAkB;IACrD,IAAI/kB,KAAK,GAAG,IAAZ;;IACA,IAAI+kB,MAAJ,EAAY;MACR,IAAI+K,OAAO,GAAG,IAAd;MACA,KAAKC,cAAL,GAAsB,IAAI/0B,KAAJ,CAAU,KAAK+E,OAAf,EAAwB;QAC1CwvB,GAAG,EAAE,UAAUhsB,CAAV,EAAa;UACd,IAAI,CAACvD,KAAK,CAAC0c,YAAN,KAAuB,OAAvB,IAAmC1c,KAAK,CAAC0c,YAAN,KAAuB,UAAvB,IAAqC1c,KAAK,CAACwvB,cAAN,CAAqBjsB,CAArB,CAArC,IAAgEA,CAAC,CAACksB,QAAF,KAAe,CAAnH,KACGlsB,CAAC,CAACmT,aAAF,CAAgBE,KAAhB,KAA0B,CADjC,EACoC;YAChCkZ,OAAO,CAACjT,aAAR,CAAsBtZ,CAAtB;UACH;QACJ;MANyC,CAAxB,CAAtB;IAQH,CAVD,MAWK;MACD,IAAI,KAAKwsB,cAAT,EAAyB;QACrB,KAAKA,cAAL,CAAoBrF,OAApB;MACH;IACJ;EACJ,CAlBD;;EAmBA7qB,QAAQ,CAAC3H,SAAT,CAAmB83B,gBAAnB,GAAsC,UAAUzsB,CAAV,EAAa;IAC/C,KAAK1C,eAAL,GAAuB,IAAvB;;IACA,IAAI0C,CAAC,CAACsY,QAAF,IAActY,CAAC,CAACgY,OAApB,EAA6B;MACzBhY,CAAC,CAACka,cAAF;IACH;;IACD,IAAIla,CAAC,CAACgY,OAAF,IAAa,KAAKvM,mBAAtB,EAA2C;MACvCpV,YAAY,CAACyM,GAAb,CAAiB,KAAKtG,OAAtB,EAA+B,aAA/B,EAA8C,KAAK4W,kBAAnD,EAAuE,IAAvE;IACH;EACJ,CARD;;EASA;;EACA9W,QAAQ,CAAC3H,SAAT,CAAmBye,kBAAnB,GAAwC,UAAUpT,CAAV,EAAa;IACjDA,CAAC,CAACka,cAAF;EACH,CAFD;;EAGA5d,QAAQ,CAAC3H,SAAT,CAAmBqN,UAAnB,GAAgC,YAAY;IACxC3L,YAAY,CAACyM,GAAb,CAAiB,KAAKtG,OAAtB,EAA+B,WAA/B,EAA4C,KAAKiwB,gBAAjD,EAAmE,IAAnE;IACA,KAAKN,cAAL,CAAoB,IAApB;;IACA,IAAI,KAAKhT,YAAL,KAAsB,MAA1B,EAAkC;MAC9B,KAAKmT,iBAAL,CAAuB,IAAvB;IACH;;IACDj2B,YAAY,CAACyM,GAAb,CAAiB,KAAKtG,OAAtB,EAA+B,OAA/B,EAAwC,KAAKuhB,OAA7C,EAAsD,IAAtD;IACA1nB,YAAY,CAACyM,GAAb,CAAiB,KAAKtG,OAAtB,EAA+B,MAA/B,EAAuC,KAAKwhB,QAA5C,EAAsD,IAAtD;IACA3nB,YAAY,CAACyM,GAAb,CAAiB,KAAKtG,OAAtB,EAA+B,WAA/B,EAA4C,KAAKyhB,WAAjD,EAA8D,IAA9D;IACA5nB,YAAY,CAACyM,GAAb,CAAiB,KAAKtG,OAAtB,EAA+B,UAA/B,EAA2C,KAAK4hB,YAAhD,EAA8D,IAA9D;IACA,KAAKsO,cAAL,GAAsB,IAAIp2B,cAAJ,CAAmB,KAAKkG,OAAxB,EAAiC;MACnDmwB,SAAS,EAAE,KAAK9S,gBAAL,CAAsB+S,IAAtB,CAA2B,IAA3B,CADwC;MAEnD9uB,UAAU,EAAE,KAAKA,UAFkC;MAGnD+uB,SAAS,EAAE;IAHwC,CAAjC,CAAtB;EAKH,CAfD;;EAgBAvwB,QAAQ,CAAC3H,SAAT,CAAmBm4B,YAAnB,GAAkC,YAAY;IAC1Cz2B,YAAY,CAACI,MAAb,CAAoB,KAAK+F,OAAzB,EAAkC,WAAlC,EAA+C,KAAKiwB,gBAApD;IACA,KAAKN,cAAL,CAAoB,KAApB;IACA,KAAKG,iBAAL,CAAuB,KAAvB;IACAj2B,YAAY,CAACI,MAAb,CAAoB,KAAK+F,OAAzB,EAAkC,OAAlC,EAA2C,KAAKuhB,OAAhD;IACA1nB,YAAY,CAACI,MAAb,CAAoB,KAAK+F,OAAzB,EAAkC,MAAlC,EAA0C,KAAKwhB,QAA/C;IACA3nB,YAAY,CAACI,MAAb,CAAoB,KAAK+F,OAAzB,EAAkC,WAAlC,EAA+C,KAAKyhB,WAApD;IACA5nB,YAAY,CAACI,MAAb,CAAoB,KAAK+F,OAAzB,EAAkC,UAAlC,EAA8C,KAAK4hB,YAAnD;;IACA,IAAI,CAAC,KAAK1c,QAAV,EAAoB;MAChB,KAAKgrB,cAAL,CAAoBvF,OAApB;IACH;EACJ,CAXD;;EAYA7qB,QAAQ,CAAC3H,SAAT,CAAmB+hB,OAAnB,GAA6B,UAAUla,OAAV,EAAmB0G,QAAnB,EAA6B;IACtD,IAAI6pB,OAAO,GAAG,EAAd;IACA,IAAIC,EAAE,GAAGxwB,OAAO,CAACiiB,UAAjB;;IACA,OAAO,CAACjnB,KAAK,CAACw1B,EAAD,CAAb,EAAmB;MACf,IAAIh2B,OAAO,CAACg2B,EAAD,EAAK9pB,QAAL,CAAX,EAA2B;QACvB6pB,OAAO,CAAC5oB,IAAR,CAAa6oB,EAAb;MACH;;MACDA,EAAE,GAAGA,EAAE,CAACvO,UAAR;IACH;;IACD,OAAOsO,OAAP;EACH,CAVD;;EAWAzwB,QAAQ,CAAC3H,SAAT,CAAmBs3B,cAAnB,GAAoC,UAAUjsB,CAAV,EAAa;IAC7C,IAAIjL,MAAM,GAAGiL,CAAC,CAACmT,aAAF,CAAgBpe,MAA7B;IACA,IAAIk4B,SAAJ;;IACA,IAAIl4B,MAAM,IAAIiL,CAAC,CAACksB,QAAhB,EAA0B;MACtB,IAAIlsB,CAAC,CAACksB,QAAF,KAAe,CAAnB,EAAsB;QAClB,KAAKgB,QAAL,GAAgBn2B,OAAO,CAAChC,MAAD,EAAS,MAAM2D,QAAf,CAAvB;MACH,CAFD,MAGK,IAAIsH,CAAC,CAACksB,QAAF,KAAe,CAAnB,EAAsB;QACvBe,SAAS,GAAGl2B,OAAO,CAAChC,MAAD,EAAS,MAAM2D,QAAf,CAAnB;MACH;IACJ;;IACD,OAAQ,KAAKw0B,QAAL,KAAkBD,SAA1B;EACH,CAZD;;EAaA3wB,QAAQ,CAAC3H,SAAT,CAAmB8vB,YAAnB,GAAkC,UAAUvU,MAAV,EAAkBnH,KAAlB,EAAyB;IACvD,IAAIqB,IAAI,GAAGrB,KAAK,CAAC0V,UAAjB;;IACA,OAAO,CAACjnB,KAAK,CAAC4S,IAAD,CAAb,EAAqB;MACjB,IAAIA,IAAI,KAAK8F,MAAb,EAAqB;QACjB,OAAO,IAAP;MACH;;MACD9F,IAAI,GAAGA,IAAI,CAACqU,UAAZ;IACH;;IACD,OAAO,KAAP;EACH,CATD;;EAUAniB,QAAQ,CAAC3H,SAAT,CAAmByD,WAAnB,GAAiC,UAAUoE,OAAV,EAAmB;IAChD3F,QAAQ,CAAC,CAAC2F,OAAD,CAAD,EAAYvD,IAAZ,CAAR;IACAd,aAAa,CAAC;MACVpD,MAAM,EAAEyH,OADE;MAEV2wB,KAAK,EAAEt3B,OAAO,CAACwjB,QAAR,GAAmB,EAAnB,GAAwB;IAFrB,CAAD,EAGV,KAAK3R,aAHK,CAAb;IAIAtP,WAAW,CAACoE,OAAD,CAAX;EACH,CAPD;;EAQAF,QAAQ,CAAC3H,SAAT,CAAmB0D,WAAnB,GAAiC,UAAUmE,OAAV,EAAmB;IAChDnE,WAAW,CAACmE,OAAD,CAAX;IACAA,OAAO,CAACwH,SAAR,GAAoB,EAApB;IACAlN,WAAW,CAAC,CAAC0F,OAAD,CAAD,EAAYvD,IAAZ,CAAX;EACH,CAJD;;EAKAqD,QAAQ,CAAC3H,SAAT,CAAmBy4B,eAAnB,GAAqC,UAAU3f,KAAV,EAAiB;IAClDA,KAAK,GAAGlI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAegI,KAAf,CAAX,CAAR;IACA,KAAK4f,UAAL,CAAgB,KAAKtsB,YAArB;IACA,KAAKusB,gBAAL,CAAsB7f,KAAtB;;IACA,IAAIA,KAAK,CAACrY,MAAN,GAAe,CAAnB,EAAsB;MAClB,KAAKm4B,QAAL,CAAc9f,KAAd;IACH;EACJ,CAPD;EAQA;AACJ;AACA;;;EACInR,QAAQ,CAAC3H,SAAT,CAAmBua,mBAAnB,GAAyC,UAAU9E,IAAV,EAAgB;IACrD,IAAI,KAAKtD,QAAL,KAAkB,CAAtB,EAAyB;MACrB,IAAIpB,MAAM,GAAG,KAAKpF,MAAlB;MACA,IAAIgI,UAAU,GAAG,IAAIhR,WAAJ,CAAgB,KAAKoN,QAArB,EAA+B6D,YAA/B,CAA4C,IAAIhR,KAAJ,GAAYqP,KAAZ,CAAkBlB,MAAM,CAACvD,EAAzB,EAA6B,OAA7B,EAAsCiI,IAAtC,EAA4C,IAA5C,CAA5C,CAAjB;;MACA,IAAI9B,UAAU,CAAC,CAAD,CAAd,EAAmB;QACf,KAAKklB,kBAAL,CAAwBllB,UAAxB,EAAoC8B,IAApC,EAA0C9B,UAAU,CAAC,CAAD,CAApD;;QACA,IAAI,KAAKH,SAAT,EAAoB;UAChB,IAAIslB,QAAQ,GAAGnlB,UAAU,CAAC,CAAD,CAAV,CAAc,KAAKhI,MAAL,CAAYqG,QAA1B,IAAsC2B,UAAU,CAAC,CAAD,CAAV,CAAc,KAAKhI,MAAL,CAAYqG,QAA1B,EAAoC+B,QAApC,EAAtC,GAAuF,IAAtG;UACA,IAAIoB,UAAU,GAAG,KAAK3C,aAAL,CAAmB,KAAKzC,QAAxB,EAAkC+oB,QAAlC,CAAjB;UACA,IAAI7jB,KAAK,GAAG,CAAZ;;UACA,KAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGC,UAAU,CAAC1U,MAAnC,EAA2CyU,GAAG,EAA9C,EAAkD;YAC9C,IAAIb,OAAO,GAAGc,UAAU,CAACD,GAAD,CAAV,CAAgB,KAAKvJ,MAAL,CAAY6B,EAA5B,EAAgCuG,QAAhC,EAAd;;YACA,IAAI,KAAK3H,YAAL,CAAkBqF,OAAlB,CAA0B4C,OAA1B,MAAuC,CAAC,CAA5C,EAA+C;cAC3CY,KAAK;YACR;UACJ;;UACD,IAAIA,KAAK,KAAKE,UAAU,CAAC1U,MAArB,IAA+B,KAAK2L,YAAL,CAAkBqF,OAAlB,CAA0BqnB,QAA1B,MAAwC,CAAC,CAAxE,IAA6EA,QAAjF,EAA2F;YACvF,KAAK1sB,YAAL,CAAkBoD,IAAlB,CAAuBspB,QAAvB;UACH;QACJ;MACJ;IACJ,CApBD,MAqBK,IAAI,KAAK3mB,QAAL,KAAkB,CAAtB,EAAyB;MAC1B,KAAK,IAAI4mB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKhpB,QAAL,CAActP,MAAlC,EAA0Cs4B,CAAC,EAA3C,EAA+C;QAC3C,IAAI/sB,KAAK,GAAG,KAAK+D,QAAL,CAAcgpB,CAAd,EAAiB,KAAKptB,MAAL,CAAY6B,EAA7B,IAAmC,KAAKuC,QAAL,CAAcgpB,CAAd,EAAiB,KAAKptB,MAAL,CAAY6B,EAA7B,EAAiCuG,QAAjC,EAAnC,GAAiF,EAA7F;;QACA,IAAI/H,KAAK,KAAKyJ,IAAV,IAAkB,KAAKrJ,YAAL,CAAkBqF,OAAlB,CAA0BgE,IAA1B,MAAoC,CAAC,CAA3D,EAA8D;UAC1D,KAAKrJ,YAAL,CAAkBoD,IAAlB,CAAuBiG,IAAvB;UACA;QACH;;QACD,IAAIZ,UAAU,GAAG9R,QAAQ,CAAC,KAAK4I,MAAL,CAAYyI,KAAZ,CAAkBL,QAAlB,EAAD,EAA+B,KAAKhE,QAAL,CAAcgpB,CAAd,CAA/B,CAAzB;;QACA,IAAIlkB,UAAJ,EAAgB;UACZ,KAAKgkB,kBAAL,CAAwBhkB,UAAxB,EAAoCY,IAApC,EAA0C,KAAK1F,QAAL,CAAcgpB,CAAd,CAA1C;QACH;MACJ;IACJ;EACJ,CAnCD;EAoCA;AACJ;AACA;;;EACIpxB,QAAQ,CAAC3H,SAAT,CAAmB64B,kBAAnB,GAAwC,UAAUhkB,UAAV,EAAsBY,IAAtB,EAA4B1F,QAA5B,EAAsC;IAC1E,IAAIiG,aAAJ;IACA,IAAIf,KAAK,GAAG,CAAZ;;IACA,IAAI,KAAK9C,QAAL,KAAkB,CAAtB,EAAyB;MACrB,IAAIpC,QAAJ,EAAc;QACViG,aAAa,GAAGjG,QAAQ,CAAC,KAAKpE,MAAL,CAAY6B,EAAb,CAAR,GAA2BuC,QAAQ,CAAC,KAAKpE,MAAL,CAAY6B,EAAb,CAAR,CAAyBuG,QAAzB,EAA3B,GAAiE,IAAjF;MACH;;MACD,KAAK,IAAI/H,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG6I,UAAU,CAACpU,MAAvC,EAA+CuL,KAAK,EAApD,EAAwD;QACpD,IAAIwZ,SAAS,GAAG3Q,UAAU,CAAC7I,KAAD,CAAV,CAAkB,KAAKL,MAAL,CAAY6B,EAA9B,IAAoCqH,UAAU,CAAC7I,KAAD,CAAV,CAAkB,KAAKL,MAAL,CAAY6B,EAA9B,EAAkCuG,QAAlC,EAApC,GAAmF,IAAnG;;QACA,IAAIhE,QAAQ,IAAIiG,aAAZ,IAA6B,KAAKxC,SAAtC,EAAiD;UAC7C,IAAI,KAAKpH,YAAL,CAAkBqF,OAAlB,CAA0BuE,aAA1B,MAA6C,CAAC,CAA9C,IAAmD,KAAK5J,YAAL,CAAkBqF,OAAlB,CAA0B+T,SAA1B,MAAyC,CAAC,CAAjG,EAAoG;YAChG,KAAKpZ,YAAL,CAAkBoD,IAAlB,CAAuBgW,SAAvB;UACH;QACJ;;QACD,IAAIA,SAAS,KAAK/P,IAAd,IAAsB,KAAKrJ,YAAL,CAAkBqF,OAAlB,CAA0BgE,IAA1B,MAAoC,CAAC,CAA/D,EAAkE;UAC9D,KAAKrJ,YAAL,CAAkBoD,IAAlB,CAAuBiG,IAAvB;QACH;;QACD,IAAIS,aAAa,GAAG,KAAK1D,aAAL,CAAmB,KAAKzC,QAAxB,EAAkCyV,SAAlC,CAApB;;QACA,IAAItP,aAAJ,EAAmB;UACf,KAAK2iB,kBAAL,CAAwB3iB,aAAxB,EAAuCT,IAAvC,EAA6C1F,QAA7C;QACH;MACJ;IACJ,CAnBD,MAoBK;MACD,IAAIA,QAAJ,EAAc;QACViG,aAAa,GAAGjG,QAAQ,CAAC,KAAKpE,MAAL,CAAY6B,EAAb,CAAR,GAA2BuC,QAAQ,CAAC,KAAKpE,MAAL,CAAY6B,EAAb,CAAR,CAAyBuG,QAAzB,EAA3B,GAAiE,EAAjF;MACH;;MACD,KAAK,IAAI/H,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG6I,UAAU,CAACpU,MAAvC,EAA+CuL,KAAK,EAApD,EAAwD;QACpD,IAAIiK,YAAY,GAAGpB,UAAU,CAAC7I,KAAD,CAAV,CAAkB,KAAKL,MAAL,CAAY6B,EAA9B,IAAoCqH,UAAU,CAAC7I,KAAD,CAAV,CAAkB,KAAKL,MAAL,CAAY6B,EAA9B,EAAkCuG,QAAlC,EAApC,GAAmF,EAAtG;;QACA,IAAIhE,QAAQ,IAAIiG,aAAZ,IAA6B,KAAKxC,SAAtC,EAAiD;UAC7C,IAAI,KAAKpH,YAAL,CAAkBqF,OAAlB,CAA0BuE,aAA1B,MAA6C,CAAC,CAA9C,IAAmD,KAAK5J,YAAL,CAAkBqF,OAAlB,CAA0BwE,YAA1B,MAA4C,CAAC,CAApG,EAAuG;YACnG,KAAK7J,YAAL,CAAkBoD,IAAlB,CAAuByG,YAAvB;UACH;QACJ;;QACD,IAAIA,YAAY,KAAKR,IAAjB,IAAyB,KAAKrJ,YAAL,CAAkBqF,OAAlB,CAA0BgE,IAA1B,MAAoC,CAAC,CAAlE,EAAqE;UACjE,KAAKrJ,YAAL,CAAkBoD,IAAlB,CAAuBiG,IAAvB;QACH;;QACD,IAAIS,aAAa,GAAGnT,QAAQ,CAAC,KAAK4I,MAAL,CAAYyI,KAAZ,CAAkBL,QAAlB,EAAD,EAA+Bc,UAAU,CAAC7I,KAAD,CAAzC,CAA5B;;QACA,IAAIkK,aAAJ,EAAmB;UACf,KAAK2iB,kBAAL,CAAwB3iB,aAAxB,EAAuCT,IAAvC,EAA6CZ,UAAU,CAAC7I,KAAD,CAAvD;QACH;;QACD,IAAI,KAAKI,YAAL,CAAkBqF,OAAlB,CAA0BwE,YAA1B,MAA4C,CAAC,CAA7C,IAAkD,KAAKzC,SAA3D,EAAsE;UAClEyB,KAAK;QACR;;QACD,IAAIA,KAAK,KAAKJ,UAAU,CAACpU,MAArB,IAA+B,KAAK2L,YAAL,CAAkBqF,OAAlB,CAA0BuE,aAA1B,MAA6C,CAAC,CAA7E,IAAkF,KAAKxC,SAA3F,EAAsG;UAClG,KAAKpH,YAAL,CAAkBoD,IAAlB,CAAuBwG,aAAvB;QACH;MACJ;IACJ;EACJ,CAjDD;;EAkDArO,QAAQ,CAAC3H,SAAT,CAAmB24B,gBAAnB,GAAsC,UAAU7f,KAAV,EAAiB;IACnD,KAAK,IAAIhY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgY,KAAK,CAACrY,MAA1B,EAAkCK,CAAC,EAAnC,EAAuC;MACnC,KAAKyZ,mBAAL,CAAyBzB,KAAK,CAAChY,CAAD,CAA9B;IACH;EACJ,CAJD;;EAKA6G,QAAQ,CAAC3H,SAAT,CAAmBg5B,cAAnB,GAAoC,UAAUxrB,EAAV,EAAcif,OAAd,EAAuBwM,cAAvB,EAAuCC,UAAvC,EAAmD;IACnF,IAAI,KAAK/mB,QAAL,KAAkB,CAAtB,EAAyB;MACrB,IAAI8T,GAAG,GAAG,KAAK4L,UAAL,CAAgB,KAAK9hB,QAArB,EAA+B,KAAKpE,MAApC,EAA4C6B,EAA5C,CAAV;MACA,KAAKuC,QAAL,CAAckK,MAAd,CAAqBgM,GAArB,EAA0B,CAA1B,EAA6BwG,OAA7B;;MACA,IAAIwM,cAAJ,EAAoB;QAChB,KAAKlH,gBAAL,CAAsBvkB,EAAtB;;QACA,KAAK,IAAIoI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsjB,UAAU,CAACz4B,MAA/B,EAAuCmV,CAAC,EAAxC,EAA4C;UACxC,KAAK7F,QAAL,CAAckK,MAAd,CAAqBgM,GAArB,EAA0B,CAA1B,EAA6BiT,UAAU,CAACtjB,CAAD,CAAvC;UACAqQ,GAAG;QACN;MACJ;;MACD,KAAK5T,WAAL,GAAmB,KAAKC,cAAL,CAAoB,KAAKvC,QAAzB,EAAmC,KAAKpE,MAAL,CAAYqG,QAA/C,CAAnB;IACH,CAXD,MAYK;MACD,KAAKmnB,mBAAL,CAAyB,KAAKppB,QAA9B,EAAwC,KAAKpE,MAA7C,EAAqD6B,EAArD,EAAyD,CAACif,OAAD,CAAzD,EAAoEld,SAApE;IACH;EACJ,CAhBD;;EAiBA5H,QAAQ,CAAC3H,SAAT,CAAmBm5B,mBAAnB,GAAyC,UAAUppB,QAAV,EAAoBgB,MAApB,EAA4BqoB,MAA5B,EAAoC3M,OAApC,EAA6CzgB,KAA7C,EAAoD;IACzF,IAAIqtB,KAAJ;;IACA,KAAK,IAAIv4B,CAAC,GAAG,CAAR,EAAWmiB,MAAM,GAAGlT,QAAQ,CAACtP,MAAlC,EAA0CK,CAAC,GAAGmiB,MAA9C,EAAsDniB,CAAC,EAAvD,EAA2D;MACvD,IAAI4U,MAAM,GAAG3S,QAAQ,CAACgO,MAAM,CAACvD,EAAR,EAAYuC,QAAQ,CAACjP,CAAD,CAApB,CAArB;;MACA,IAAIiP,QAAQ,CAACjP,CAAD,CAAR,IAAe4U,MAAf,IAAyBA,MAAM,CAAC3B,QAAP,OAAsBqlB,MAAnD,EAA2D;QACvDrpB,QAAQ,CAACjP,CAAD,CAAR,GAAc2rB,OAAO,CAAC,CAAD,CAArB;QACA,OAAO,IAAP;MACH,CAHD,MAIK,IAAI,OAAO1b,MAAM,CAACqD,KAAd,KAAwB,QAAxB,IAAoC,CAACvR,KAAK,CAACE,QAAQ,CAACgO,MAAM,CAACqD,KAAR,EAAerE,QAAQ,CAACjP,CAAD,CAAvB,CAAT,CAA9C,EAAqF;QACtF,IAAIg1B,QAAQ,GAAG/yB,QAAQ,CAACgO,MAAM,CAACqD,KAAR,EAAerE,QAAQ,CAACjP,CAAD,CAAvB,CAAvB;QACAu4B,KAAK,GAAG,KAAKF,mBAAL,CAAyBrD,QAAzB,EAAmC,KAAKlT,cAAL,CAAoB7R,MAApB,CAAnC,EAAgEqoB,MAAhE,EAAwE3M,OAAxE,EAAiFzgB,KAAjF,CAAR;;QACA,IAAIqtB,KAAK,KAAK9pB,SAAd,EAAyB;UACrB;QACH;MACJ,CANI,MAOA,IAAI,KAAK5D,MAAL,CAAY8D,UAAZ,YAAkC9M,WAAlC,IAAiD,CAACE,KAAK,CAACE,QAAQ,CAAC,OAAD,EAAUgN,QAAQ,CAACjP,CAAD,CAAlB,CAAT,CAA3D,EAA6F;QAC9F,IAAIqT,SAAS,GAAGpR,QAAQ,CAAC,OAAD,EAAUgN,QAAQ,CAACjP,CAAD,CAAlB,CAAxB;QACAu4B,KAAK,GAAG,KAAKF,mBAAL,CAAyBhlB,SAAzB,EAAoC,KAAKyO,cAAL,CAAoB7R,MAApB,CAApC,EAAiEqoB,MAAjE,EAAyE3M,OAAzE,EAAkFzgB,KAAlF,CAAR;;QACA,IAAIqtB,KAAK,KAAK9pB,SAAd,EAAyB;UACrB;QACH;MACJ;IACJ;;IACD,OAAO8pB,KAAP;EACH,CAxBD;;EAyBA1xB,QAAQ,CAAC3H,SAAT,CAAmBs5B,YAAnB,GAAkC,YAAY;IAC1C,KAAKnsB,cAAL,CAAoB,KAAKC,gBAAzB;IACA,KAAKH,iBAAL,CAAuB,KAAKC,YAA5B;;IACA,IAAI,CAAC,KAAKH,QAAV,EAAoB;MAChB,KAAKM,UAAL;MACA,KAAKL,SAAL;IACH,CAHD,MAIK;MACD,KAAKmrB,YAAL;MACA,KAAK1pB,QAAL;MACA,KAAKG,YAAL;IACH;EACJ,CAZD;;EAaAjH,QAAQ,CAAC3H,SAAT,CAAmBosB,aAAnB,GAAmC,UAAUmN,SAAV,EAAqBzgB,KAArB,EAA4B1Y,MAA5B,EAAoC8rB,OAApC,EAA6CsN,OAA7C,EAAsDxtB,KAAtD,EAA6DytB,OAA7D,EAAsE;IACrG,IAAI3xB,KAAK,GAAG,IAAZ;;IACA,IAAIgO,IAAI,GAAG,KAAKnK,MAAL,CAAY8D,UAAvB;IACA,IAAIiqB,UAAU,GAAG,EAAjB;IACA,IAAIxoB,KAAK,GAAG,KAAKR,QAAL,CAAc,KAAK/E,MAAnB,CAAZ;IACA,IAAItL,GAAG,GAAG,KAAKsL,MAAL,CAAY6B,EAAtB;IACA,IAAImsB,IAAJ;IACA,IAAIC,OAAO,GAAG;MACVC,YAAY,EAAE,EADJ;MAEVC,cAAc,EAAE,EAFN;MAGVC,cAAc,EAAE;IAHN,CAAd;IAKA,IAAIC,OAAO,GAAG,EAAd;;IACA,IAAIlhB,KAAJ,EAAW;MACPkhB,OAAO,GAAG,KAAKjE,QAAL,CAAcjd,KAAd,CAAV;IACH,CAFD,MAGK,IAAI1Y,MAAJ,EAAY;MACb,IAAI,OAAOA,MAAP,IAAiB,QAArB,EAA+B;QAC3B45B,OAAO,CAAC,CAAD,CAAP,GAAa55B,MAAM,CAAC2T,QAAP,EAAb;MACH,CAFD,MAGK,IAAI,OAAO3T,MAAP,KAAkB,QAAtB,EAAgC;QACjC45B,OAAO,CAAC,CAAD,CAAP,GAAa55B,MAAM,CAACuV,YAAP,CAAoB,UAApB,EAAgC5B,QAAhC,EAAb;MACH;IACJ;;IACD,KAAK,IAAIjT,CAAC,GAAG,CAAR,EAAWoU,GAAG,GAAG8kB,OAAO,CAACv5B,MAA9B,EAAsCK,CAAC,GAAGoU,GAA1C,EAA+CpU,CAAC,EAAhD,EAAoD;MAChD,IAAIwZ,KAAK,GAAG,KAAKrY,UAAL,CAAgB+3B,OAAO,CAACl5B,CAAD,CAAvB,CAAZ;;MACA,IAAIM,iBAAiB,CAACkZ,KAAD,CAArB,EAA8B;QAC1B;MACH;;MACD,IAAIoX,WAAW,GAAG,KAAKnP,aAAL,CAAmByX,OAAO,CAACl5B,CAAD,CAA1B,CAAlB;MACA44B,UAAU,CAAClqB,IAAX,CAAgBkiB,WAAhB;IACH;;IACD,QAAQ6H,SAAR;MACI,KAAK,QAAL;QACI,IAAIzgB,KAAK,CAACrY,MAAN,IAAgB,CAApB,EAAuB;UACnBk5B,IAAI,GAAG7jB,IAAI,CAAChU,MAAL,CAAYzB,GAAZ,EAAiBq5B,UAAU,CAAC,CAAD,CAA3B,EAAgCxoB,KAAK,CAAC+oB,SAAtC,EAAiD/oB,KAAjD,CAAP;QACH,CAFD,MAGK;UACD0oB,OAAO,CAACE,cAAR,GAAyBJ,UAAzB;UACAC,IAAI,GAAG7jB,IAAI,CAACokB,WAAL,CAAiBN,OAAjB,EAA0Bv5B,GAA1B,EAA+B6Q,KAAK,CAAC+oB,SAArC,EAAgD/oB,KAAhD,CAAP;QACH;;QACDyoB,IAAI,CAAC9pB,IAAL,CAAU,UAAUxE,CAAV,EAAa;UAAE,OAAOvD,KAAK,CAACqyB,aAAN,CAAoBH,OAApB,CAAP;QAAsC,CAA/D,EACK1pB,KADL,CACW,UAAUjF,CAAV,EAAa;UAAE,OAAOvD,KAAK,CAACsyB,SAAN,CAAgB/uB,CAAhB,CAAP;QAA4B,CADtD;QAEA;;MACJ,KAAK,QAAL;QACIquB,UAAU,CAAC,CAAD,CAAV,CAAc,KAAK/tB,MAAL,CAAYoG,IAA1B,IAAkCma,OAAlC;QACAyN,IAAI,GAAG7jB,IAAI,CAACukB,MAAL,CAAYh6B,GAAZ,EAAiBq5B,UAAU,CAAC,CAAD,CAA3B,EAAgCxoB,KAAK,CAAC+oB,SAAtC,EAAiD/oB,KAAjD,CAAP;QACAyoB,IAAI,CAAC9pB,IAAL,CAAU,UAAUxE,CAAV,EAAa;UAAE,OAAOvD,KAAK,CAACwyB,UAAN,CAAiBl6B,MAAjB,EAAyB8rB,OAAzB,EAAkCuN,OAAlC,CAAP;QAAoD,CAA7E,EACKnpB,KADL,CACW,UAAUjF,CAAV,EAAa;UAAE,OAAOvD,KAAK,CAACsyB,SAAN,CAAgB/uB,CAAhB,EAAmBjL,MAAnB,EAA2Bq5B,OAA3B,CAAP;QAA6C,CADvE;QAEA;;MACJ,KAAK,QAAL;QACI,IAAID,OAAO,CAAC/4B,MAAR,IAAkB,CAAtB,EAAyB;UACrBk5B,IAAI,GAAG7jB,IAAI,CAACykB,MAAL,CAAYf,OAAO,CAAC,CAAD,CAAnB,EAAwBtoB,KAAK,CAAC+oB,SAA9B,EAAyC/oB,KAAzC,CAAP;QACH,CAFD,MAGK;UACD,IAAI2M,GAAG,GAAG,EAAV;;UACA,KAAK,IAAI/c,CAAC,GAAG,CAAR,EAAWoU,GAAG,GAAGskB,OAAO,CAAC/4B,MAA9B,EAAsCK,CAAC,GAAGoU,GAA1C,EAA+CpU,CAAC,EAAhD,EAAoD;YAChD+c,GAAG,CAACrO,IAAJ,CAASgqB,OAAO,CAAC14B,CAAD,CAAhB;UACH;;UACD84B,OAAO,CAACC,YAAR,GAAuBhc,GAAvB;UACA8b,IAAI,GAAG7jB,IAAI,CAACokB,WAAL,CAAiBN,OAAjB,EAA0Bv5B,GAA1B,EAA+B6Q,KAAK,CAAC+oB,SAArC,EAAgD/oB,KAAhD,CAAP;QACH;;QACDyoB,IAAI,CAAC9pB,IAAL,CAAU,UAAUxE,CAAV,EAAa;UACnB,IAAIwkB,MAAM,GAAG/nB,KAAK,CAAC7F,UAAN,CAAiB7B,MAAjB,CAAb;;UACA0H,KAAK,CAAC0yB,UAAN,CAAiBhB,OAAjB,EAA0B3J,MAA1B,EAAkC7jB,KAAlC;;UACAlE,KAAK,CAACG,aAAN,GAAsB,KAAtB;QACH,CAJD,EAIGqI,KAJH,CAIS,UAAUjF,CAAV,EAAa;UAAE,OAAOvD,KAAK,CAACsyB,SAAN,CAAgB/uB,CAAhB,CAAP;QAA4B,CAJpD;QAKA;IAnCR;EAqCH,CArED;;EAsEA1D,QAAQ,CAAC3H,SAAT,CAAmBm6B,aAAnB,GAAmC,UAAUrhB,KAAV,EAAiB;IAChD,KAAK,IAAIhY,CAAC,GAAG,CAAR,EAAWoU,GAAG,GAAG4D,KAAK,CAACrY,MAA5B,EAAoCK,CAAC,GAAGoU,GAAxC,EAA6CpU,CAAC,EAA9C,EAAkD;MAC9C,IAAIwZ,KAAK,GAAG,KAAKrY,UAAL,CAAgB6W,KAAK,CAAChY,CAAD,CAArB,CAAZ;;MACA,IAAI+B,KAAK,CAACyX,KAAD,CAAT,EAAkB;QACd;MACH;;MACD,KAAKoa,UAAL,CAAgBpa,KAAhB;IACH;;IACD,KAAK+W,cAAL;;IACA,IAAI,KAAKlf,QAAL,KAAkB,CAAtB,EAAyB;MACrB,KAAKE,WAAL,GAAmB,KAAKC,cAAL,CAAoB,KAAKvC,QAAzB,EAAmC,KAAKpE,MAAL,CAAYqG,QAA/C,CAAnB;IACH;;IACD,KAAKwa,YAAL;EACH,CAbD;;EAcA7kB,QAAQ,CAAC3H,SAAT,CAAmBs6B,UAAnB,GAAgC,UAAUl6B,MAAV,EAAkB8rB,OAAlB,EAA2BuN,OAA3B,EAAoC;IAChE,IAAInf,KAAK,GAAG,KAAKrY,UAAL,CAAgB7B,MAAhB,CAAZ;IACA,IAAI+rB,MAAM,GAAG5pB,MAAM,CAAC,MAAMyB,QAAP,EAAiBsW,KAAjB,CAAnB;IACA,KAAK+R,aAAL,CAAmB/R,KAAnB,EAA0B6R,MAA1B,EAAkCD,OAAlC,EAA2CuN,OAA3C;EACH,CAJD;;EAKA9xB,QAAQ,CAAC3H,SAAT,CAAmBw6B,UAAnB,GAAgC,UAAU1hB,KAAV,EAAiB+W,MAAjB,EAAyB7jB,KAAzB,EAAgC;IAC5D,IAAI8kB,MAAJ;IACA,IAAIza,IAAI,GAAGwZ,MAAM,GAAGA,MAAM,CAACzgB,aAAP,CAAqB,MAAM5K,IAA3B,CAAH,GAAsC,IAAvD;IACA,IAAIsZ,KAAK,GAAG,IAAZ;;IACA,IAAI+R,MAAM,IAAIxZ,IAAV,IAAkBA,IAAI,CAACnI,SAAL,CAAe6I,QAAf,CAAwBjT,UAAxB,CAAlB,IACA+rB,MAAM,CAACzgB,aAAP,CAAqB,MAAMjL,UAA3B,MAA2C,IAD/C,EACqD;MACjD2Z,KAAK,CAAC3K,gBAAN,CAAuB0c,MAAvB,EAA+B,IAA/B,EAAqC,YAAY;QAC7CiB,MAAM,GAAGjB,MAAM,CAACzgB,aAAP,CAAqB,MAAMjL,UAA3B,CAAT;QACA2Z,KAAK,CAACqX,aAAN,CAAoBrc,KAApB,EAA2B+W,MAA3B,EAAmC7jB,KAAnC,EAA0C,IAA1C,EAAgD8kB,MAAhD;QACAhT,KAAK,CAAC0O,YAAN;MACH,CAJD;IAKH,CAPD,MAQK;MACD,KAAK2I,aAAL,CAAmBrc,KAAnB,EAA0B+W,MAA1B,EAAkC7jB,KAAlC,EAAyC,IAAzC;MACA,KAAKwgB,YAAL;IACH;EACJ,CAhBD;;EAiBA7kB,QAAQ,CAAC3H,SAAT,CAAmBo6B,SAAnB,GAA+B,UAAU/uB,CAAV,EAAajL,MAAb,EAAqBq5B,OAArB,EAA8B;IACzD,IAAIr5B,MAAJ,EAAY;MACR,KAAKq6B,kBAAL,CAAwBr6B,MAAxB,EAAgCq5B,OAAhC;IACH;;IACD,KAAKlpB,OAAL,CAAa,eAAb,EAA8B;MAAEC,KAAK,EAAEnF;IAAT,CAA9B;EACH,CALD;;EAMA1D,QAAQ,CAAC3H,SAAT,CAAmBy6B,kBAAnB,GAAwC,UAAUr6B,MAAV,EAAkBq5B,OAAlB,EAA2B;IAC/D,IAAInf,KAAK,GAAG,KAAKrY,UAAL,CAAgB7B,MAAhB,CAAZ;IACA,IAAI+rB,MAAM,GAAG5pB,MAAM,CAAC,MAAMyB,QAAP,EAAiBsW,KAAjB,CAAnB;IACA,KAAKiS,UAAL,CAAgBjS,KAAhB,EAAuB6R,MAAvB,EAA+B,KAAK7G,OAApC,EAA6CmU,OAA7C;EACH,CAJD;EAKA;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACI9xB,QAAQ,CAAC3H,SAAT,CAAmB06B,iBAAnB,GAAuC,UAAUC,OAAV,EAAmBC,OAAnB,EAA4B;IAC/D,KAAK,IAAIvpB,EAAE,GAAG,CAAT,EAAYC,EAAE,GAAG9R,MAAM,CAAC+R,IAAP,CAAYopB,OAAZ,CAAtB,EAA4CtpB,EAAE,GAAGC,EAAE,CAAC7Q,MAApD,EAA4D4Q,EAAE,EAA9D,EAAkE;MAC9D,IAAIF,IAAI,GAAGG,EAAE,CAACD,EAAD,CAAb;;MACA,QAAQF,IAAR;QACI,KAAK,kBAAL;UACI,KAAKhE,cAAL,CAAoB,KAAKC,gBAAzB;UACA;;QACJ,KAAK,UAAL;UACI,IAAI,KAAKA,gBAAT,EAA2B;YACvB,KAAK6f,OAAL,CAAaG,QAAb,GAAwB,KAAKA,QAA7B;UACH;;UACD;;QACJ,KAAK,cAAL;UACI,KAAKngB,iBAAL,CAAuB,KAAKC,YAA5B;UACA;;QACJ,KAAK,qBAAL;UACI,IAAI,KAAKhB,aAAL,CAAmBzL,MAAnB,GAA4B,CAAhC,EAAmC;YAC/B,IAAI2d,KAAK,GAAG,KAAKnc,UAAL,CAAgB,KAAKiK,aAAL,CAAmB,CAAnB,CAAhB,CAAZ;YACA,KAAKJ,QAAL,GAAgB,KAAhB;YACA,KAAK4X,eAAL;YACA,KAAKlL,UAAL,CAAgB4F,KAAhB,EAAuB,IAAvB;YACA,KAAKtS,QAAL,GAAgB,IAAhB;UACH;;UACD,KAAKgD,cAAL,CAAoB,KAAKgI,mBAAzB;UACA,KAAKid,cAAL,CAAoB,KAAKjd,mBAAzB;UACA;;QACJ,KAAK,eAAL;UACI,KAAKhJ,WAAL;UACA,KAAK8O,UAAL;UACA;;QACJ,KAAK,cAAL;UACI,IAAI,KAAKnJ,YAAT,EAAuB;YACnB,KAAKrH,YAAL,GAAoBwuB,OAAO,CAACxuB,YAA5B;YACA,KAAKqsB,eAAL,CAAqBkC,OAAO,CAACvuB,YAA7B;UACH;;UACD;;QACJ,KAAK,WAAL;UACI,IAAI,KAAKqH,YAAT,EAAuB;YACnB,KAAKD,SAAL,GAAiBmnB,OAAO,CAACnnB,SAAzB;YACA,KAAKwF,mBAAL;UACH;;UACD;;QACJ,KAAK,UAAL;UACI,KAAKvL,WAAL,CAAiBmtB,OAAO,CAACltB,QAAzB,EAAmCitB,OAAO,CAACjtB,QAA3C;UACA;;QACJ,KAAK,WAAL;UACI,KAAKC,YAAL;UACA;;QACJ,KAAK,eAAL;UACI,KAAKzE,SAAL,GAAiB,KAAjB;UACA,KAAKiD,aAAL,CAAmB;YAAEE,aAAa,EAAE;UAAjB,CAAnB,EAA0C,IAA1C;UACA,KAAKwuB,WAAL;UACA,KAAK9uB,cAAL,GAAsB,IAAtB;UACA,KAAKI,aAAL,CAAmB;YAAEE,aAAa,EAAExJ,KAAK,CAAC83B,OAAO,CAACtuB,aAAT,CAAL,GAA+B,EAA/B,GAAoCsuB,OAAO,CAACtuB;UAA7D,CAAnB,EAAiG,IAAjG;UACA,KAAK0Q,cAAL;UACA,KAAKhR,cAAL,GAAsB,KAAtB;UACA,KAAK7C,SAAL,GAAiB,IAAjB;UACA;;QACJ,KAAK,UAAL;UACI,KAAKyuB,iBAAL,CAAuB,KAAvB;UACA,KAAK7qB,eAAL;;UACA,IAAI,KAAK0X,YAAL,KAAsB,MAAtB,IAAgC,CAAC,KAAKzX,QAA1C,EAAoD;YAChD,KAAK4qB,iBAAL,CAAuB,IAAvB;UACH;;UACD;;QACJ,KAAK,UAAL;UACI,KAAK9qB,eAAL;UACA,KAAKysB,YAAL;UACA;;QACJ,KAAK,QAAL;UACI,KAAKpwB,SAAL,GAAiB,KAAjB;UACA,KAAKX,aAAL,GAAqB,IAArB;UACA,KAAKmE,aAAL,GAAqB,IAArB;UACA,KAAK8d,aAAL;UACA,KAAK9d,aAAL,GAAqB,KAArB;UACA,KAAKxD,SAAL,GAAiB,IAAjB;UACA,KAAKX,aAAL,GAAqB,KAArB;UACA;;QACJ,KAAK,eAAL;UACI,KAAKqF,UAAL,CAAgB,KAAKC,aAArB;UACA,KAAK+lB,UAAL,CAAgB,KAAK/lB,aAArB;;UACA,IAAI,KAAK8O,aAAT,EAAwB;YACpB,KAAK7O,WAAL;YACA,KAAK8O,UAAL;UACH;;UACD;;QACJ,KAAK,cAAL;UACI,IAAI,KAAK1J,YAAL,KAAsB,KAAtB,IAA+B,CAAC,KAAK4nB,QAAzC,EAAmD;YAC/C,IAAIhiB,KAAK,GAAG,KAAKjR,OAAL,CAAasH,gBAAb,CAA8B,IAA9B,CAAZ;YACA,IAAIrO,CAAC,GAAG,CAAR;;YACA,OAAOA,CAAC,GAAGgY,KAAK,CAACrY,MAAjB,EAAyB;cACrB,IAAIqY,KAAK,CAAChY,CAAD,CAAL,CAAS6U,YAAT,CAAsB,eAAtB,MAA2C,MAA/C,EAAuD;gBACnD,KAAKxC,gBAAL,CAAsB2F,KAAK,CAAChY,CAAD,CAA3B,EAAgC,IAAhC,EAAsC,IAAtC,EAA4C,IAA5C;cACH;;cACDA,CAAC;YACJ;;YACD,KAAKg6B,QAAL,GAAgB,IAAhB;UACH;;UACD;;QACJ,KAAK,cAAL;UACI,KAAKryB,WAAL,GAAmB,KAAnB;UACA,KAAKsF,cAAL,GAAsB,KAAKC,gBAAL,CAAsB,KAAKC,YAA3B,CAAtB;UACA,KAAKuc,aAAL;UACA;;QACJ,KAAK,eAAL;UACI,KAAK9G,eAAL;UACA,KAAKvX,aAAL,CAAmB;YAAED,aAAa,EAAEyuB,OAAO,CAACzuB;UAAzB,CAAnB,EAA6D,IAA7D;UACA,KAAKgS,iBAAL;UACA;;QACJ,KAAK,cAAL;UACI,KAAKsM,aAAL;UACA;;QACJ,KAAK,WAAL;UACI,KAAKA,aAAL;UACA;;QACJ,KAAK,kBAAL;UACI,KAAKre,aAAL,CAAmB;YAAEV,gBAAgB,EAAEkvB,OAAO,CAAClvB;UAA5B,CAAnB,EAAmE,IAAnE;UACA,KAAKX,cAAL,CAAoBU,aAApB,GAAoCmvB,OAAO,CAAClvB,gBAA5C;UACA,KAAK+e,aAAL;UACA;MApHR;IAsHH;EACJ,CA1HD;EA2HA;AACJ;AACA;;;EACI7iB,QAAQ,CAAC3H,SAAT,CAAmBwyB,OAAnB,GAA6B,YAAY;IACrC,KAAKjI,aAAL;IACA,KAAK1iB,OAAL,CAAamH,eAAb,CAA6B,uBAA7B;IACA,KAAKnH,OAAL,CAAamH,eAAb,CAA6B,UAA7B;IACA,KAAKmpB,YAAL;IACA,KAAKlrB,iBAAL,CAAuB,KAAvB;;IACA,IAAI,CAAC,KAAKF,QAAV,EAAoB;MAChB,KAAK0B,QAAL;MACA,KAAKG,YAAL;IACH;;IACD,KAAKnB,WAAL,CAAiB,KAAKC,QAAtB,EAAgC,IAAhC;IACA,KAAKP,cAAL,CAAoB,KAApB;IACA,KAAKS,UAAL,CAAgB,KAAhB;;IACA,IAAI,KAAKiF,SAAL,IAAkB,KAAKA,SAAL,CAAe4E,aAArC,EAAoD;MAChD,KAAK5E,SAAL,CAAe4E,aAAf,CAA6BgT,WAA7B,CAAyC,KAAK5X,SAA9C;IACH;;IACDzL,MAAM,CAACpH,SAAP,CAAiBwyB,OAAjB,CAAyBzqB,IAAzB,CAA8B,IAA9B;EACH,CAjBD;EAkBA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIJ,QAAQ,CAAC3H,SAAT,CAAmB+6B,QAAnB,GAA8B,UAAUjiB,KAAV,EAAiB1Y,MAAjB,EAAyB4L,KAAzB,EAAgCkjB,mBAAhC,EAAqD;IAC/E,IAAIrsB,KAAK,CAACiW,KAAD,CAAT,EAAkB;MACd;IACH;;IACDA,KAAK,GAAGlI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAegI,KAAf,CAAX,CAAR;IACA,IAAI+W,MAAM,GAAG,KAAK5tB,UAAL,CAAgB7B,MAAhB,CAAb;IACA,KAAK6H,aAAL,GAAqBinB,mBAArB;;IACA,IAAI,KAAKvjB,MAAL,CAAY8D,UAAZ,YAAkC9M,WAAtC,EAAmD;MAC/C,IAAI,CAAC,KAAK+M,SAAV,EAAqB;QACjB,KAAK0c,aAAL,CAAmB,QAAnB,EAA6B,IAA7B,EAAmChsB,MAAnC,EAA2C,IAA3C,EAAiD0Y,KAAjD,EAAwD9M,KAAxD,EAA+D,KAAK/D,aAApE;MACH,CAFD,MAGK;QACD,KAAKuyB,UAAL,CAAgB1hB,KAAhB,EAAuB+W,MAAvB,EAA+B7jB,KAA/B;MACH;IACJ,CAPD,MAQK,IAAI,KAAKmG,QAAL,KAAkB,CAAtB,EAAyB;MAC1B,KAAKgjB,aAAL,CAAmBrc,KAAnB,EAA0B+W,MAA1B,EAAkC7jB,KAAlC;IACH,CAFI,MAGA;MACD,IAAI6jB,MAAJ,EAAY;QACR,KAAKsF,aAAL,CAAmBrc,KAAnB,EAA0B+W,MAA1B,EAAkC7jB,KAAlC;MACH,CAFD,MAGK;QACD8M,KAAK,GAAG,KAAKlG,aAAL,CAAmBkG,KAAnB,CAAR;;QACA,KAAK,IAAIhY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgY,KAAK,CAACrY,MAA1B,EAAkCK,CAAC,EAAnC,EAAuC;UACnC,IAAIipB,GAAG,GAAGhnB,QAAQ,CAAC,KAAK4I,MAAL,CAAYqG,QAAb,EAAuB8G,KAAK,CAAChY,CAAD,CAA5B,CAAlB;UACA+uB,MAAM,GAAG9F,GAAG,GAAG,KAAK9nB,UAAL,CAAgB8nB,GAAG,CAAChW,QAAJ,EAAhB,CAAH,GAAqCgW,GAAjD;UACA,KAAKoL,aAAL,CAAmB,CAACrc,KAAK,CAAChY,CAAD,CAAN,CAAnB,EAA+B+uB,MAA/B,EAAuC7jB,KAAvC;QACH;MACJ;;MACD,KAAKqG,WAAL,GAAmB,KAAKC,cAAL,CAAoB,KAAKvC,QAAzB,EAAmC,KAAKpE,MAAL,CAAYqG,QAA/C,CAAnB;IACH;;IACD,KAAKuB,wBAAL;;IACA,IAAI,KAAKE,YAAL,IAAqBoc,MAAzB,EAAiC;MAC7B,KAAK3W,sBAAL,CAA4B2W,MAA5B;IACH;;IACD,IAAK,KAAKlkB,MAAL,CAAY8D,UAAZ,YAAkC9M,WAAlC,KAAkD,KAAvD,EAA+D;MAC3D,KAAKsF,aAAL,GAAqB,KAArB;MACA,KAAKukB,YAAL;IACH;EACJ,CAxCD;EAyCA;AACJ;AACA;AACA;AACA;AACA;;;EACI7kB,QAAQ,CAAC3H,SAAT,CAAmBg7B,SAAnB,GAA+B,UAAUvlB,IAAV,EAAgB;IAC3C,IAAIuE,GAAG,GAAG,KAAK/X,UAAL,CAAgBwT,IAAhB,CAAV;;IACA,IAAI5S,KAAK,CAACmX,GAAD,CAAL,IAAc,KAAKjN,QAAvB,EAAiC;MAC7B;IACH;;IACD,KAAK8Y,aAAL,CAAmB7L,GAAnB,EAAwB,IAAxB;EACH,CAND;EAOA;AACJ;AACA;AACA;AACA;;;EACIrS,QAAQ,CAAC3H,SAAT,CAAmB44B,QAAnB,GAA8B,UAAU9f,KAAV,EAAiB;IAC3C,IAAI,KAAKrF,YAAT,EAAuB;MACnB,KAAK0G,gBAAL,CAAsBrB,KAAtB,EAA6B,IAA7B;IACH;EACJ,CAJD;EAKA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;EACInR,QAAQ,CAAC3H,SAAT,CAAmB66B,WAAnB,GAAiC,UAAU/hB,KAAV,EAAiBpG,KAAjB,EAAwByhB,kBAAxB,EAA4C;IACzE,IAAI,CAACtxB,KAAK,CAACiW,KAAD,CAAV,EAAmB;MACf,KAAKmc,aAAL,CAAmBnc,KAAnB,EAA0BjV,WAA1B,EAAuC,KAAvC;IACH,CAFD,MAGK;MACD,IAAI6O,KAAK,GAAG,CAAZ,EAAe;QACX,KAAKwhB,eAAL,CAAqB3xB,MAAM,CAAC,MAAM4B,UAAP,EAAmB,KAAK0D,OAAxB,CAA3B,EAA6D6K,KAA7D,EAAoEyhB,kBAApE;MACH,CAFD,MAGK;QACD,KAAKE,gBAAL,CAAsBF,kBAAtB;MACH;IACJ;EACJ,CAZD;EAaA;AACJ;AACA;AACA;;;EACIxsB,QAAQ,CAAC3H,SAAT,CAAmBi7B,YAAnB,GAAkC,UAAUniB,KAAV,EAAiB;IAC/C,IAAI,CAACjW,KAAK,CAACiW,KAAD,CAAV,EAAmB;MACf,KAAK0J,eAAL,CAAqB1J,KAArB;IACH;EACJ,CAJD;EAKA;AACJ;AACA;AACA;;;EACInR,QAAQ,CAAC3H,SAAT,CAAmBk7B,WAAnB,GAAiC,UAAUpiB,KAAV,EAAiB;IAC9C,IAAI,CAACjW,KAAK,CAACiW,KAAD,CAAV,EAAmB;MACf,KAAKod,cAAL,CAAoBpd,KAApB;IACH;EACJ,CAJD;EAKA;AACJ;AACA;AACA;AACA;AACA;;;EACInR,QAAQ,CAAC3H,SAAT,CAAmBm7B,aAAnB,GAAmC,UAAU1lB,IAAV,EAAgB;IAC/C,IAAI6E,KAAK,GAAG,KAAKrY,UAAL,CAAgBwT,IAAhB,CAAZ;;IACA,IAAI5S,KAAK,CAACyX,KAAD,CAAT,EAAkB;MACd;IACH;;IACD,IAAIyH,OAAO,GAAG,KAAKA,OAAL,CAAazH,KAAb,EAAoB,MAAMvW,QAA1B,CAAd;IACA,KAAKq3B,SAAL,CAAerZ,OAAf;IACAsZ,UAAU,CAAC,YAAY;MAAE/gB,KAAK,CAACmM,cAAN,CAAqB,IAArB;IAA6B,CAA5C,EAA8C,GAA9C,CAAV;EACH,CARD;EASA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;EACI9e,QAAQ,CAAC3H,SAAT,CAAmBo7B,SAAnB,GAA+B,UAAUtiB,KAAV,EAAiBpG,KAAjB,EAAwByhB,kBAAxB,EAA4C;IACvE,IAAI,CAACtxB,KAAK,CAACiW,KAAD,CAAV,EAAmB;MACf,KAAKmc,aAAL,CAAmBnc,KAAnB,EAA0BhV,UAA1B,EAAsC,IAAtC;IACH,CAFD,MAGK;MACD,IAAI4O,KAAK,GAAG,CAAZ,EAAe;QACX,KAAK4hB,aAAL,CAAmB/xB,MAAM,CAAC,MAAM4B,UAAP,EAAmB,KAAK0D,OAAxB,CAAzB,EAA2D6K,KAA3D,EAAkEyhB,kBAAlE;MACH,CAFD,MAGK;QACD,KAAKI,cAAL,CAAoBJ,kBAApB;MACH;IACJ;EACJ,CAZD;EAaA;AACJ;AACA;;;EACIxsB,QAAQ,CAAC3H,SAAT,CAAmBs7B,kBAAnB,GAAwC,YAAY;IAChD,IAAItmB,UAAU,GAAG,KAAK5I,YAAtB;IACA,OAAO4I,UAAP;EACH,CAHD;EAIA;AACJ;AACA;;;EACIrN,QAAQ,CAAC3H,SAAT,CAAmBu7B,gBAAnB,GAAsC,YAAY;IAC9C,IAAIC,aAAa,GAAG,KAAKrzB,WAAzB;IACA,OAAOqzB,aAAP;EACH,CAHD;EAIA;AACJ;AACA;AACA;;;EACI7zB,QAAQ,CAAC3H,SAAT,CAAmBy7B,OAAnB,GAA6B,UAAUhmB,IAAV,EAAgB;IACzC,IAAIuE,GAAG,GAAG,KAAK/X,UAAL,CAAgBwT,IAAhB,CAAV;IACA,OAAO,KAAKuF,WAAL,CAAiBhB,GAAjB,EAAsB,IAAtB,CAAP;EACH,CAHD;EAIA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIrS,QAAQ,CAAC3H,SAAT,CAAmBsb,WAAnB,GAAiC,UAAU7F,IAAV,EAAgB;IAC7C,IAAIjI,EAAE,GAAG,KAAKwX,KAAL,CAAWvP,IAAX,CAAT;IACA,KAAK6gB,iBAAL;;IACA,IAAIzzB,KAAK,CAAC2K,EAAD,CAAT,EAAe;MACX,OAAO,KAAKuC,QAAZ;IACH,CAFD,MAGK;MACD,IAAI+F,IAAI,GAAG,KAAKyM,aAAL,CAAmB/U,EAAnB,CAAX;MACA,OAAO3K,KAAK,CAACiT,IAAD,CAAL,GAAc,EAAd,GAAmB,CAACA,IAAD,CAA1B;IACH;EACJ,CAVD;EAWA;AACJ;AACA;AACA;AACA;AACA;AACA;;;EACInO,QAAQ,CAAC3H,SAAT,CAAmB07B,SAAnB,GAA+B,UAAUC,WAAV,EAAuBv7B,MAAvB,EAA+B4L,KAA/B,EAAsCkjB,mBAAtC,EAA2D;IACtF,IAAIW,MAAM,GAAG,KAAK5tB,UAAL,CAAgB7B,MAAhB,CAAb;;IACA,IAAIyC,KAAK,CAACgtB,MAAD,CAAT,EAAmB;MACf;IACH;;IACD,KAAK,IAAI/uB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG66B,WAAW,CAACl7B,MAAhC,EAAwCK,CAAC,EAAzC,EAA6C;MACzC,IAAI4sB,MAAM,GAAG,KAAKzrB,UAAL,CAAgB05B,WAAW,CAAC76B,CAAD,CAA3B,CAAb;;MACA,IAAI+B,KAAK,CAAC6qB,MAAD,CAAL,IAAiBmC,MAAM,CAAClC,UAAP,CAAkBD,MAAlB,CAAjB,IAA8C,KAAKoC,YAAL,CAAkBpC,MAAlB,EAA0BmC,MAA1B,CAAlD,EAAqF;QACjF;MACH;;MACD,KAAK5nB,aAAL,GAAqBinB,mBAArB;MACA,KAAK2B,eAAL,CAAqBnD,MAArB,EAA6BmC,MAA7B,EAAqC,IAArC,EAA2C7jB,KAA3C;IACH;;IACD,IAAI,KAAKL,MAAL,CAAY8D,UAAZ,YAAkC9M,WAAlC,KAAkD,KAAtD,EAA6D;MACzD,KAAKsF,aAAL,GAAqB,KAArB;IACH;;IACD,KAAKukB,YAAL;EACH,CAjBD;EAkBA;AACJ;AACA;AACA;AACA;;;EACI7kB,QAAQ,CAAC3H,SAAT,CAAmB47B,WAAnB,GAAiC,UAAUx7B,MAAV,EAAkBqsB,OAAlB,EAA2B;IACxD,IAAI5pB,KAAK,CAACzC,MAAD,CAAL,IAAiByC,KAAK,CAAC4pB,OAAD,CAA1B,EAAqC;MACjC;IACH;;IACD,IAAIjf,EAAJ;IACA,IAAIyrB,cAAc,GAAG,KAArB;;IACA,IAAI,KAAK9mB,QAAL,IAAiB,CAAjB,IAAsBsa,OAAO,CAAChsB,MAAR,GAAiB,CAA3C,EAA8C;MAC1Cw4B,cAAc,GAAG,IAAjB;IACH,CAFD,MAGK,IAAI,KAAK9mB,QAAL,IAAiB,CAAjB,IAAsBsa,OAAO,CAAChsB,MAAR,KAAmB,CAA7C,EAAgD;MACjD,IAAIo7B,iBAAiB,GAAG94B,QAAQ,CAAC,KAAK4I,MAAL,CAAYyI,KAAZ,CAAkBL,QAAlB,EAAD,EAA+B0Y,OAAO,CAAC,CAAD,CAAtC,CAAhC;;MACA,IAAI,CAAC5pB,KAAK,CAACg5B,iBAAD,CAAV,EAA+B;QAC3B5C,cAAc,GAAG,IAAjB;MACH;IACJ;;IACD,IAAI3e,KAAK,GAAG,KAAKrY,UAAL,CAAgB7B,MAAhB,CAAZ;IACAoN,EAAE,GAAG8M,KAAK,GAAGA,KAAK,CAAC3E,YAAN,CAAmB,UAAnB,CAAH,GAAsCvV,MAAD,GAAWA,MAAM,CAAC2T,QAAP,EAAX,GAA+B,IAA9E;IACA,KAAK+nB,WAAL,GAAmB,KAAKvZ,aAAL,CAAmB/U,EAAnB,CAAnB;IACAif,OAAO,GAAG7b,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe2b,OAAf,CAAX,CAAV;IACA;;IACA,IAAIsP,WAAJ;IACA,IAAIC,UAAJ;;IACA,IAAI,KAAK7pB,QAAL,IAAiB,CAAjB,IAAsB8mB,cAA1B,EAA0C;MACtC,KAAK,IAAI3gB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmU,OAAO,CAAChsB,MAA5B,EAAoC6X,CAAC,EAArC,EAAyC;QACrC,IAAIzV,KAAK,CAAC4pB,OAAO,CAACnU,CAAD,CAAP,CAAW,KAAK3M,MAAL,CAAYqG,QAAvB,CAAD,CAAT,EAA6C;UACzCgqB,UAAU,GAAGvP,OAAO,CAACnU,CAAD,CAApB;UACAmU,OAAO,CAACxS,MAAR,CAAe3B,CAAf,EAAkB,CAAlB;UACA;QACH;MACJ;;MACDyjB,WAAW,GAAG94B,MAAM,CAAC,EAAD,EAAK,KAAK64B,WAAV,EAAuBE,UAAvB,CAApB;IACH,CATD,MAUK;MACDD,WAAW,GAAG94B,MAAM,CAAC,EAAD,EAAK,KAAK64B,WAAV,EAAuBrP,OAAO,CAAC,CAAD,CAA9B,CAApB;IACH;;IACD,IAAI5pB,KAAK,CAACyX,KAAD,CAAT,EAAkB;MACd,KAAK0e,cAAL,CAAoBxrB,EAApB,EAAwBuuB,WAAxB,EAAqC9C,cAArC,EAAqDxM,OAArD;MACA;IACH;;IACD,KAAKzkB,WAAL,GAAmB,IAAnB;IACA,IAAI0K,KAAK,GAAGR,UAAU,CAACoI,KAAK,CAAC3E,YAAN,CAAmB,YAAnB,CAAD,CAAtB;IACA,IAAIsmB,QAAQ,GAAG74B,QAAQ,CAACmyB,sBAAT,CAAgC,KAAKxiB,aAArC,EAAoD,CAACgpB,WAAD,CAApD,EAAmE,KAAKjxB,cAAxE,EAAwF4H,KAAxF,CAAf;IACA,IAAIkO,EAAE,GAAGre,MAAM,CAAC,MAAM4B,UAAP,EAAmBmW,KAAnB,CAAf;IACA,IAAIzF,UAAU,GAAG9R,QAAQ,CAAC,KAAK4I,MAAL,CAAYyI,KAAZ,CAAkBL,QAAlB,EAAD,EAA+BgoB,WAA/B,CAAzB;;IACA,IAAK9C,cAAc,IAAIrY,EAAnB,IAA2BqY,cAAc,IAAI,CAACp2B,KAAK,CAACgS,UAAD,CAAvD,EAAsE;MAClE,IAAIzB,SAAS,GAAGkH,KAAK,CAAC7C,aAAtB;MACA,IAAIzL,KAAK,GAAGrM,KAAK,CAACK,SAAN,CAAgByR,OAAhB,CAAwB1J,IAAxB,CAA6BqL,SAAS,CAAC+B,UAAvC,EAAmDmF,KAAnD,CAAZ;MACAxY,MAAM,CAACwY,KAAD,CAAN;MACAlH,SAAS,CAACmD,YAAV,CAAuB0lB,QAAQ,CAAC,CAAD,CAA/B,EAAoC7oB,SAAS,CAAC+B,UAAV,CAAqBnJ,KAArB,CAApC;MACA,KAAKgtB,cAAL,CAAoBxrB,EAApB,EAAwBuuB,WAAxB,EAAqC9C,cAArC,EAAqDxM,OAArD;;MACA,IAAIwM,cAAc,IAAIrY,EAAtB,EAA0B;QACtB,KAAKwa,SAAL,CAAe,CAAC5tB,EAAD,CAAf;MACH;IACJ,CATD,MAUK;MACD,IAAI2e,MAAM,GAAG5pB,MAAM,CAAC,MAAMkC,QAAP,EAAiB6V,KAAjB,CAAnB;MACA,IAAI4hB,UAAU,GAAG35B,MAAM,CAAC,MAAMkC,QAAP,EAAiBw3B,QAAQ,CAAC,CAAD,CAAzB,CAAvB;MACA,IAAI5lB,IAAI,GAAG9T,MAAM,CAAC,SAASiC,IAAV,EAAgB2nB,MAAhB,CAAjB;MACA,IAAIgQ,OAAO,GAAG55B,MAAM,CAAC,SAASiC,IAAV,EAAgB03B,UAAhB,CAApB;;MACA,IAAI7lB,IAAI,IAAI8lB,OAAZ,EAAqB;QACjB,IAAIA,OAAO,CAACjuB,SAAR,CAAkB6I,QAAlB,CAA2BjT,UAA3B,KAA0CuS,IAAI,CAACnI,SAAL,CAAe6I,QAAf,CAAwBlT,WAAxB,CAA9C,EAAoF;UAChF1B,WAAW,CAAC,CAACg6B,OAAD,CAAD,EAAYr4B,UAAZ,CAAX;UACA5B,QAAQ,CAAC,CAACi6B,OAAD,CAAD,EAAYt4B,WAAZ,CAAR;QACH,CAHD,MAIK,IAAIs4B,OAAO,CAACjuB,SAAR,CAAkB6I,QAAlB,CAA2BlT,WAA3B,KAA2CwS,IAAI,CAACnI,SAAL,CAAe6I,QAAf,CAAwBjT,UAAxB,CAA/C,EAAoF;UACrF3B,WAAW,CAAC,CAACg6B,OAAD,CAAD,EAAYt4B,WAAZ,CAAX;UACA3B,QAAQ,CAAC,CAACi6B,OAAD,CAAD,EAAYr4B,UAAZ,CAAR;QACH,CAHI,MAIA,IAAIuS,IAAI,CAACnI,SAAL,CAAe6I,QAAf,CAAwB,aAAxB,CAAJ,EAA4C;UAC7C7U,QAAQ,CAAC,CAACi6B,OAAD,CAAD,EAAY,aAAZ,CAAR;QACH;MACJ;;MACDr6B,MAAM,CAACqqB,MAAD,CAAN;MACA,IAAIiQ,OAAO,GAAG75B,MAAM,CAAC,MAAMkD,OAAP,EAAgB6U,KAAhB,CAApB;MACA8hB,OAAO,CAACtS,UAAR,CAAmBvT,YAAnB,CAAgC2lB,UAAhC,EAA4CE,OAAO,CAACpT,WAApD;MACA,KAAKgQ,cAAL,CAAoBxrB,EAApB,EAAwBuuB,WAAxB,EAAqC9C,cAArC,EAAqDxM,OAArD;IACH;;IACDnS,KAAK,GAAG,KAAKrY,UAAL,CAAgB7B,MAAhB,CAAR;;IACA,IAAI27B,WAAW,CAAC,KAAKpwB,MAAL,CAAY0wB,OAAb,CAAf,EAAsC;MAClC/hB,KAAK,CAAC/M,YAAN,CAAmB,OAAnB,EAA4BwuB,WAAW,CAAC,KAAKpwB,MAAL,CAAY0wB,OAAb,CAAvC;IACH;;IACD,IAAIN,WAAW,CAACl8B,cAAZ,CAA2B,KAAK8L,MAAL,CAAY2wB,cAAvC,KAA0DP,WAAW,CAAC,KAAKpwB,MAAL,CAAY2wB,cAAb,CAAzE,EAAuG;MACnG,IAAIC,IAAI,GAAG,EAAX;MACAr5B,KAAK,CAACq5B,IAAD,EAAOR,WAAW,CAAC,KAAKpwB,MAAL,CAAY2wB,cAAb,CAAlB,CAAL;;MACA,IAAIC,IAAI,CAACC,KAAT,EAAgB;QACZt6B,QAAQ,CAAC,CAACoY,KAAD,CAAD,EAAUiiB,IAAI,CAACC,KAAL,CAAW5R,KAAX,CAAiB,GAAjB,CAAV,CAAR;QACA,OAAO2R,IAAI,CAACC,KAAZ;MACH,CAHD,MAIK;QACDr5B,UAAU,CAACmX,KAAD,EAAQiiB,IAAR,CAAV;MACH;IACJ;;IACD,IAAI,KAAKrwB,aAAL,CAAmBuF,OAAnB,CAA2BjE,EAA3B,MAAmC,CAAC,CAAxC,EAA2C;MACvC8M,KAAK,CAAC/M,YAAN,CAAmB,eAAnB,EAAoC,MAApC;MACArL,QAAQ,CAAC,CAACoY,KAAD,CAAD,EAAUjW,MAAV,CAAR;IACH;;IACD,KAAK2D,WAAL,GAAmB,KAAnB;IACA,KAAKwkB,YAAL;EACH,CAlGD;EAmGA;AACJ;AACA;AACA;;;EACI7kB,QAAQ,CAAC3H,SAAT,CAAmBy8B,WAAnB,GAAiC,UAAU3jB,KAAV,EAAiB;IAC9C,IAAI,CAACjW,KAAK,CAACiW,KAAD,CAAV,EAAmB;MACf,IAAI,KAAKnN,MAAL,CAAY8D,UAAZ,YAAkC9M,WAAlC,IAAiD,CAAC,KAAK+M,SAA3D,EAAsE;QAClE,KAAK0c,aAAL,CAAmB,QAAnB,EAA6BtT,KAA7B;MACH,CAFD,MAGK;QACD,KAAKqhB,aAAL,CAAmBrhB,KAAnB;MACH;IACJ;EACJ,CATD;EAUA;AACJ;AACA;AACA;AACA;;;EACInR,QAAQ,CAAC3H,SAAT,CAAmB08B,UAAnB,GAAgC,UAAUt8B,MAAV,EAAkB8rB,OAAlB,EAA2B;IACvD,IAAIpkB,KAAK,GAAG,IAAZ;;IACA,IAAIjF,KAAK,CAACzC,MAAD,CAAL,IAAiByC,KAAK,CAACqpB,OAAD,CAAtB,IAAmC,CAAC,KAAKhf,YAA7C,EAA2D;MACvD;IACH;;IACD,IAAIoN,KAAK,GAAG,KAAKrY,UAAL,CAAgB7B,MAAhB,CAAZ;;IACA,IAAIyC,KAAK,CAACyX,KAAD,CAAT,EAAkB;MACd;IACH;;IACD,IAAI6R,MAAM,GAAG5pB,MAAM,CAAC,MAAMyB,QAAP,EAAiBsW,KAAjB,CAAnB;IACA,KAAKyQ,aAAL,CAAmBzQ,KAAnB;IACA,IAAIhD,SAAS,GAAG,KAAK6T,YAAL,CAAkB7Q,KAAlB,EAAyB,IAAzB,EAA+B,IAA/B,CAAhB;IACA,KAAK/J,OAAL,CAAa,aAAb,EAA4B+G,SAA5B,EAAuC,UAAU0E,YAAV,EAAwB;MAC3D,IAAI,CAACA,YAAY,CAACC,MAAlB,EAA0B;QACtB,IAAInU,KAAK,CAAC6D,MAAN,CAAa8D,UAAb,YAAmC9M,WAAnC,IAAkD,CAACmF,KAAK,CAAC4H,SAA7D,EAAwE;UACpE5H,KAAK,CAACskB,aAAN,CAAoB,QAApB,EAA8B,IAA9B,EAAoChsB,MAApC,EAA4C8rB,OAA5C,EAAqD,IAArD,EAA2D,IAA3D,EAAiE,KAAjE;QACH,CAFD,MAGK;UACDpkB,KAAK,CAACukB,aAAN,CAAoB/R,KAApB,EAA2B6R,MAA3B,EAAmCD,OAAnC,EAA4C,KAA5C;QACH;MACJ;IACJ,CATD;EAUH,CAtBD;EAuBA;AACJ;AACA;AACA;AACA;;;EACIvkB,QAAQ,CAAC3H,SAAT,CAAmB04B,UAAnB,GAAgC,UAAU5f,KAAV,EAAiB;IAC7C,IAAI,KAAKrF,YAAT,EAAuB;MACnB,KAAK0G,gBAAL,CAAsBrB,KAAtB,EAA6B,KAA7B;IACH;EACJ,CAJD;;EAKA,IAAIlQ,UAAJ;;EACA1I,UAAU,CAAC,CACPmB,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPsG,QAAQ,CAAC3H,SAFF,EAEa,kBAFb,EAEiC,KAAK,CAFtC,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPsG,QAAQ,CAAC3H,SAFF,EAEa,cAFb,EAE6B,KAAK,CAFlC,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPsG,QAAQ,CAAC3H,SAFF,EAEa,qBAFb,EAEoC,KAAK,CAFzC,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPsG,QAAQ,CAAC3H,SAFF,EAEa,eAFb,EAE8B,KAAK,CAFnC,CAAV;;EAGAE,UAAU,CAAC,CACPsB,OAAO,CAAC,EAAD,EAAK+F,qBAAL,CADA,CAAD,EAEPI,QAAQ,CAAC3H,SAFF,EAEa,WAFb,EAE0B,KAAK,CAF/B,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,EADD,CAAD,EAEPsG,QAAQ,CAAC3H,SAFF,EAEa,cAFb,EAE6B,KAAK,CAFlC,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,CAAC,EAAD,CADD,CAAD,EAEPsG,QAAQ,CAAC3H,SAFF,EAEa,UAFb,EAEyB,KAAK,CAF9B,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPsG,QAAQ,CAAC3H,SAFF,EAEa,UAFb,EAEyB,KAAK,CAF9B,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,CAAC,IAAD,CADD,CAAD,EAEPsG,QAAQ,CAAC3H,SAFF,EAEa,UAFb,EAEyB,KAAK,CAF9B,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPsG,QAAQ,CAAC3H,SAFF,EAEa,qBAFb,EAEoC,KAAK,CAFzC,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPsG,QAAQ,CAAC3H,SAFF,EAEa,mBAFb,EAEkC,KAAK,CAFvC,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,EADD,CAAD,EAEPsG,QAAQ,CAAC3H,SAFF,EAEa,eAFb,EAE8B,KAAK,CAFnC,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,CAAC,MAAD,CADD,CAAD,EAEPsG,QAAQ,CAAC3H,SAFF,EAEa,UAFb,EAEyB,KAAK,CAF9B,CAAV;;EAGAE,UAAU,CAAC,CACPsB,OAAO,CAAC,EAAD,EAAK2F,cAAL,CADA,CAAD,EAEPQ,QAAQ,CAAC3H,SAFF,EAEa,QAFb,EAEuB,KAAK,CAF5B,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,CAAC,IAAD,CADD,CAAD,EAEPsG,QAAQ,CAAC3H,SAFF,EAEa,eAFb,EAE8B,KAAK,CAFnC,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,CAAC,IAAD,CADD,CAAD,EAEPsG,QAAQ,CAAC3H,SAFF,EAEa,cAFb,EAE6B,KAAK,CAFlC,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,EADD,CAAD,EAEPsG,QAAQ,CAAC3H,SAFF,EAEa,QAFb,EAEuB,KAAK,CAF5B,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,EADD,CAAD,EAEPsG,QAAQ,CAAC3H,SAFF,EAEa,cAFb,EAE6B,KAAK,CAFlC,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,EADD,CAAD,EAEPsG,QAAQ,CAAC3H,SAFF,EAEa,eAFb,EAE8B,KAAK,CAFnC,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,CAAC,MAAD,CADD,CAAD,EAEPsG,QAAQ,CAAC3H,SAFF,EAEa,WAFb,EAE0B,KAAK,CAF/B,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPsG,QAAQ,CAAC3H,SAFF,EAEa,cAFb,EAE6B,KAAK,CAFlC,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,CAAC,IAAD,CADD,CAAD,EAEPsG,QAAQ,CAAC3H,SAFF,EAEa,WAFb,EAE0B,KAAK,CAF/B,CAAV;;EAGAE,UAAU,CAAC,CACPmB,QAAQ,CAAC,KAAD,CADD,CAAD,EAEPsG,QAAQ,CAAC3H,SAFF,EAEa,kBAFb,EAEiC,KAAK,CAFtC,CAAV;;EAGAE,UAAU,CAAC,CACPuB,KAAK,EADE,CAAD,EAEPkG,QAAQ,CAAC3H,SAFF,EAEa,eAFb,EAE8B,KAAK,CAFnC,CAAV;;EAGAE,UAAU,CAAC,CACPuB,KAAK,EADE,CAAD,EAEPkG,QAAQ,CAAC3H,SAFF,EAEa,SAFb,EAEwB,KAAK,CAF7B,CAAV;;EAGAE,UAAU,CAAC,CACPuB,KAAK,EADE,CAAD,EAEPkG,QAAQ,CAAC3H,SAFF,EAEa,WAFb,EAE0B,KAAK,CAF/B,CAAV;;EAGAE,UAAU,CAAC,CACPuB,KAAK,EADE,CAAD,EAEPkG,QAAQ,CAAC3H,SAFF,EAEa,mBAFb,EAEkC,KAAK,CAFvC,CAAV;;EAGAE,UAAU,CAAC,CACPuB,KAAK,EADE,CAAD,EAEPkG,QAAQ,CAAC3H,SAFF,EAEa,UAFb,EAEyB,KAAK,CAF9B,CAAV;;EAGAE,UAAU,CAAC,CACPuB,KAAK,EADE,CAAD,EAEPkG,QAAQ,CAAC3H,SAFF,EAEa,WAFb,EAE0B,KAAK,CAF/B,CAAV;;EAGAE,UAAU,CAAC,CACPuB,KAAK,EADE,CAAD,EAEPkG,QAAQ,CAAC3H,SAFF,EAEa,UAFb,EAEyB,KAAK,CAF9B,CAAV;;EAGAE,UAAU,CAAC,CACPuB,KAAK,EADE,CAAD,EAEPkG,QAAQ,CAAC3H,SAFF,EAEa,aAFb,EAE4B,KAAK,CAFjC,CAAV;;EAGAE,UAAU,CAAC,CACPuB,KAAK,EADE,CAAD,EAEPkG,QAAQ,CAAC3H,SAFF,EAEa,cAFb,EAE6B,KAAK,CAFlC,CAAV;;EAGAE,UAAU,CAAC,CACPuB,KAAK,EADE,CAAD,EAEPkG,QAAQ,CAAC3H,SAFF,EAEa,aAFb,EAE4B,KAAK,CAFjC,CAAV;;EAGAE,UAAU,CAAC,CACPuB,KAAK,EADE,CAAD,EAEPkG,QAAQ,CAAC3H,SAFF,EAEa,eAFb,EAE8B,KAAK,CAFnC,CAAV;;EAGAE,UAAU,CAAC,CACPuB,KAAK,EADE,CAAD,EAEPkG,QAAQ,CAAC3H,SAFF,EAEa,gBAFb,EAE+B,KAAK,CAFpC,CAAV;;EAGAE,UAAU,CAAC,CACPuB,KAAK,EADE,CAAD,EAEPkG,QAAQ,CAAC3H,SAFF,EAEa,cAFb,EAE6B,KAAK,CAFlC,CAAV;;EAGAE,UAAU,CAAC,CACPuB,KAAK,EADE,CAAD,EAEPkG,QAAQ,CAAC3H,SAFF,EAEa,eAFb,EAE8B,KAAK,CAFnC,CAAV;;EAGAE,UAAU,CAAC,CACPuB,KAAK,EADE,CAAD,EAEPkG,QAAQ,CAAC3H,SAFF,EAEa,cAFb,EAE6B,KAAK,CAFlC,CAAV;;EAGAE,UAAU,CAAC,CACPuB,KAAK,EADE,CAAD,EAEPkG,QAAQ,CAAC3H,SAFF,EAEa,aAFb,EAE4B,KAAK,CAFjC,CAAV;;EAGAE,UAAU,CAAC,CACPuB,KAAK,EADE,CAAD,EAEPkG,QAAQ,CAAC3H,SAFF,EAEa,YAFb,EAE2B,KAAK,CAFhC,CAAV;;EAGAE,UAAU,CAAC,CACPuB,KAAK,EADE,CAAD,EAEPkG,QAAQ,CAAC3H,SAFF,EAEa,aAFb,EAE4B,KAAK,CAFjC,CAAV;;EAGAE,UAAU,CAAC,CACPuB,KAAK,EADE,CAAD,EAEPkG,QAAQ,CAAC3H,SAFF,EAEa,cAFb,EAE6B,KAAK,CAFlC,CAAV;;EAGAE,UAAU,CAAC,CACPuB,KAAK,EADE,CAAD,EAEPkG,QAAQ,CAAC3H,SAFF,EAEa,eAFb,EAE8B,KAAK,CAFnC,CAAV;;EAGAE,UAAU,CAAC,CACPuB,KAAK,EADE,CAAD,EAEPkG,QAAQ,CAAC3H,SAFF,EAEa,cAFb,EAE6B,KAAK,CAFlC,CAAV;;EAGAE,UAAU,CAAC,CACPuB,KAAK,EADE,CAAD,EAEPkG,QAAQ,CAAC3H,SAFF,EAEa,eAFb,EAE8B,KAAK,CAFnC,CAAV;;EAGA2H,QAAQ,GAAGiB,UAAU,GAAG1I,UAAU,CAAC,CAC/BoB,qBAD+B,CAAD,EAE/BqG,QAF+B,CAAlC;EAGA,OAAOA,QAAP;AACH,CArvJ6B,CAqvJ5B3G,SArvJ4B,CAA9B;;AAsvJA,SAAS2G,QAAT"},"metadata":{},"sourceType":"module"}